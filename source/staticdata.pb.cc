// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: staticdata.proto

#include "staticdata.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_staticdata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_House_staticdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_staticdata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HousePosition_staticdata_2eproto;
namespace protobuf {
namespace housedata {
class HouseDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HouseData> _instance;
} _HouseData_default_instance_;
class HousePositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HousePosition> _instance;
} _HousePosition_default_instance_;
class HouseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<House> _instance;
} _House_default_instance_;
}  // namespace housedata
}  // namespace protobuf
static void InitDefaultsscc_info_House_staticdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf::housedata::_House_default_instance_;
    new (ptr) ::protobuf::housedata::House();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf::housedata::House::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_House_staticdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_House_staticdata_2eproto}, {
      &scc_info_HousePosition_staticdata_2eproto.base,}};

static void InitDefaultsscc_info_HouseData_staticdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf::housedata::_HouseData_default_instance_;
    new (ptr) ::protobuf::housedata::HouseData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf::housedata::HouseData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HouseData_staticdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HouseData_staticdata_2eproto}, {
      &scc_info_House_staticdata_2eproto.base,}};

static void InitDefaultsscc_info_HousePosition_staticdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf::housedata::_HousePosition_default_instance_;
    new (ptr) ::protobuf::housedata::HousePosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf::housedata::HousePosition::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HousePosition_staticdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HousePosition_staticdata_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_staticdata_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_staticdata_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_staticdata_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_staticdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::HouseData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::HouseData, house_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::HousePosition, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::HousePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::HousePosition, pos_x_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::HousePosition, pos_y_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::HousePosition, pos_z_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, house_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, name_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, unknownstring_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, price_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, beds_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, houseposition_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, size_sqm_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, guildhall_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, city_),
  PROTOBUF_FIELD_OFFSET(::protobuf::housedata::House, shop_),
  4,
  0,
  1,
  5,
  6,
  3,
  7,
  8,
  2,
  9,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protobuf::housedata::HouseData)},
  { 6, 14, sizeof(::protobuf::housedata::HousePosition)},
  { 17, 32, sizeof(::protobuf::housedata::House)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::housedata::_HouseData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::housedata::_HousePosition_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::housedata::_House_default_instance_),
};

const char descriptor_table_protodef_staticdata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020staticdata.proto\022\022protobuf.housedata\"5"
  "\n\tHouseData\022(\n\005house\030\003 \003(\0132\031.protobuf.ho"
  "usedata.House\"<\n\rHousePosition\022\r\n\005pos_x\030"
  "\001 \001(\r\022\r\n\005pos_y\030\002 \001(\r\022\r\n\005pos_z\030\003 \001(\r\"\326\001\n\005"
  "House\022\020\n\010house_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\025\n"
  "\runknownstring\030\003 \001(\t\022\r\n\005price\030\004 \001(\r\022\014\n\004b"
  "eds\030\005 \001(\r\0228\n\rhousePosition\030\006 \001(\0132!.proto"
  "buf.housedata.HousePosition\022\020\n\010size_sqm\030"
  "\007 \001(\r\022\021\n\tguildhall\030\010 \001(\010\022\014\n\004city\030\t \001(\t\022\014"
  "\n\004shop\030\n \001(\010"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_staticdata_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_staticdata_2eproto_sccs[3] = {
  &scc_info_House_staticdata_2eproto.base,
  &scc_info_HouseData_staticdata_2eproto.base,
  &scc_info_HousePosition_staticdata_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_staticdata_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_staticdata_2eproto = {
  false, false, descriptor_table_protodef_staticdata_2eproto, "staticdata.proto", 372,
  &descriptor_table_staticdata_2eproto_once, descriptor_table_staticdata_2eproto_sccs, descriptor_table_staticdata_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_staticdata_2eproto::offsets,
  file_level_metadata_staticdata_2eproto, 3, file_level_enum_descriptors_staticdata_2eproto, file_level_service_descriptors_staticdata_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_staticdata_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_staticdata_2eproto)), true);
namespace protobuf {
namespace housedata {

// ===================================================================

void HouseData::InitAsDefaultInstance() {
}
class HouseData::_Internal {
 public:
};

HouseData::HouseData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  house_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.housedata.HouseData)
}
HouseData::HouseData(const HouseData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      house_(from.house_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf.housedata.HouseData)
}

void HouseData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HouseData_staticdata_2eproto.base);
}

HouseData::~HouseData() {
  // @@protoc_insertion_point(destructor:protobuf.housedata.HouseData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HouseData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HouseData::ArenaDtor(void* object) {
  HouseData* _this = reinterpret_cast< HouseData* >(object);
  (void)_this;
}
void HouseData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HouseData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HouseData& HouseData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HouseData_staticdata_2eproto.base);
  return *internal_default_instance();
}


void HouseData::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.housedata.HouseData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  house_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HouseData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .protobuf.housedata.House house = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_house(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HouseData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.housedata.HouseData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protobuf.housedata.House house = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_house_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_house(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.housedata.HouseData)
  return target;
}

size_t HouseData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.housedata.HouseData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf.housedata.House house = 3;
  total_size += 1UL * this->_internal_house_size();
  for (const auto& msg : this->house_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HouseData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.housedata.HouseData)
  GOOGLE_DCHECK_NE(&from, this);
  const HouseData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HouseData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.housedata.HouseData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.housedata.HouseData)
    MergeFrom(*source);
  }
}

void HouseData::MergeFrom(const HouseData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.housedata.HouseData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  house_.MergeFrom(from.house_);
}

void HouseData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.housedata.HouseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HouseData::CopyFrom(const HouseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.housedata.HouseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HouseData::IsInitialized() const {
  return true;
}

void HouseData::InternalSwap(HouseData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  house_.InternalSwap(&other->house_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HouseData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HousePosition::InitAsDefaultInstance() {
}
class HousePosition::_Internal {
 public:
  using HasBits = decltype(std::declval<HousePosition>()._has_bits_);
  static void set_has_pos_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pos_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_pos_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

HousePosition::HousePosition(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.housedata.HousePosition)
}
HousePosition::HousePosition(const HousePosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&pos_x_, &from.pos_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_z_) -
    reinterpret_cast<char*>(&pos_x_)) + sizeof(pos_z_));
  // @@protoc_insertion_point(copy_constructor:protobuf.housedata.HousePosition)
}

void HousePosition::SharedCtor() {
  ::memset(&pos_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_z_) -
      reinterpret_cast<char*>(&pos_x_)) + sizeof(pos_z_));
}

HousePosition::~HousePosition() {
  // @@protoc_insertion_point(destructor:protobuf.housedata.HousePosition)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HousePosition::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HousePosition::ArenaDtor(void* object) {
  HousePosition* _this = reinterpret_cast< HousePosition* >(object);
  (void)_this;
}
void HousePosition::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HousePosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HousePosition& HousePosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HousePosition_staticdata_2eproto.base);
  return *internal_default_instance();
}


void HousePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.housedata.HousePosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&pos_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pos_z_) -
        reinterpret_cast<char*>(&pos_x_)) + sizeof(pos_z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HousePosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 pos_x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_pos_x(&has_bits);
          pos_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 pos_y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_pos_y(&has_bits);
          pos_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 pos_z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_pos_z(&has_bits);
          pos_z_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HousePosition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.housedata.HousePosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pos_x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_pos_x(), target);
  }

  // optional uint32 pos_y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_pos_y(), target);
  }

  // optional uint32 pos_z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_pos_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.housedata.HousePosition)
  return target;
}

size_t HousePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.housedata.HousePosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 pos_x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_pos_x());
    }

    // optional uint32 pos_y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_pos_y());
    }

    // optional uint32 pos_z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_pos_z());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HousePosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.housedata.HousePosition)
  GOOGLE_DCHECK_NE(&from, this);
  const HousePosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HousePosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.housedata.HousePosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.housedata.HousePosition)
    MergeFrom(*source);
  }
}

void HousePosition::MergeFrom(const HousePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.housedata.HousePosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      pos_x_ = from.pos_x_;
    }
    if (cached_has_bits & 0x00000002u) {
      pos_y_ = from.pos_y_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_z_ = from.pos_z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HousePosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.housedata.HousePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HousePosition::CopyFrom(const HousePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.housedata.HousePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HousePosition::IsInitialized() const {
  return true;
}

void HousePosition::InternalSwap(HousePosition* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HousePosition, pos_z_)
      + sizeof(HousePosition::pos_z_)
      - PROTOBUF_FIELD_OFFSET(HousePosition, pos_x_)>(
          reinterpret_cast<char*>(&pos_x_),
          reinterpret_cast<char*>(&other->pos_x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HousePosition::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void House::InitAsDefaultInstance() {
  ::protobuf::housedata::_House_default_instance_._instance.get_mutable()->houseposition_ = const_cast< ::protobuf::housedata::HousePosition*>(
      ::protobuf::housedata::HousePosition::internal_default_instance());
}
class House::_Internal {
 public:
  using HasBits = decltype(std::declval<House>()._has_bits_);
  static void set_has_house_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_unknownstring(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_price(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_beds(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::protobuf::housedata::HousePosition& houseposition(const House* msg);
  static void set_has_houseposition(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_size_sqm(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_guildhall(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_city(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_shop(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

const ::protobuf::housedata::HousePosition&
House::_Internal::houseposition(const House* msg) {
  return *msg->houseposition_;
}
House::House(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.housedata.House)
}
House::House(const House& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  unknownstring_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_unknownstring()) {
    unknownstring_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_unknownstring(),
      GetArena());
  }
  city_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_city()) {
    city_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_city(),
      GetArena());
  }
  if (from._internal_has_houseposition()) {
    houseposition_ = new ::protobuf::housedata::HousePosition(*from.houseposition_);
  } else {
    houseposition_ = nullptr;
  }
  ::memcpy(&house_id_, &from.house_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&shop_) -
    reinterpret_cast<char*>(&house_id_)) + sizeof(shop_));
  // @@protoc_insertion_point(copy_constructor:protobuf.housedata.House)
}

void House::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_House_staticdata_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unknownstring_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&houseposition_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shop_) -
      reinterpret_cast<char*>(&houseposition_)) + sizeof(shop_));
}

House::~House() {
  // @@protoc_insertion_point(destructor:protobuf.housedata.House)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void House::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unknownstring_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete houseposition_;
}

void House::ArenaDtor(void* object) {
  House* _this = reinterpret_cast< House* >(object);
  (void)_this;
}
void House::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void House::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const House& House::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_House_staticdata_2eproto.base);
  return *internal_default_instance();
}


void House::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.housedata.House)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      unknownstring_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      city_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(houseposition_ != nullptr);
      houseposition_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&house_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_sqm_) -
        reinterpret_cast<char*>(&house_id_)) + sizeof(size_sqm_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&guildhall_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&shop_) -
        reinterpret_cast<char*>(&guildhall_)) + sizeof(shop_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* House::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 house_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_house_id(&has_bits);
          house_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protobuf.housedata.House.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string unknownstring = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_unknownstring();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protobuf.housedata.House.unknownstring");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 price = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_price(&has_bits);
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 beds = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_beds(&has_bits);
          beds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .protobuf.housedata.HousePosition housePosition = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_houseposition(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 size_sqm = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_size_sqm(&has_bits);
          size_sqm_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool guildhall = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_guildhall(&has_bits);
          guildhall_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string city = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_city();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protobuf.housedata.House.city");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool shop = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_shop(&has_bits);
          shop_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* House::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.housedata.House)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 house_id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_house_id(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "protobuf.housedata.House.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string unknownstring = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_unknownstring().data(), static_cast<int>(this->_internal_unknownstring().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "protobuf.housedata.House.unknownstring");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_unknownstring(), target);
  }

  // optional uint32 price = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_price(), target);
  }

  // optional uint32 beds = 5;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_beds(), target);
  }

  // optional .protobuf.housedata.HousePosition housePosition = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::houseposition(this), target, stream);
  }

  // optional uint32 size_sqm = 7;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_size_sqm(), target);
  }

  // optional bool guildhall = 8;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_guildhall(), target);
  }

  // optional string city = 9;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_city().data(), static_cast<int>(this->_internal_city().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "protobuf.housedata.House.city");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_city(), target);
  }

  // optional bool shop = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_shop(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.housedata.House)
  return target;
}

size_t House::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.housedata.House)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string unknownstring = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_unknownstring());
    }

    // optional string city = 9;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_city());
    }

    // optional .protobuf.housedata.HousePosition housePosition = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *houseposition_);
    }

    // optional uint32 house_id = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_house_id());
    }

    // optional uint32 price = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_price());
    }

    // optional uint32 beds = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_beds());
    }

    // optional uint32 size_sqm = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_size_sqm());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional bool guildhall = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional bool shop = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void House::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.housedata.House)
  GOOGLE_DCHECK_NE(&from, this);
  const House* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<House>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.housedata.House)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.housedata.House)
    MergeFrom(*source);
  }
}

void House::MergeFrom(const House& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.housedata.House)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_unknownstring(from._internal_unknownstring());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_city(from._internal_city());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_houseposition()->::protobuf::housedata::HousePosition::MergeFrom(from._internal_houseposition());
    }
    if (cached_has_bits & 0x00000010u) {
      house_id_ = from.house_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000040u) {
      beds_ = from.beds_;
    }
    if (cached_has_bits & 0x00000080u) {
      size_sqm_ = from.size_sqm_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      guildhall_ = from.guildhall_;
    }
    if (cached_has_bits & 0x00000200u) {
      shop_ = from.shop_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void House::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.housedata.House)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void House::CopyFrom(const House& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.housedata.House)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool House::IsInitialized() const {
  return true;
}

void House::InternalSwap(House* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  unknownstring_.Swap(&other->unknownstring_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  city_.Swap(&other->city_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(House, shop_)
      + sizeof(House::shop_)
      - PROTOBUF_FIELD_OFFSET(House, houseposition_)>(
          reinterpret_cast<char*>(&houseposition_),
          reinterpret_cast<char*>(&other->houseposition_));
}

::PROTOBUF_NAMESPACE_ID::Metadata House::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace housedata
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protobuf::housedata::HouseData* Arena::CreateMaybeMessage< ::protobuf::housedata::HouseData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::housedata::HouseData >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::housedata::HousePosition* Arena::CreateMaybeMessage< ::protobuf::housedata::HousePosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::housedata::HousePosition >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf::housedata::House* Arena::CreateMaybeMessage< ::protobuf::housedata::House >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf::housedata::House >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
