// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: staticmapdata.proto

#include "staticmapdata.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_staticmapdata_2eproto::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_House_staticmapdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_staticmapdata_2eproto::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_HouseData_staticmapdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_staticmapdata_2eproto::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HousePosition_staticmapdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_staticmapdata_2eproto::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HousePositionTopLeft_staticmapdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_staticmapdata_2eproto::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HouseSerialize_staticmapdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_staticmapdata_2eproto::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HouseSerializeSqm_staticmapdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_staticmapdata_2eproto::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HouseSizeSquare_staticmapdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_staticmapdata_2eproto::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SqmIteratorValue_staticmapdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_staticmapdata_2eproto::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SqmSerialize_staticmapdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_staticmapdata_2eproto::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StaticMapData_staticmapdata_2eproto;
namespace protobuf {
	namespace staticdata {
		class StaticDataDefaultTypeInternal {
		public:
			::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StaticData> _instance;
		} _StaticData_default_instance_;
		class HousePositionDefaultTypeInternal {
		public:
			::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HousePosition> _instance;
		} _HousePosition_default_instance_;
		class HouseDefaultTypeInternal {
		public:
			::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<House> _instance;
		} _House_default_instance_;
		class HousePositionTopLeftDefaultTypeInternal {
		public:
			::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HousePositionTopLeft> _instance;
		} _HousePositionTopLeft_default_instance_;
		class HouseSizeSquareDefaultTypeInternal {
		public:
			::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HouseSizeSquare> _instance;
		} _HouseSizeSquare_default_instance_;
		class SqmIteratorValueDefaultTypeInternal {
		public:
			::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SqmIteratorValue> _instance;
		} _SqmIteratorValue_default_instance_;
		class SqmSerializeDefaultTypeInternal {
		public:
			::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SqmSerialize> _instance;
		} _SqmSerialize_default_instance_;
		class HouseSerializeSqmDefaultTypeInternal {
		public:
			::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HouseSerializeSqm> _instance;
		} _HouseSerializeSqm_default_instance_;
		class HouseSerializeDefaultTypeInternal {
		public:
			::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HouseSerialize> _instance;
		} _HouseSerialize_default_instance_;
		class HouseDataDefaultTypeInternal {
		public:
			::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HouseData> _instance;
		} _HouseData_default_instance_;
		class StaticMapDataDefaultTypeInternal {
		public:
			::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StaticMapData> _instance;
		} _StaticMapData_default_instance_;
	}  // namespace staticdata
}  // namespace protobuf
static void InitDefaultsscc_info_House_staticmapdata_2eproto() {
	GOOGLE_PROTOBUF_VERIFY_VERSION;

	{
		void* ptr = &::protobuf::staticdata::_House_default_instance_;
		new (ptr) ::protobuf::staticdata::House();
		::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
	}
	::protobuf::staticdata::House::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_House_staticmapdata_2eproto =
	{ {ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_House_staticmapdata_2eproto}, {
	  &scc_info_HousePosition_staticmapdata_2eproto.base,} };

	static void InitDefaultsscc_info_HouseData_staticmapdata_2eproto() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

		{
			void* ptr = &::protobuf::staticdata::_HouseData_default_instance_;
			new (ptr) ::protobuf::staticdata::HouseData();
			::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
		}
		::protobuf::staticdata::HouseData::InitAsDefaultInstance();
	}

	::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_HouseData_staticmapdata_2eproto =
	{ {ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_HouseData_staticmapdata_2eproto}, {
	  &scc_info_HousePositionTopLeft_staticmapdata_2eproto.base,
	  &scc_info_HouseSizeSquare_staticmapdata_2eproto.base,
	  &scc_info_HouseSerialize_staticmapdata_2eproto.base,} };

	static void InitDefaultsscc_info_HousePosition_staticmapdata_2eproto() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

		{
			void* ptr = &::protobuf::staticdata::_HousePosition_default_instance_;
			new (ptr) ::protobuf::staticdata::HousePosition();
			::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
		}
		::protobuf::staticdata::HousePosition::InitAsDefaultInstance();
	}

	::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HousePosition_staticmapdata_2eproto =
	{ {ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HousePosition_staticmapdata_2eproto}, {} };

	static void InitDefaultsscc_info_HousePositionTopLeft_staticmapdata_2eproto() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

		{
			void* ptr = &::protobuf::staticdata::_HousePositionTopLeft_default_instance_;
			new (ptr) ::protobuf::staticdata::HousePositionTopLeft();
			::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
		}
		::protobuf::staticdata::HousePositionTopLeft::InitAsDefaultInstance();
	}

	::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HousePositionTopLeft_staticmapdata_2eproto =
	{ {ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HousePositionTopLeft_staticmapdata_2eproto}, {} };

	static void InitDefaultsscc_info_HouseSerialize_staticmapdata_2eproto() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

		{
			void* ptr = &::protobuf::staticdata::_HouseSerialize_default_instance_;
			new (ptr) ::protobuf::staticdata::HouseSerialize();
			::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
		}
		::protobuf::staticdata::HouseSerialize::InitAsDefaultInstance();
	}

	::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HouseSerialize_staticmapdata_2eproto =
	{ {ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HouseSerialize_staticmapdata_2eproto}, {
	  &scc_info_HouseSerializeSqm_staticmapdata_2eproto.base,} };

	static void InitDefaultsscc_info_HouseSerializeSqm_staticmapdata_2eproto() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

		{
			void* ptr = &::protobuf::staticdata::_HouseSerializeSqm_default_instance_;
			new (ptr) ::protobuf::staticdata::HouseSerializeSqm();
			::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
		}
		::protobuf::staticdata::HouseSerializeSqm::InitAsDefaultInstance();
	}

	::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_HouseSerializeSqm_staticmapdata_2eproto =
	{ {ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_HouseSerializeSqm_staticmapdata_2eproto}, {
	  &scc_info_SqmSerialize_staticmapdata_2eproto.base,} };

	static void InitDefaultsscc_info_HouseSizeSquare_staticmapdata_2eproto() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

		{
			void* ptr = &::protobuf::staticdata::_HouseSizeSquare_default_instance_;
			new (ptr) ::protobuf::staticdata::HouseSizeSquare();
			::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
		}
		::protobuf::staticdata::HouseSizeSquare::InitAsDefaultInstance();
	}

	::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HouseSizeSquare_staticmapdata_2eproto =
	{ {ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HouseSizeSquare_staticmapdata_2eproto}, {} };

	static void InitDefaultsscc_info_SqmIteratorValue_staticmapdata_2eproto() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

		{
			void* ptr = &::protobuf::staticdata::_SqmIteratorValue_default_instance_;
			new (ptr) ::protobuf::staticdata::SqmIteratorValue();
			::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
		}
		::protobuf::staticdata::SqmIteratorValue::InitAsDefaultInstance();
	}

	::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SqmIteratorValue_staticmapdata_2eproto =
	{ {ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SqmIteratorValue_staticmapdata_2eproto}, {} };

	static void InitDefaultsscc_info_SqmSerialize_staticmapdata_2eproto() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

		{
			void* ptr = &::protobuf::staticdata::_SqmSerialize_default_instance_;
			new (ptr) ::protobuf::staticdata::SqmSerialize();
			::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
		}
		::protobuf::staticdata::SqmSerialize::InitAsDefaultInstance();
	}

	::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SqmSerialize_staticmapdata_2eproto =
	{ {ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SqmSerialize_staticmapdata_2eproto}, {
	  &scc_info_SqmIteratorValue_staticmapdata_2eproto.base,} };

	static void InitDefaultsscc_info_StaticData_staticmapdata_2eproto() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

		{
			void* ptr = &::protobuf::staticdata::_StaticData_default_instance_;
			new (ptr) ::protobuf::staticdata::StaticData();
			::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
		}
		::protobuf::staticdata::StaticData::InitAsDefaultInstance();
	}

	::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_StaticData_staticmapdata_2eproto =
	{ {ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_StaticData_staticmapdata_2eproto}, {
	  &scc_info_StaticMapData_staticmapdata_2eproto.base,
	  &scc_info_House_staticmapdata_2eproto.base,} };

	static void InitDefaultsscc_info_StaticMapData_staticmapdata_2eproto() {
		GOOGLE_PROTOBUF_VERIFY_VERSION;

		{
			void* ptr = &::protobuf::staticdata::_StaticMapData_default_instance_;
			new (ptr) ::protobuf::staticdata::StaticMapData();
			::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
		}
		::protobuf::staticdata::StaticMapData::InitAsDefaultInstance();
	}

	::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_StaticMapData_staticmapdata_2eproto =
	{ {ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_StaticMapData_staticmapdata_2eproto}, {
	  &scc_info_HouseData_staticmapdata_2eproto.base,} };

	static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_staticmapdata_2eproto[11];
	static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_staticmapdata_2eproto = nullptr;
	static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_staticmapdata_2eproto = nullptr;

	const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_staticmapdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
	  ~0u,  // no _has_bits_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::StaticData, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::StaticData, mapdata_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::StaticData, house_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HousePosition, _has_bits_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HousePosition, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HousePosition, pos_x_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HousePosition, pos_y_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HousePosition, pos_z_),
	  0,
	  1,
	  2,
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, _has_bits_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, house_id_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, name_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, unknownstring_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, price_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, beds_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, houseposition_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, size_sqm_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, guildhall_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, city_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::House, shop_),
	  4,
	  0,
	  1,
	  5,
	  6,
	  3,
	  7,
	  8,
	  2,
	  9,
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HousePositionTopLeft, _has_bits_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HousePositionTopLeft, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HousePositionTopLeft, positionx_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HousePositionTopLeft, positiony_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HousePositionTopLeft, positionz_),
	  0,
	  1,
	  2,
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseSizeSquare, _has_bits_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseSizeSquare, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseSizeSquare, positionx_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseSizeSquare, positiony_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseSizeSquare, positionz_),
	  0,
	  1,
	  2,
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::SqmIteratorValue, _has_bits_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::SqmIteratorValue, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::SqmIteratorValue, clientid_),
	  0,
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::SqmSerialize, _has_bits_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::SqmSerialize, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::SqmSerialize, item_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::SqmSerialize, jumpempty_),
	  ~0u,
	  0,
	  ~0u,  // no _has_bits_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseSerializeSqm, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseSerializeSqm, sqmserialize_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseSerialize, _has_bits_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseSerialize, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseSerialize, housesqm_),
	  0,
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseData, _has_bits_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseData, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseData, topleft_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseData, housesquare_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::HouseData, serialize_),
	  0,
	  1,
	  2,
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::StaticMapData, _has_bits_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::StaticMapData, _internal_metadata_),
	  ~0u,  // no _extensions_
	  ~0u,  // no _oneof_case_
	  ~0u,  // no _weak_field_map_
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::StaticMapData, houseid_),
	  PROTOBUF_FIELD_OFFSET(::protobuf::staticdata::StaticMapData, housedata_),
	  1,
	  0,
	};
	static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
	  { 0, -1, sizeof(::protobuf::staticdata::StaticData)},
	  { 7, 15, sizeof(::protobuf::staticdata::HousePosition)},
	  { 18, 33, sizeof(::protobuf::staticdata::House)},
	  { 43, 51, sizeof(::protobuf::staticdata::HousePositionTopLeft)},
	  { 54, 62, sizeof(::protobuf::staticdata::HouseSizeSquare)},
	  { 65, 71, sizeof(::protobuf::staticdata::SqmIteratorValue)},
	  { 72, 79, sizeof(::protobuf::staticdata::SqmSerialize)},
	  { 81, -1, sizeof(::protobuf::staticdata::HouseSerializeSqm)},
	  { 87, 93, sizeof(::protobuf::staticdata::HouseSerialize)},
	  { 94, 102, sizeof(::protobuf::staticdata::HouseData)},
	  { 105, 112, sizeof(::protobuf::staticdata::StaticMapData)},
	};

	static ::PROTOBUF_NAMESPACE_ID::Message const* const file_default_instances[] = {
	  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::staticdata::_StaticData_default_instance_),
	  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::staticdata::_HousePosition_default_instance_),
	  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::staticdata::_House_default_instance_),
	  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::staticdata::_HousePositionTopLeft_default_instance_),
	  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::staticdata::_HouseSizeSquare_default_instance_),
	  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::staticdata::_SqmIteratorValue_default_instance_),
	  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::staticdata::_SqmSerialize_default_instance_),
	  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::staticdata::_HouseSerializeSqm_default_instance_),
	  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::staticdata::_HouseSerialize_default_instance_),
	  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::staticdata::_HouseData_default_instance_),
	  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf::staticdata::_StaticMapData_default_instance_),
	};

	const char descriptor_table_protodef_staticmapdata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
		"\n\023staticmapdata.proto\022\023protobuf.staticda"
		"ta\"l\n\nStaticData\0223\n\007mapdata\030\001 \003(\0132\".prot"
		"obuf.staticdata.StaticMapData\022)\n\005house\030\003"
		" \003(\0132\032.protobuf.staticdata.House\"<\n\rHous"
		"ePosition\022\r\n\005pos_x\030\001 \001(\r\022\r\n\005pos_y\030\002 \001(\r\022"
		"\r\n\005pos_z\030\003 \001(\r\"\327\001\n\005House\022\020\n\010house_id\030\001 \001"
		"(\r\022\014\n\004name\030\002 \001(\t\022\025\n\runknownstring\030\003 \001(\t\022"
		"\r\n\005price\030\004 \001(\r\022\014\n\004beds\030\005 \001(\r\0229\n\rhousePos"
		"ition\030\006 \001(\0132\".protobuf.staticdata.HouseP"
		"osition\022\020\n\010size_sqm\030\007 \001(\r\022\021\n\tguildhall\030\010"
		" \001(\010\022\014\n\004city\030\t \001(\t\022\014\n\004shop\030\n \001(\010\"O\n\024Hous"
		"ePositionTopLeft\022\021\n\tpositionx\030\001 \001(\r\022\021\n\tp"
		"ositiony\030\002 \001(\r\022\021\n\tpositionz\030\003 \001(\r\"J\n\017Hou"
		"seSizeSquare\022\021\n\tpositionx\030\001 \001(\r\022\021\n\tposit"
		"iony\030\002 \001(\r\022\021\n\tpositionz\030\003 \001(\r\"$\n\020SqmIter"
		"atorValue\022\020\n\010clientID\030\001 \001(\r\"V\n\014SqmSerial"
		"ize\0223\n\004item\030\001 \003(\0132%.protobuf.staticdata."
		"SqmIteratorValue\022\021\n\tjumpEmpty\030\002 \001(\r\"L\n\021H"
		"ouseSerializeSqm\0227\n\014sqmserialize\030\003 \003(\0132!"
		".protobuf.staticdata.SqmSerialize\"J\n\016Hou"
		"seSerialize\0228\n\010housesqm\030\002 \001(\0132&.protobuf"
		".staticdata.HouseSerializeSqm\"\272\001\n\tHouseD"
		"ata\022:\n\007topleft\030\001 \001(\0132).protobuf.staticda"
		"ta.HousePositionTopLeft\0229\n\013housesquare\030\002"
		" \001(\0132$.protobuf.staticdata.HouseSizeSqua"
		"re\0226\n\tserialize\030\003 \001(\0132#.protobuf.staticd"
		"ata.HouseSerialize\"S\n\rStaticMapData\022\017\n\007h"
		"ouseid\030\001 \001(\r\0221\n\thousedata\030\002 \001(\0132\036.protob"
		"uf.staticdata.HouseData"
		;
	static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* const descriptor_table_staticmapdata_2eproto_deps[1] = {
	};
	static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase* const descriptor_table_staticmapdata_2eproto_sccs[11] = {
	  &scc_info_House_staticmapdata_2eproto.base,
	  &scc_info_HouseData_staticmapdata_2eproto.base,
	  &scc_info_HousePosition_staticmapdata_2eproto.base,
	  &scc_info_HousePositionTopLeft_staticmapdata_2eproto.base,
	  &scc_info_HouseSerialize_staticmapdata_2eproto.base,
	  &scc_info_HouseSerializeSqm_staticmapdata_2eproto.base,
	  &scc_info_HouseSizeSquare_staticmapdata_2eproto.base,
	  &scc_info_SqmIteratorValue_staticmapdata_2eproto.base,
	  &scc_info_SqmSerialize_staticmapdata_2eproto.base,
	  &scc_info_StaticData_staticmapdata_2eproto.base,
	  &scc_info_StaticMapData_staticmapdata_2eproto.base,
	};
	static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_staticmapdata_2eproto_once;
	const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_staticmapdata_2eproto = {
	  false, false, descriptor_table_protodef_staticmapdata_2eproto, "staticmapdata.proto", 1143,
	  &descriptor_table_staticmapdata_2eproto_once, descriptor_table_staticmapdata_2eproto_sccs, descriptor_table_staticmapdata_2eproto_deps, 11, 0,
	  schemas, file_default_instances, TableStruct_staticmapdata_2eproto::offsets,
	  file_level_metadata_staticmapdata_2eproto, 11, file_level_enum_descriptors_staticmapdata_2eproto, file_level_service_descriptors_staticmapdata_2eproto,
	};

	// Force running AddDescriptors() at dynamic initialization time.
	static bool dynamic_init_dummy_staticmapdata_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_staticmapdata_2eproto)), true);
	namespace protobuf {
		namespace staticdata {

			// ===================================================================

			void StaticData::InitAsDefaultInstance() {
			}
			class StaticData::_Internal {
			public:
			};

			StaticData::StaticData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
				: ::PROTOBUF_NAMESPACE_ID::Message(arena),
				mapdata_(arena),
				house_(arena) {
				SharedCtor();
				RegisterArenaDtor(arena);
				// @@protoc_insertion_point(arena_constructor:protobuf.staticdata.StaticData)
			}
			StaticData::StaticData(const StaticData& from)
				: ::PROTOBUF_NAMESPACE_ID::Message(),
				mapdata_(from.mapdata_),
				house_(from.house_) {
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				// @@protoc_insertion_point(copy_constructor:protobuf.staticdata.StaticData)
			}

			void StaticData::SharedCtor() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StaticData_staticmapdata_2eproto.base);
			}

			StaticData::~StaticData() {
				// @@protoc_insertion_point(destructor:protobuf.staticdata.StaticData)
				SharedDtor();
				_internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			void StaticData::SharedDtor() {
				GOOGLE_DCHECK(GetArena() == nullptr);
			}

			void StaticData::ArenaDtor(void* object) {
				StaticData* _this = reinterpret_cast<StaticData*>(object);
				(void)_this;
			}
			void StaticData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
			}
			void StaticData::SetCachedSize(int size) const {
				_cached_size_.Set(size);
			}
			const StaticData& StaticData::default_instance() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StaticData_staticmapdata_2eproto.base);
				return *internal_default_instance();
			}


			void StaticData::Clear() {
				// @@protoc_insertion_point(message_clear_start:protobuf.staticdata.StaticData)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				mapdata_.Clear();
				house_.Clear();
				_internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			const char* StaticData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
				::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
				while (!ctx->Done(&ptr)) {
					::PROTOBUF_NAMESPACE_ID::uint32 tag;
					ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
					CHK_(ptr);
					switch (tag >> 3) {
						// repeated .protobuf.staticdata.StaticMapData mapdata = 1;
					case 1:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
							ptr -= 1;
							do {
								ptr += 1;
								ptr = ctx->ParseMessage(_internal_add_mapdata(), ptr);
								CHK_(ptr);
								if (!ctx->DataAvailable(ptr)) break;
							} while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
						}
						else goto handle_unusual;
						continue;
						// repeated .protobuf.staticdata.House house = 3;
					case 3:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
							ptr -= 1;
							do {
								ptr += 1;
								ptr = ctx->ParseMessage(_internal_add_house(), ptr);
								CHK_(ptr);
								if (!ctx->DataAvailable(ptr)) break;
							} while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
						}
						else goto handle_unusual;
						continue;
					default: {
					handle_unusual:
						if ((tag & 7) == 4 || tag == 0) {
							ctx->SetLastTag(tag);
							goto success;
						}
						ptr = UnknownFieldParse(tag,
							_internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
							ptr, ctx);
						CHK_(ptr != nullptr);
						continue;
					}
					}  // switch
				}  // while
			success:
				return ptr;
			failure:
				ptr = nullptr;
				goto success;
#undef CHK_
			}

			::PROTOBUF_NAMESPACE_ID::uint8* StaticData::_InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
				// @@protoc_insertion_point(serialize_to_array_start:protobuf.staticdata.StaticData)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				// repeated .protobuf.staticdata.StaticMapData mapdata = 1;
				for (unsigned int i = 0,
					n = static_cast<unsigned int>(this->_internal_mapdata_size()); i < n; i++) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
						InternalWriteMessage(1, this->_internal_mapdata(i), target, stream);
				}

				// repeated .protobuf.staticdata.House house = 3;
				for (unsigned int i = 0,
					n = static_cast<unsigned int>(this->_internal_house_size()); i < n; i++) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
						InternalWriteMessage(3, this->_internal_house(i), target, stream);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
						_internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
				}
				// @@protoc_insertion_point(serialize_to_array_end:protobuf.staticdata.StaticData)
				return target;
			}

			size_t StaticData::ByteSizeLong() const {
				// @@protoc_insertion_point(message_byte_size_start:protobuf.staticdata.StaticData)
				size_t total_size = 0;

				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				// repeated .protobuf.staticdata.StaticMapData mapdata = 1;
				total_size += 1UL * this->_internal_mapdata_size();
				for (const auto& msg : this->mapdata_) {
					total_size +=
						::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
				}

				// repeated .protobuf.staticdata.House house = 3;
				total_size += 1UL * this->_internal_house_size();
				for (const auto& msg : this->house_) {
					total_size +=
						::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
						_internal_metadata_, total_size, &_cached_size_);
				}
				int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
				SetCachedSize(cached_size);
				return total_size;
			}

			void StaticData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_merge_from_start:protobuf.staticdata.StaticData)
				GOOGLE_DCHECK_NE(&from, this);
				const StaticData* source =
					::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StaticData>(
						&from);
				if (source == nullptr) {
					// @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.staticdata.StaticData)
					::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
				}
				else {
					// @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.staticdata.StaticData)
					MergeFrom(*source);
				}
			}

			void StaticData::MergeFrom(const StaticData& from) {
				// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.staticdata.StaticData)
				GOOGLE_DCHECK_NE(&from, this);
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				mapdata_.MergeFrom(from.mapdata_);
				house_.MergeFrom(from.house_);
			}

			void StaticData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_copy_from_start:protobuf.staticdata.StaticData)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			void StaticData::CopyFrom(const StaticData& from) {
				// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.staticdata.StaticData)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			bool StaticData::IsInitialized() const {
				return true;
			}

			void StaticData::InternalSwap(StaticData* other) {
				using std::swap;
				_internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
				mapdata_.InternalSwap(&other->mapdata_);
				house_.InternalSwap(&other->house_);
			}

			::PROTOBUF_NAMESPACE_ID::Metadata StaticData::GetMetadata() const {
				return GetMetadataStatic();
			}


			// ===================================================================

			void HousePosition::InitAsDefaultInstance() {
			}
			class HousePosition::_Internal {
			public:
				using HasBits = decltype(std::declval<HousePosition>()._has_bits_);
				static void set_has_pos_x(HasBits* has_bits) {
					(*has_bits)[0] |= 1u;
				}
				static void set_has_pos_y(HasBits* has_bits) {
					(*has_bits)[0] |= 2u;
				}
				static void set_has_pos_z(HasBits* has_bits) {
					(*has_bits)[0] |= 4u;
				}
			};

			HousePosition::HousePosition(::PROTOBUF_NAMESPACE_ID::Arena* arena)
				: ::PROTOBUF_NAMESPACE_ID::Message(arena) {
				SharedCtor();
				RegisterArenaDtor(arena);
				// @@protoc_insertion_point(arena_constructor:protobuf.staticdata.HousePosition)
			}
			HousePosition::HousePosition(const HousePosition& from)
				: ::PROTOBUF_NAMESPACE_ID::Message(),
				_has_bits_(from._has_bits_) {
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::memcpy(&pos_x_, &from.pos_x_,
					static_cast<size_t>(reinterpret_cast<char*>(&pos_z_) -
						reinterpret_cast<char*>(&pos_x_)) + sizeof(pos_z_));
				// @@protoc_insertion_point(copy_constructor:protobuf.staticdata.HousePosition)
			}

			void HousePosition::SharedCtor() {
				::memset(&pos_x_, 0, static_cast<size_t>(
					reinterpret_cast<char*>(&pos_z_) -
					reinterpret_cast<char*>(&pos_x_)) + sizeof(pos_z_));
			}

			HousePosition::~HousePosition() {
				// @@protoc_insertion_point(destructor:protobuf.staticdata.HousePosition)
				SharedDtor();
				_internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			void HousePosition::SharedDtor() {
				GOOGLE_DCHECK(GetArena() == nullptr);
			}

			void HousePosition::ArenaDtor(void* object) {
				HousePosition* _this = reinterpret_cast<HousePosition*>(object);
				(void)_this;
			}
			void HousePosition::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
			}
			void HousePosition::SetCachedSize(int size) const {
				_cached_size_.Set(size);
			}
			const HousePosition& HousePosition::default_instance() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HousePosition_staticmapdata_2eproto.base);
				return *internal_default_instance();
			}


			void HousePosition::Clear() {
				// @@protoc_insertion_point(message_clear_start:protobuf.staticdata.HousePosition)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					::memset(&pos_x_, 0, static_cast<size_t>(
						reinterpret_cast<char*>(&pos_z_) -
						reinterpret_cast<char*>(&pos_x_)) + sizeof(pos_z_));
				}
				_has_bits_.Clear();
				_internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			const char* HousePosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
				_Internal::HasBits has_bits{};
				::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
				while (!ctx->Done(&ptr)) {
					::PROTOBUF_NAMESPACE_ID::uint32 tag;
					ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
					CHK_(ptr);
					switch (tag >> 3) {
						// optional uint32 pos_x = 1;
					case 1:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
							_Internal::set_has_pos_x(&has_bits);
							pos_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional uint32 pos_y = 2;
					case 2:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
							_Internal::set_has_pos_y(&has_bits);
							pos_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional uint32 pos_z = 3;
					case 3:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
							_Internal::set_has_pos_z(&has_bits);
							pos_z_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
					default: {
					handle_unusual:
						if ((tag & 7) == 4 || tag == 0) {
							ctx->SetLastTag(tag);
							goto success;
						}
						ptr = UnknownFieldParse(tag,
							_internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
							ptr, ctx);
						CHK_(ptr != nullptr);
						continue;
					}
					}  // switch
				}  // while
			success:
				_has_bits_.Or(has_bits);
				return ptr;
			failure:
				ptr = nullptr;
				goto success;
#undef CHK_
			}

			::PROTOBUF_NAMESPACE_ID::uint8* HousePosition::_InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
				// @@protoc_insertion_point(serialize_to_array_start:protobuf.staticdata.HousePosition)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				// optional uint32 pos_x = 1;
				if (cached_has_bits & 0x00000001u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_pos_x(), target);
				}

				// optional uint32 pos_y = 2;
				if (cached_has_bits & 0x00000002u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_pos_y(), target);
				}

				// optional uint32 pos_z = 3;
				if (cached_has_bits & 0x00000004u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_pos_z(), target);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
						_internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
				}
				// @@protoc_insertion_point(serialize_to_array_end:protobuf.staticdata.HousePosition)
				return target;
			}

			size_t HousePosition::ByteSizeLong() const {
				// @@protoc_insertion_point(message_byte_size_start:protobuf.staticdata.HousePosition)
				size_t total_size = 0;

				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					// optional uint32 pos_x = 1;
					if (cached_has_bits & 0x00000001u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_pos_x());
					}

					// optional uint32 pos_y = 2;
					if (cached_has_bits & 0x00000002u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_pos_y());
					}

					// optional uint32 pos_z = 3;
					if (cached_has_bits & 0x00000004u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_pos_z());
					}

				}
				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
						_internal_metadata_, total_size, &_cached_size_);
				}
				int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
				SetCachedSize(cached_size);
				return total_size;
			}

			void HousePosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_merge_from_start:protobuf.staticdata.HousePosition)
				GOOGLE_DCHECK_NE(&from, this);
				const HousePosition* source =
					::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HousePosition>(
						&from);
				if (source == nullptr) {
					// @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.staticdata.HousePosition)
					::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
				}
				else {
					// @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.staticdata.HousePosition)
					MergeFrom(*source);
				}
			}

			void HousePosition::MergeFrom(const HousePosition& from) {
				// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.staticdata.HousePosition)
				GOOGLE_DCHECK_NE(&from, this);
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = from._has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					if (cached_has_bits & 0x00000001u) {
						pos_x_ = from.pos_x_;
					}
					if (cached_has_bits & 0x00000002u) {
						pos_y_ = from.pos_y_;
					}
					if (cached_has_bits & 0x00000004u) {
						pos_z_ = from.pos_z_;
					}
					_has_bits_[0] |= cached_has_bits;
				}
			}

			void HousePosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_copy_from_start:protobuf.staticdata.HousePosition)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			void HousePosition::CopyFrom(const HousePosition& from) {
				// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.staticdata.HousePosition)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			bool HousePosition::IsInitialized() const {
				return true;
			}

			void HousePosition::InternalSwap(HousePosition* other) {
				using std::swap;
				_internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
				swap(_has_bits_[0], other->_has_bits_[0]);
				::PROTOBUF_NAMESPACE_ID::internal::memswap<
					PROTOBUF_FIELD_OFFSET(HousePosition, pos_z_)
					+ sizeof(HousePosition::pos_z_)
					- PROTOBUF_FIELD_OFFSET(HousePosition, pos_x_)>(
						reinterpret_cast<char*>(&pos_x_),
						reinterpret_cast<char*>(&other->pos_x_));
			}

			::PROTOBUF_NAMESPACE_ID::Metadata HousePosition::GetMetadata() const {
				return GetMetadataStatic();
			}


			// ===================================================================

			void House::InitAsDefaultInstance() {
				::protobuf::staticdata::_House_default_instance_._instance.get_mutable()->houseposition_ = const_cast<::protobuf::staticdata::HousePosition*>(
					::protobuf::staticdata::HousePosition::internal_default_instance());
			}
			class House::_Internal {
			public:
				using HasBits = decltype(std::declval<House>()._has_bits_);
				static void set_has_house_id(HasBits* has_bits) {
					(*has_bits)[0] |= 16u;
				}
				static void set_has_name(HasBits* has_bits) {
					(*has_bits)[0] |= 1u;
				}
				static void set_has_unknownstring(HasBits* has_bits) {
					(*has_bits)[0] |= 2u;
				}
				static void set_has_price(HasBits* has_bits) {
					(*has_bits)[0] |= 32u;
				}
				static void set_has_beds(HasBits* has_bits) {
					(*has_bits)[0] |= 64u;
				}
				static const ::protobuf::staticdata::HousePosition& houseposition(const House* msg);
				static void set_has_houseposition(HasBits* has_bits) {
					(*has_bits)[0] |= 8u;
				}
				static void set_has_size_sqm(HasBits* has_bits) {
					(*has_bits)[0] |= 128u;
				}
				static void set_has_guildhall(HasBits* has_bits) {
					(*has_bits)[0] |= 256u;
				}
				static void set_has_city(HasBits* has_bits) {
					(*has_bits)[0] |= 4u;
				}
				static void set_has_shop(HasBits* has_bits) {
					(*has_bits)[0] |= 512u;
				}
			};

			const ::protobuf::staticdata::HousePosition&
				House::_Internal::houseposition(const House* msg) {
				return *msg->houseposition_;
			}
			House::House(::PROTOBUF_NAMESPACE_ID::Arena* arena)
				: ::PROTOBUF_NAMESPACE_ID::Message(arena) {
				SharedCtor();
				RegisterArenaDtor(arena);
				// @@protoc_insertion_point(arena_constructor:protobuf.staticdata.House)
			}
			House::House(const House& from)
				: ::PROTOBUF_NAMESPACE_ID::Message(),
				_has_bits_(from._has_bits_) {
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
				if (from._internal_has_name()) {
					name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
						GetArena());
				}
				unknownstring_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
				if (from._internal_has_unknownstring()) {
					unknownstring_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_unknownstring(),
						GetArena());
				}
				city_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
				if (from._internal_has_city()) {
					city_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_city(),
						GetArena());
				}
				if (from._internal_has_houseposition()) {
					houseposition_ = new ::protobuf::staticdata::HousePosition(*from.houseposition_);
				}
				else {
					houseposition_ = nullptr;
				}
				::memcpy(&house_id_, &from.house_id_,
					static_cast<size_t>(reinterpret_cast<char*>(&shop_) -
						reinterpret_cast<char*>(&house_id_)) + sizeof(shop_));
				// @@protoc_insertion_point(copy_constructor:protobuf.staticdata.House)
			}

			void House::SharedCtor() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_House_staticmapdata_2eproto.base);
				name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
				unknownstring_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
				city_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
				::memset(&houseposition_, 0, static_cast<size_t>(
					reinterpret_cast<char*>(&shop_) -
					reinterpret_cast<char*>(&houseposition_)) + sizeof(shop_));
			}

			House::~House() {
				// @@protoc_insertion_point(destructor:protobuf.staticdata.House)
				SharedDtor();
				_internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			void House::SharedDtor() {
				GOOGLE_DCHECK(GetArena() == nullptr);
				name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
				unknownstring_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
				city_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
				if (this != internal_default_instance()) delete houseposition_;
			}

			void House::ArenaDtor(void* object) {
				House* _this = reinterpret_cast<House*>(object);
				(void)_this;
			}
			void House::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
			}
			void House::SetCachedSize(int size) const {
				_cached_size_.Set(size);
			}
			const House& House::default_instance() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_House_staticmapdata_2eproto.base);
				return *internal_default_instance();
			}


			void House::Clear() {
				// @@protoc_insertion_point(message_clear_start:protobuf.staticdata.House)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x0000000fu) {
					if (cached_has_bits & 0x00000001u) {
						name_.ClearNonDefaultToEmpty();
					}
					if (cached_has_bits & 0x00000002u) {
						unknownstring_.ClearNonDefaultToEmpty();
					}
					if (cached_has_bits & 0x00000004u) {
						city_.ClearNonDefaultToEmpty();
					}
					if (cached_has_bits & 0x00000008u) {
						GOOGLE_DCHECK(houseposition_ != nullptr);
						houseposition_->Clear();
					}
				}
				if (cached_has_bits & 0x000000f0u) {
					::memset(&house_id_, 0, static_cast<size_t>(
						reinterpret_cast<char*>(&size_sqm_) -
						reinterpret_cast<char*>(&house_id_)) + sizeof(size_sqm_));
				}
				if (cached_has_bits & 0x00000300u) {
					::memset(&guildhall_, 0, static_cast<size_t>(
						reinterpret_cast<char*>(&shop_) -
						reinterpret_cast<char*>(&guildhall_)) + sizeof(shop_));
				}
				_has_bits_.Clear();
				_internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			const char* House::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
				_Internal::HasBits has_bits{};
				::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
				while (!ctx->Done(&ptr)) {
					::PROTOBUF_NAMESPACE_ID::uint32 tag;
					ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
					CHK_(ptr);
					switch (tag >> 3) {
						// optional uint32 house_id = 1;
					case 1:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
							_Internal::set_has_house_id(&has_bits);
							house_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional string name = 2;
					case 2:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
							auto str = _internal_mutable_name();
							ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
#ifndef NDEBUG
							::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protobuf.staticdata.House.name");
#endif  // !NDEBUG
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional string unknownstring = 3;
					case 3:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
							auto str = _internal_mutable_unknownstring();
							ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
#ifndef NDEBUG
							::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protobuf.staticdata.House.unknownstring");
#endif  // !NDEBUG
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional uint32 price = 4;
					case 4:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
							_Internal::set_has_price(&has_bits);
							price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional uint32 beds = 5;
					case 5:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
							_Internal::set_has_beds(&has_bits);
							beds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional .protobuf.staticdata.HousePosition housePosition = 6;
					case 6:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
							ptr = ctx->ParseMessage(_internal_mutable_houseposition(), ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional uint32 size_sqm = 7;
					case 7:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
							_Internal::set_has_size_sqm(&has_bits);
							size_sqm_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional bool guildhall = 8;
					case 8:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
							_Internal::set_has_guildhall(&has_bits);
							guildhall_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional string city = 9;
					case 9:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
							auto str = _internal_mutable_city();
							ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
#ifndef NDEBUG
							::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protobuf.staticdata.House.city");
#endif  // !NDEBUG
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional bool shop = 10;
					case 10:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
							_Internal::set_has_shop(&has_bits);
							shop_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
					default: {
					handle_unusual:
						if ((tag & 7) == 4 || tag == 0) {
							ctx->SetLastTag(tag);
							goto success;
						}
						ptr = UnknownFieldParse(tag,
							_internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
							ptr, ctx);
						CHK_(ptr != nullptr);
						continue;
					}
					}  // switch
				}  // while
			success:
				_has_bits_.Or(has_bits);
				return ptr;
			failure:
				ptr = nullptr;
				goto success;
#undef CHK_
			}

			::PROTOBUF_NAMESPACE_ID::uint8* House::_InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
				// @@protoc_insertion_point(serialize_to_array_start:protobuf.staticdata.House)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				// optional uint32 house_id = 1;
				if (cached_has_bits & 0x00000010u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_house_id(), target);
				}

				// optional string name = 2;
				if (cached_has_bits & 0x00000001u) {
					::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
						this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
						::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
						"protobuf.staticdata.House.name");
					target = stream->WriteStringMaybeAliased(
						2, this->_internal_name(), target);
				}

				// optional string unknownstring = 3;
				if (cached_has_bits & 0x00000002u) {
					::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
						this->_internal_unknownstring().data(), static_cast<int>(this->_internal_unknownstring().length()),
						::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
						"protobuf.staticdata.House.unknownstring");
					target = stream->WriteStringMaybeAliased(
						3, this->_internal_unknownstring(), target);
				}

				// optional uint32 price = 4;
				if (cached_has_bits & 0x00000020u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_price(), target);
				}

				// optional uint32 beds = 5;
				if (cached_has_bits & 0x00000040u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_beds(), target);
				}

				// optional .protobuf.staticdata.HousePosition housePosition = 6;
				if (cached_has_bits & 0x00000008u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
						InternalWriteMessage(
							6, _Internal::houseposition(this), target, stream);
				}

				// optional uint32 size_sqm = 7;
				if (cached_has_bits & 0x00000080u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_size_sqm(), target);
				}

				// optional bool guildhall = 8;
				if (cached_has_bits & 0x00000100u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_guildhall(), target);
				}

				// optional string city = 9;
				if (cached_has_bits & 0x00000004u) {
					::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
						this->_internal_city().data(), static_cast<int>(this->_internal_city().length()),
						::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
						"protobuf.staticdata.House.city");
					target = stream->WriteStringMaybeAliased(
						9, this->_internal_city(), target);
				}

				// optional bool shop = 10;
				if (cached_has_bits & 0x00000200u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_shop(), target);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
						_internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
				}
				// @@protoc_insertion_point(serialize_to_array_end:protobuf.staticdata.House)
				return target;
			}

			size_t House::ByteSizeLong() const {
				// @@protoc_insertion_point(message_byte_size_start:protobuf.staticdata.House)
				size_t total_size = 0;

				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x000000ffu) {
					// optional string name = 2;
					if (cached_has_bits & 0x00000001u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
								this->_internal_name());
					}

					// optional string unknownstring = 3;
					if (cached_has_bits & 0x00000002u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
								this->_internal_unknownstring());
					}

					// optional string city = 9;
					if (cached_has_bits & 0x00000004u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
								this->_internal_city());
					}

					// optional .protobuf.staticdata.HousePosition housePosition = 6;
					if (cached_has_bits & 0x00000008u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
								*houseposition_);
					}

					// optional uint32 house_id = 1;
					if (cached_has_bits & 0x00000010u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_house_id());
					}

					// optional uint32 price = 4;
					if (cached_has_bits & 0x00000020u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_price());
					}

					// optional uint32 beds = 5;
					if (cached_has_bits & 0x00000040u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_beds());
					}

					// optional uint32 size_sqm = 7;
					if (cached_has_bits & 0x00000080u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_size_sqm());
					}

				}
				if (cached_has_bits & 0x00000300u) {
					// optional bool guildhall = 8;
					if (cached_has_bits & 0x00000100u) {
						total_size += 1 + 1;
					}

					// optional bool shop = 10;
					if (cached_has_bits & 0x00000200u) {
						total_size += 1 + 1;
					}

				}
				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
						_internal_metadata_, total_size, &_cached_size_);
				}
				int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
				SetCachedSize(cached_size);
				return total_size;
			}

			void House::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_merge_from_start:protobuf.staticdata.House)
				GOOGLE_DCHECK_NE(&from, this);
				const House* source =
					::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<House>(
						&from);
				if (source == nullptr) {
					// @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.staticdata.House)
					::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
				}
				else {
					// @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.staticdata.House)
					MergeFrom(*source);
				}
			}

			void House::MergeFrom(const House& from) {
				// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.staticdata.House)
				GOOGLE_DCHECK_NE(&from, this);
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = from._has_bits_[0];
				if (cached_has_bits & 0x000000ffu) {
					if (cached_has_bits & 0x00000001u) {
						_internal_set_name(from._internal_name());
					}
					if (cached_has_bits & 0x00000002u) {
						_internal_set_unknownstring(from._internal_unknownstring());
					}
					if (cached_has_bits & 0x00000004u) {
						_internal_set_city(from._internal_city());
					}
					if (cached_has_bits & 0x00000008u) {
						_internal_mutable_houseposition()->::protobuf::staticdata::HousePosition::MergeFrom(from._internal_houseposition());
					}
					if (cached_has_bits & 0x00000010u) {
						house_id_ = from.house_id_;
					}
					if (cached_has_bits & 0x00000020u) {
						price_ = from.price_;
					}
					if (cached_has_bits & 0x00000040u) {
						beds_ = from.beds_;
					}
					if (cached_has_bits & 0x00000080u) {
						size_sqm_ = from.size_sqm_;
					}
					_has_bits_[0] |= cached_has_bits;
				}
				if (cached_has_bits & 0x00000300u) {
					if (cached_has_bits & 0x00000100u) {
						guildhall_ = from.guildhall_;
					}
					if (cached_has_bits & 0x00000200u) {
						shop_ = from.shop_;
					}
					_has_bits_[0] |= cached_has_bits;
				}
			}

			void House::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_copy_from_start:protobuf.staticdata.House)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			void House::CopyFrom(const House& from) {
				// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.staticdata.House)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			bool House::IsInitialized() const {
				return true;
			}

			void House::InternalSwap(House* other) {
				using std::swap;
				_internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
				swap(_has_bits_[0], other->_has_bits_[0]);
				name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
				unknownstring_.Swap(&other->unknownstring_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
				city_.Swap(&other->city_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
				::PROTOBUF_NAMESPACE_ID::internal::memswap<
					PROTOBUF_FIELD_OFFSET(House, shop_)
					+ sizeof(House::shop_)
					- PROTOBUF_FIELD_OFFSET(House, houseposition_)>(
						reinterpret_cast<char*>(&houseposition_),
						reinterpret_cast<char*>(&other->houseposition_));
			}

			::PROTOBUF_NAMESPACE_ID::Metadata House::GetMetadata() const {
				return GetMetadataStatic();
			}


			// ===================================================================

			void HousePositionTopLeft::InitAsDefaultInstance() {
			}
			class HousePositionTopLeft::_Internal {
			public:
				using HasBits = decltype(std::declval<HousePositionTopLeft>()._has_bits_);
				static void set_has_positionx(HasBits* has_bits) {
					(*has_bits)[0] |= 1u;
				}
				static void set_has_positiony(HasBits* has_bits) {
					(*has_bits)[0] |= 2u;
				}
				static void set_has_positionz(HasBits* has_bits) {
					(*has_bits)[0] |= 4u;
				}
			};

			HousePositionTopLeft::HousePositionTopLeft(::PROTOBUF_NAMESPACE_ID::Arena* arena)
				: ::PROTOBUF_NAMESPACE_ID::Message(arena) {
				SharedCtor();
				RegisterArenaDtor(arena);
				// @@protoc_insertion_point(arena_constructor:protobuf.staticdata.HousePositionTopLeft)
			}
			HousePositionTopLeft::HousePositionTopLeft(const HousePositionTopLeft& from)
				: ::PROTOBUF_NAMESPACE_ID::Message(),
				_has_bits_(from._has_bits_) {
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::memcpy(&positionx_, &from.positionx_,
					static_cast<size_t>(reinterpret_cast<char*>(&positionz_) -
						reinterpret_cast<char*>(&positionx_)) + sizeof(positionz_));
				// @@protoc_insertion_point(copy_constructor:protobuf.staticdata.HousePositionTopLeft)
			}

			void HousePositionTopLeft::SharedCtor() {
				::memset(&positionx_, 0, static_cast<size_t>(
					reinterpret_cast<char*>(&positionz_) -
					reinterpret_cast<char*>(&positionx_)) + sizeof(positionz_));
			}

			HousePositionTopLeft::~HousePositionTopLeft() {
				// @@protoc_insertion_point(destructor:protobuf.staticdata.HousePositionTopLeft)
				SharedDtor();
				_internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			void HousePositionTopLeft::SharedDtor() {
				GOOGLE_DCHECK(GetArena() == nullptr);
			}

			void HousePositionTopLeft::ArenaDtor(void* object) {
				HousePositionTopLeft* _this = reinterpret_cast<HousePositionTopLeft*>(object);
				(void)_this;
			}
			void HousePositionTopLeft::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
			}
			void HousePositionTopLeft::SetCachedSize(int size) const {
				_cached_size_.Set(size);
			}
			const HousePositionTopLeft& HousePositionTopLeft::default_instance() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HousePositionTopLeft_staticmapdata_2eproto.base);
				return *internal_default_instance();
			}


			void HousePositionTopLeft::Clear() {
				// @@protoc_insertion_point(message_clear_start:protobuf.staticdata.HousePositionTopLeft)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					::memset(&positionx_, 0, static_cast<size_t>(
						reinterpret_cast<char*>(&positionz_) -
						reinterpret_cast<char*>(&positionx_)) + sizeof(positionz_));
				}
				_has_bits_.Clear();
				_internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			const char* HousePositionTopLeft::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
				_Internal::HasBits has_bits{};
				::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
				while (!ctx->Done(&ptr)) {
					::PROTOBUF_NAMESPACE_ID::uint32 tag;
					ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
					CHK_(ptr);
					switch (tag >> 3) {
						// optional uint32 positionx = 1;
					case 1:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
							_Internal::set_has_positionx(&has_bits);
							positionx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional uint32 positiony = 2;
					case 2:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
							_Internal::set_has_positiony(&has_bits);
							positiony_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional uint32 positionz = 3;
					case 3:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
							_Internal::set_has_positionz(&has_bits);
							positionz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
					default: {
					handle_unusual:
						if ((tag & 7) == 4 || tag == 0) {
							ctx->SetLastTag(tag);
							goto success;
						}
						ptr = UnknownFieldParse(tag,
							_internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
							ptr, ctx);
						CHK_(ptr != nullptr);
						continue;
					}
					}  // switch
				}  // while
			success:
				_has_bits_.Or(has_bits);
				return ptr;
			failure:
				ptr = nullptr;
				goto success;
#undef CHK_
			}

			::PROTOBUF_NAMESPACE_ID::uint8* HousePositionTopLeft::_InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
				// @@protoc_insertion_point(serialize_to_array_start:protobuf.staticdata.HousePositionTopLeft)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				// optional uint32 positionx = 1;
				if (cached_has_bits & 0x00000001u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_positionx(), target);
				}

				// optional uint32 positiony = 2;
				if (cached_has_bits & 0x00000002u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_positiony(), target);
				}

				// optional uint32 positionz = 3;
				if (cached_has_bits & 0x00000004u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_positionz(), target);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
						_internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
				}
				// @@protoc_insertion_point(serialize_to_array_end:protobuf.staticdata.HousePositionTopLeft)
				return target;
			}

			size_t HousePositionTopLeft::ByteSizeLong() const {
				// @@protoc_insertion_point(message_byte_size_start:protobuf.staticdata.HousePositionTopLeft)
				size_t total_size = 0;

				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					// optional uint32 positionx = 1;
					if (cached_has_bits & 0x00000001u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_positionx());
					}

					// optional uint32 positiony = 2;
					if (cached_has_bits & 0x00000002u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_positiony());
					}

					// optional uint32 positionz = 3;
					if (cached_has_bits & 0x00000004u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_positionz());
					}

				}
				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
						_internal_metadata_, total_size, &_cached_size_);
				}
				int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
				SetCachedSize(cached_size);
				return total_size;
			}

			void HousePositionTopLeft::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_merge_from_start:protobuf.staticdata.HousePositionTopLeft)
				GOOGLE_DCHECK_NE(&from, this);
				const HousePositionTopLeft* source =
					::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HousePositionTopLeft>(
						&from);
				if (source == nullptr) {
					// @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.staticdata.HousePositionTopLeft)
					::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
				}
				else {
					// @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.staticdata.HousePositionTopLeft)
					MergeFrom(*source);
				}
			}

			void HousePositionTopLeft::MergeFrom(const HousePositionTopLeft& from) {
				// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.staticdata.HousePositionTopLeft)
				GOOGLE_DCHECK_NE(&from, this);
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = from._has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					if (cached_has_bits & 0x00000001u) {
						positionx_ = from.positionx_;
					}
					if (cached_has_bits & 0x00000002u) {
						positiony_ = from.positiony_;
					}
					if (cached_has_bits & 0x00000004u) {
						positionz_ = from.positionz_;
					}
					_has_bits_[0] |= cached_has_bits;
				}
			}

			void HousePositionTopLeft::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_copy_from_start:protobuf.staticdata.HousePositionTopLeft)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			void HousePositionTopLeft::CopyFrom(const HousePositionTopLeft& from) {
				// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.staticdata.HousePositionTopLeft)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			bool HousePositionTopLeft::IsInitialized() const {
				return true;
			}

			void HousePositionTopLeft::InternalSwap(HousePositionTopLeft* other) {
				using std::swap;
				_internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
				swap(_has_bits_[0], other->_has_bits_[0]);
				::PROTOBUF_NAMESPACE_ID::internal::memswap<
					PROTOBUF_FIELD_OFFSET(HousePositionTopLeft, positionz_)
					+ sizeof(HousePositionTopLeft::positionz_)
					- PROTOBUF_FIELD_OFFSET(HousePositionTopLeft, positionx_)>(
						reinterpret_cast<char*>(&positionx_),
						reinterpret_cast<char*>(&other->positionx_));
			}

			::PROTOBUF_NAMESPACE_ID::Metadata HousePositionTopLeft::GetMetadata() const {
				return GetMetadataStatic();
			}


			// ===================================================================

			void HouseSizeSquare::InitAsDefaultInstance() {
			}
			class HouseSizeSquare::_Internal {
			public:
				using HasBits = decltype(std::declval<HouseSizeSquare>()._has_bits_);
				static void set_has_positionx(HasBits* has_bits) {
					(*has_bits)[0] |= 1u;
				}
				static void set_has_positiony(HasBits* has_bits) {
					(*has_bits)[0] |= 2u;
				}
				static void set_has_positionz(HasBits* has_bits) {
					(*has_bits)[0] |= 4u;
				}
			};

			HouseSizeSquare::HouseSizeSquare(::PROTOBUF_NAMESPACE_ID::Arena* arena)
				: ::PROTOBUF_NAMESPACE_ID::Message(arena) {
				SharedCtor();
				RegisterArenaDtor(arena);
				// @@protoc_insertion_point(arena_constructor:protobuf.staticdata.HouseSizeSquare)
			}
			HouseSizeSquare::HouseSizeSquare(const HouseSizeSquare& from)
				: ::PROTOBUF_NAMESPACE_ID::Message(),
				_has_bits_(from._has_bits_) {
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::memcpy(&positionx_, &from.positionx_,
					static_cast<size_t>(reinterpret_cast<char*>(&positionz_) -
						reinterpret_cast<char*>(&positionx_)) + sizeof(positionz_));
				// @@protoc_insertion_point(copy_constructor:protobuf.staticdata.HouseSizeSquare)
			}

			void HouseSizeSquare::SharedCtor() {
				::memset(&positionx_, 0, static_cast<size_t>(
					reinterpret_cast<char*>(&positionz_) -
					reinterpret_cast<char*>(&positionx_)) + sizeof(positionz_));
			}

			HouseSizeSquare::~HouseSizeSquare() {
				// @@protoc_insertion_point(destructor:protobuf.staticdata.HouseSizeSquare)
				SharedDtor();
				_internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			void HouseSizeSquare::SharedDtor() {
				GOOGLE_DCHECK(GetArena() == nullptr);
			}

			void HouseSizeSquare::ArenaDtor(void* object) {
				HouseSizeSquare* _this = reinterpret_cast<HouseSizeSquare*>(object);
				(void)_this;
			}
			void HouseSizeSquare::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
			}
			void HouseSizeSquare::SetCachedSize(int size) const {
				_cached_size_.Set(size);
			}
			const HouseSizeSquare& HouseSizeSquare::default_instance() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HouseSizeSquare_staticmapdata_2eproto.base);
				return *internal_default_instance();
			}


			void HouseSizeSquare::Clear() {
				// @@protoc_insertion_point(message_clear_start:protobuf.staticdata.HouseSizeSquare)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					::memset(&positionx_, 0, static_cast<size_t>(
						reinterpret_cast<char*>(&positionz_) -
						reinterpret_cast<char*>(&positionx_)) + sizeof(positionz_));
				}
				_has_bits_.Clear();
				_internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			const char* HouseSizeSquare::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
				_Internal::HasBits has_bits{};
				::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
				while (!ctx->Done(&ptr)) {
					::PROTOBUF_NAMESPACE_ID::uint32 tag;
					ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
					CHK_(ptr);
					switch (tag >> 3) {
						// optional uint32 positionx = 1;
					case 1:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
							_Internal::set_has_positionx(&has_bits);
							positionx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional uint32 positiony = 2;
					case 2:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
							_Internal::set_has_positiony(&has_bits);
							positiony_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional uint32 positionz = 3;
					case 3:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
							_Internal::set_has_positionz(&has_bits);
							positionz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
					default: {
					handle_unusual:
						if ((tag & 7) == 4 || tag == 0) {
							ctx->SetLastTag(tag);
							goto success;
						}
						ptr = UnknownFieldParse(tag,
							_internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
							ptr, ctx);
						CHK_(ptr != nullptr);
						continue;
					}
					}  // switch
				}  // while
			success:
				_has_bits_.Or(has_bits);
				return ptr;
			failure:
				ptr = nullptr;
				goto success;
#undef CHK_
			}

			::PROTOBUF_NAMESPACE_ID::uint8* HouseSizeSquare::_InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
				// @@protoc_insertion_point(serialize_to_array_start:protobuf.staticdata.HouseSizeSquare)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				// optional uint32 positionx = 1;
				if (cached_has_bits & 0x00000001u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_positionx(), target);
				}

				// optional uint32 positiony = 2;
				if (cached_has_bits & 0x00000002u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_positiony(), target);
				}

				// optional uint32 positionz = 3;
				if (cached_has_bits & 0x00000004u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_positionz(), target);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
						_internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
				}
				// @@protoc_insertion_point(serialize_to_array_end:protobuf.staticdata.HouseSizeSquare)
				return target;
			}

			size_t HouseSizeSquare::ByteSizeLong() const {
				// @@protoc_insertion_point(message_byte_size_start:protobuf.staticdata.HouseSizeSquare)
				size_t total_size = 0;

				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					// optional uint32 positionx = 1;
					if (cached_has_bits & 0x00000001u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_positionx());
					}

					// optional uint32 positiony = 2;
					if (cached_has_bits & 0x00000002u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_positiony());
					}

					// optional uint32 positionz = 3;
					if (cached_has_bits & 0x00000004u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_positionz());
					}

				}
				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
						_internal_metadata_, total_size, &_cached_size_);
				}
				int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
				SetCachedSize(cached_size);
				return total_size;
			}

			void HouseSizeSquare::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_merge_from_start:protobuf.staticdata.HouseSizeSquare)
				GOOGLE_DCHECK_NE(&from, this);
				const HouseSizeSquare* source =
					::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HouseSizeSquare>(
						&from);
				if (source == nullptr) {
					// @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.staticdata.HouseSizeSquare)
					::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
				}
				else {
					// @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.staticdata.HouseSizeSquare)
					MergeFrom(*source);
				}
			}

			void HouseSizeSquare::MergeFrom(const HouseSizeSquare& from) {
				// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.staticdata.HouseSizeSquare)
				GOOGLE_DCHECK_NE(&from, this);
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = from._has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					if (cached_has_bits & 0x00000001u) {
						positionx_ = from.positionx_;
					}
					if (cached_has_bits & 0x00000002u) {
						positiony_ = from.positiony_;
					}
					if (cached_has_bits & 0x00000004u) {
						positionz_ = from.positionz_;
					}
					_has_bits_[0] |= cached_has_bits;
				}
			}

			void HouseSizeSquare::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_copy_from_start:protobuf.staticdata.HouseSizeSquare)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			void HouseSizeSquare::CopyFrom(const HouseSizeSquare& from) {
				// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.staticdata.HouseSizeSquare)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			bool HouseSizeSquare::IsInitialized() const {
				return true;
			}

			void HouseSizeSquare::InternalSwap(HouseSizeSquare* other) {
				using std::swap;
				_internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
				swap(_has_bits_[0], other->_has_bits_[0]);
				::PROTOBUF_NAMESPACE_ID::internal::memswap<
					PROTOBUF_FIELD_OFFSET(HouseSizeSquare, positionz_)
					+ sizeof(HouseSizeSquare::positionz_)
					- PROTOBUF_FIELD_OFFSET(HouseSizeSquare, positionx_)>(
						reinterpret_cast<char*>(&positionx_),
						reinterpret_cast<char*>(&other->positionx_));
			}

			::PROTOBUF_NAMESPACE_ID::Metadata HouseSizeSquare::GetMetadata() const {
				return GetMetadataStatic();
			}


			// ===================================================================

			void SqmIteratorValue::InitAsDefaultInstance() {
			}
			class SqmIteratorValue::_Internal {
			public:
				using HasBits = decltype(std::declval<SqmIteratorValue>()._has_bits_);
				static void set_has_clientid(HasBits* has_bits) {
					(*has_bits)[0] |= 1u;
				}
			};

			SqmIteratorValue::SqmIteratorValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
				: ::PROTOBUF_NAMESPACE_ID::Message(arena) {
				SharedCtor();
				RegisterArenaDtor(arena);
				// @@protoc_insertion_point(arena_constructor:protobuf.staticdata.SqmIteratorValue)
			}
			SqmIteratorValue::SqmIteratorValue(const SqmIteratorValue& from)
				: ::PROTOBUF_NAMESPACE_ID::Message(),
				_has_bits_(from._has_bits_) {
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				clientid_ = from.clientid_;
				// @@protoc_insertion_point(copy_constructor:protobuf.staticdata.SqmIteratorValue)
			}

			void SqmIteratorValue::SharedCtor() {
				clientid_ = 0u;
			}

			SqmIteratorValue::~SqmIteratorValue() {
				// @@protoc_insertion_point(destructor:protobuf.staticdata.SqmIteratorValue)
				SharedDtor();
				_internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			void SqmIteratorValue::SharedDtor() {
				GOOGLE_DCHECK(GetArena() == nullptr);
			}

			void SqmIteratorValue::ArenaDtor(void* object) {
				SqmIteratorValue* _this = reinterpret_cast<SqmIteratorValue*>(object);
				(void)_this;
			}
			void SqmIteratorValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
			}
			void SqmIteratorValue::SetCachedSize(int size) const {
				_cached_size_.Set(size);
			}
			const SqmIteratorValue& SqmIteratorValue::default_instance() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SqmIteratorValue_staticmapdata_2eproto.base);
				return *internal_default_instance();
			}


			void SqmIteratorValue::Clear() {
				// @@protoc_insertion_point(message_clear_start:protobuf.staticdata.SqmIteratorValue)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				clientid_ = 0u;
				_has_bits_.Clear();
				_internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			const char* SqmIteratorValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
				_Internal::HasBits has_bits{};
				::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
				while (!ctx->Done(&ptr)) {
					::PROTOBUF_NAMESPACE_ID::uint32 tag;
					ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
					CHK_(ptr);
					switch (tag >> 3) {
						// optional uint32 clientID = 1;
					case 1:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
							_Internal::set_has_clientid(&has_bits);
							clientid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
					default: {
					handle_unusual:
						if ((tag & 7) == 4 || tag == 0) {
							ctx->SetLastTag(tag);
							goto success;
						}
						ptr = UnknownFieldParse(tag,
							_internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
							ptr, ctx);
						CHK_(ptr != nullptr);
						continue;
					}
					}  // switch
				}  // while
			success:
				_has_bits_.Or(has_bits);
				return ptr;
			failure:
				ptr = nullptr;
				goto success;
#undef CHK_
			}

			::PROTOBUF_NAMESPACE_ID::uint8* SqmIteratorValue::_InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
				// @@protoc_insertion_point(serialize_to_array_start:protobuf.staticdata.SqmIteratorValue)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				// optional uint32 clientID = 1;
				if (cached_has_bits & 0x00000001u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_clientid(), target);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
						_internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
				}
				// @@protoc_insertion_point(serialize_to_array_end:protobuf.staticdata.SqmIteratorValue)
				return target;
			}

			size_t SqmIteratorValue::ByteSizeLong() const {
				// @@protoc_insertion_point(message_byte_size_start:protobuf.staticdata.SqmIteratorValue)
				size_t total_size = 0;

				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				// optional uint32 clientID = 1;
				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000001u) {
					total_size += 1 +
						::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
							this->_internal_clientid());
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
						_internal_metadata_, total_size, &_cached_size_);
				}
				int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
				SetCachedSize(cached_size);
				return total_size;
			}

			void SqmIteratorValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_merge_from_start:protobuf.staticdata.SqmIteratorValue)
				GOOGLE_DCHECK_NE(&from, this);
				const SqmIteratorValue* source =
					::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SqmIteratorValue>(
						&from);
				if (source == nullptr) {
					// @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.staticdata.SqmIteratorValue)
					::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
				}
				else {
					// @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.staticdata.SqmIteratorValue)
					MergeFrom(*source);
				}
			}

			void SqmIteratorValue::MergeFrom(const SqmIteratorValue& from) {
				// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.staticdata.SqmIteratorValue)
				GOOGLE_DCHECK_NE(&from, this);
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				if (from._internal_has_clientid()) {
					_internal_set_clientid(from._internal_clientid());
				}
			}

			void SqmIteratorValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_copy_from_start:protobuf.staticdata.SqmIteratorValue)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			void SqmIteratorValue::CopyFrom(const SqmIteratorValue& from) {
				// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.staticdata.SqmIteratorValue)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			bool SqmIteratorValue::IsInitialized() const {
				return true;
			}

			void SqmIteratorValue::InternalSwap(SqmIteratorValue* other) {
				using std::swap;
				_internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
				swap(_has_bits_[0], other->_has_bits_[0]);
				swap(clientid_, other->clientid_);
			}

			::PROTOBUF_NAMESPACE_ID::Metadata SqmIteratorValue::GetMetadata() const {
				return GetMetadataStatic();
			}


			// ===================================================================

			void SqmSerialize::InitAsDefaultInstance() {
			}
			class SqmSerialize::_Internal {
			public:
				using HasBits = decltype(std::declval<SqmSerialize>()._has_bits_);
				static void set_has_jumpempty(HasBits* has_bits) {
					(*has_bits)[0] |= 1u;
				}
			};

			SqmSerialize::SqmSerialize(::PROTOBUF_NAMESPACE_ID::Arena* arena)
				: ::PROTOBUF_NAMESPACE_ID::Message(arena),
				item_(arena) {
				SharedCtor();
				RegisterArenaDtor(arena);
				// @@protoc_insertion_point(arena_constructor:protobuf.staticdata.SqmSerialize)
			}
			SqmSerialize::SqmSerialize(const SqmSerialize& from)
				: ::PROTOBUF_NAMESPACE_ID::Message(),
				_has_bits_(from._has_bits_),
				item_(from.item_) {
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				jumpempty_ = from.jumpempty_;
				// @@protoc_insertion_point(copy_constructor:protobuf.staticdata.SqmSerialize)
			}

			void SqmSerialize::SharedCtor() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SqmSerialize_staticmapdata_2eproto.base);
				jumpempty_ = 0u;
			}

			SqmSerialize::~SqmSerialize() {
				// @@protoc_insertion_point(destructor:protobuf.staticdata.SqmSerialize)
				SharedDtor();
				_internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			void SqmSerialize::SharedDtor() {
				GOOGLE_DCHECK(GetArena() == nullptr);
			}

			void SqmSerialize::ArenaDtor(void* object) {
				SqmSerialize* _this = reinterpret_cast<SqmSerialize*>(object);
				(void)_this;
			}
			void SqmSerialize::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
			}
			void SqmSerialize::SetCachedSize(int size) const {
				_cached_size_.Set(size);
			}
			const SqmSerialize& SqmSerialize::default_instance() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SqmSerialize_staticmapdata_2eproto.base);
				return *internal_default_instance();
			}


			void SqmSerialize::Clear() {
				// @@protoc_insertion_point(message_clear_start:protobuf.staticdata.SqmSerialize)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				item_.Clear();
				jumpempty_ = 0u;
				_has_bits_.Clear();
				_internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			const char* SqmSerialize::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
				_Internal::HasBits has_bits{};
				::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
				while (!ctx->Done(&ptr)) {
					::PROTOBUF_NAMESPACE_ID::uint32 tag;
					ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
					CHK_(ptr);
					switch (tag >> 3) {
						// repeated .protobuf.staticdata.SqmIteratorValue item = 1;
					case 1:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
							ptr -= 1;
							do {
								ptr += 1;
								ptr = ctx->ParseMessage(_internal_add_item(), ptr);
								CHK_(ptr);
								if (!ctx->DataAvailable(ptr)) break;
							} while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
						}
						else goto handle_unusual;
						continue;
						// optional uint32 jumpEmpty = 2;
					case 2:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
							_Internal::set_has_jumpempty(&has_bits);
							jumpempty_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
					default: {
					handle_unusual:
						if ((tag & 7) == 4 || tag == 0) {
							ctx->SetLastTag(tag);
							goto success;
						}
						ptr = UnknownFieldParse(tag,
							_internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
							ptr, ctx);
						CHK_(ptr != nullptr);
						continue;
					}
					}  // switch
				}  // while
			success:
				_has_bits_.Or(has_bits);
				return ptr;
			failure:
				ptr = nullptr;
				goto success;
#undef CHK_
			}

			::PROTOBUF_NAMESPACE_ID::uint8* SqmSerialize::_InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
				// @@protoc_insertion_point(serialize_to_array_start:protobuf.staticdata.SqmSerialize)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				// repeated .protobuf.staticdata.SqmIteratorValue item = 1;
				for (unsigned int i = 0,
					n = static_cast<unsigned int>(this->_internal_item_size()); i < n; i++) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
						InternalWriteMessage(1, this->_internal_item(i), target, stream);
				}

				cached_has_bits = _has_bits_[0];
				// optional uint32 jumpEmpty = 2;
				if (cached_has_bits & 0x00000001u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_jumpempty(), target);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
						_internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
				}
				// @@protoc_insertion_point(serialize_to_array_end:protobuf.staticdata.SqmSerialize)
				return target;
			}

			size_t SqmSerialize::ByteSizeLong() const {
				// @@protoc_insertion_point(message_byte_size_start:protobuf.staticdata.SqmSerialize)
				size_t total_size = 0;

				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				// repeated .protobuf.staticdata.SqmIteratorValue item = 1;
				total_size += 1UL * this->_internal_item_size();
				for (const auto& msg : this->item_) {
					total_size +=
						::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
				}

				// optional uint32 jumpEmpty = 2;
				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000001u) {
					total_size += 1 +
						::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
							this->_internal_jumpempty());
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
						_internal_metadata_, total_size, &_cached_size_);
				}
				int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
				SetCachedSize(cached_size);
				return total_size;
			}

			void SqmSerialize::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_merge_from_start:protobuf.staticdata.SqmSerialize)
				GOOGLE_DCHECK_NE(&from, this);
				const SqmSerialize* source =
					::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SqmSerialize>(
						&from);
				if (source == nullptr) {
					// @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.staticdata.SqmSerialize)
					::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
				}
				else {
					// @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.staticdata.SqmSerialize)
					MergeFrom(*source);
				}
			}

			void SqmSerialize::MergeFrom(const SqmSerialize& from) {
				// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.staticdata.SqmSerialize)
				GOOGLE_DCHECK_NE(&from, this);
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				item_.MergeFrom(from.item_);
				if (from._internal_has_jumpempty()) {
					_internal_set_jumpempty(from._internal_jumpempty());
				}
			}

			void SqmSerialize::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_copy_from_start:protobuf.staticdata.SqmSerialize)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			void SqmSerialize::CopyFrom(const SqmSerialize& from) {
				// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.staticdata.SqmSerialize)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			bool SqmSerialize::IsInitialized() const {
				return true;
			}

			void SqmSerialize::InternalSwap(SqmSerialize* other) {
				using std::swap;
				_internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
				swap(_has_bits_[0], other->_has_bits_[0]);
				item_.InternalSwap(&other->item_);
				swap(jumpempty_, other->jumpempty_);
			}

			::PROTOBUF_NAMESPACE_ID::Metadata SqmSerialize::GetMetadata() const {
				return GetMetadataStatic();
			}


			// ===================================================================

			void HouseSerializeSqm::InitAsDefaultInstance() {
			}
			class HouseSerializeSqm::_Internal {
			public:
			};

			HouseSerializeSqm::HouseSerializeSqm(::PROTOBUF_NAMESPACE_ID::Arena* arena)
				: ::PROTOBUF_NAMESPACE_ID::Message(arena),
				sqmserialize_(arena) {
				SharedCtor();
				RegisterArenaDtor(arena);
				// @@protoc_insertion_point(arena_constructor:protobuf.staticdata.HouseSerializeSqm)
			}
			HouseSerializeSqm::HouseSerializeSqm(const HouseSerializeSqm& from)
				: ::PROTOBUF_NAMESPACE_ID::Message(),
				sqmserialize_(from.sqmserialize_) {
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				// @@protoc_insertion_point(copy_constructor:protobuf.staticdata.HouseSerializeSqm)
			}

			void HouseSerializeSqm::SharedCtor() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HouseSerializeSqm_staticmapdata_2eproto.base);
			}

			HouseSerializeSqm::~HouseSerializeSqm() {
				// @@protoc_insertion_point(destructor:protobuf.staticdata.HouseSerializeSqm)
				SharedDtor();
				_internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			void HouseSerializeSqm::SharedDtor() {
				GOOGLE_DCHECK(GetArena() == nullptr);
			}

			void HouseSerializeSqm::ArenaDtor(void* object) {
				HouseSerializeSqm* _this = reinterpret_cast<HouseSerializeSqm*>(object);
				(void)_this;
			}
			void HouseSerializeSqm::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
			}
			void HouseSerializeSqm::SetCachedSize(int size) const {
				_cached_size_.Set(size);
			}
			const HouseSerializeSqm& HouseSerializeSqm::default_instance() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HouseSerializeSqm_staticmapdata_2eproto.base);
				return *internal_default_instance();
			}


			void HouseSerializeSqm::Clear() {
				// @@protoc_insertion_point(message_clear_start:protobuf.staticdata.HouseSerializeSqm)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				sqmserialize_.Clear();
				_internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			const char* HouseSerializeSqm::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
				::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
				while (!ctx->Done(&ptr)) {
					::PROTOBUF_NAMESPACE_ID::uint32 tag;
					ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
					CHK_(ptr);
					switch (tag >> 3) {
						// repeated .protobuf.staticdata.SqmSerialize sqmserialize = 3;
					case 3:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
							ptr -= 1;
							do {
								ptr += 1;
								ptr = ctx->ParseMessage(_internal_add_sqmserialize(), ptr);
								CHK_(ptr);
								if (!ctx->DataAvailable(ptr)) break;
							} while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
						}
						else goto handle_unusual;
						continue;
					default: {
					handle_unusual:
						if ((tag & 7) == 4 || tag == 0) {
							ctx->SetLastTag(tag);
							goto success;
						}
						ptr = UnknownFieldParse(tag,
							_internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
							ptr, ctx);
						CHK_(ptr != nullptr);
						continue;
					}
					}  // switch
				}  // while
			success:
				return ptr;
			failure:
				ptr = nullptr;
				goto success;
#undef CHK_
			}

			::PROTOBUF_NAMESPACE_ID::uint8* HouseSerializeSqm::_InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
				// @@protoc_insertion_point(serialize_to_array_start:protobuf.staticdata.HouseSerializeSqm)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				// repeated .protobuf.staticdata.SqmSerialize sqmserialize = 3;
				for (unsigned int i = 0,
					n = static_cast<unsigned int>(this->_internal_sqmserialize_size()); i < n; i++) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
						InternalWriteMessage(3, this->_internal_sqmserialize(i), target, stream);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
						_internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
				}
				// @@protoc_insertion_point(serialize_to_array_end:protobuf.staticdata.HouseSerializeSqm)
				return target;
			}

			size_t HouseSerializeSqm::ByteSizeLong() const {
				// @@protoc_insertion_point(message_byte_size_start:protobuf.staticdata.HouseSerializeSqm)
				size_t total_size = 0;

				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				// repeated .protobuf.staticdata.SqmSerialize sqmserialize = 3;
				total_size += 1UL * this->_internal_sqmserialize_size();
				for (const auto& msg : this->sqmserialize_) {
					total_size +=
						::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
						_internal_metadata_, total_size, &_cached_size_);
				}
				int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
				SetCachedSize(cached_size);
				return total_size;
			}

			void HouseSerializeSqm::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_merge_from_start:protobuf.staticdata.HouseSerializeSqm)
				GOOGLE_DCHECK_NE(&from, this);
				const HouseSerializeSqm* source =
					::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HouseSerializeSqm>(
						&from);
				if (source == nullptr) {
					// @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.staticdata.HouseSerializeSqm)
					::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
				}
				else {
					// @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.staticdata.HouseSerializeSqm)
					MergeFrom(*source);
				}
			}

			void HouseSerializeSqm::MergeFrom(const HouseSerializeSqm& from) {
				// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.staticdata.HouseSerializeSqm)
				GOOGLE_DCHECK_NE(&from, this);
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				sqmserialize_.MergeFrom(from.sqmserialize_);
			}

			void HouseSerializeSqm::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_copy_from_start:protobuf.staticdata.HouseSerializeSqm)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			void HouseSerializeSqm::CopyFrom(const HouseSerializeSqm& from) {
				// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.staticdata.HouseSerializeSqm)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			bool HouseSerializeSqm::IsInitialized() const {
				return true;
			}

			void HouseSerializeSqm::InternalSwap(HouseSerializeSqm* other) {
				using std::swap;
				_internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
				sqmserialize_.InternalSwap(&other->sqmserialize_);
			}

			::PROTOBUF_NAMESPACE_ID::Metadata HouseSerializeSqm::GetMetadata() const {
				return GetMetadataStatic();
			}


			// ===================================================================

			void HouseSerialize::InitAsDefaultInstance() {
				::protobuf::staticdata::_HouseSerialize_default_instance_._instance.get_mutable()->housesqm_ = const_cast<::protobuf::staticdata::HouseSerializeSqm*>(
					::protobuf::staticdata::HouseSerializeSqm::internal_default_instance());
			}
			class HouseSerialize::_Internal {
			public:
				using HasBits = decltype(std::declval<HouseSerialize>()._has_bits_);
				static const ::protobuf::staticdata::HouseSerializeSqm& housesqm(const HouseSerialize* msg);
				static void set_has_housesqm(HasBits* has_bits) {
					(*has_bits)[0] |= 1u;
				}
			};

			const ::protobuf::staticdata::HouseSerializeSqm&
				HouseSerialize::_Internal::housesqm(const HouseSerialize* msg) {
				return *msg->housesqm_;
			}
			HouseSerialize::HouseSerialize(::PROTOBUF_NAMESPACE_ID::Arena* arena)
				: ::PROTOBUF_NAMESPACE_ID::Message(arena) {
				SharedCtor();
				RegisterArenaDtor(arena);
				// @@protoc_insertion_point(arena_constructor:protobuf.staticdata.HouseSerialize)
			}
			HouseSerialize::HouseSerialize(const HouseSerialize& from)
				: ::PROTOBUF_NAMESPACE_ID::Message(),
				_has_bits_(from._has_bits_) {
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				if (from._internal_has_housesqm()) {
					housesqm_ = new ::protobuf::staticdata::HouseSerializeSqm(*from.housesqm_);
				}
				else {
					housesqm_ = nullptr;
				}
				// @@protoc_insertion_point(copy_constructor:protobuf.staticdata.HouseSerialize)
			}

			void HouseSerialize::SharedCtor() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HouseSerialize_staticmapdata_2eproto.base);
				housesqm_ = nullptr;
			}

			HouseSerialize::~HouseSerialize() {
				// @@protoc_insertion_point(destructor:protobuf.staticdata.HouseSerialize)
				SharedDtor();
				_internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			void HouseSerialize::SharedDtor() {
				GOOGLE_DCHECK(GetArena() == nullptr);
				if (this != internal_default_instance()) delete housesqm_;
			}

			void HouseSerialize::ArenaDtor(void* object) {
				HouseSerialize* _this = reinterpret_cast<HouseSerialize*>(object);
				(void)_this;
			}
			void HouseSerialize::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
			}
			void HouseSerialize::SetCachedSize(int size) const {
				_cached_size_.Set(size);
			}
			const HouseSerialize& HouseSerialize::default_instance() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HouseSerialize_staticmapdata_2eproto.base);
				return *internal_default_instance();
			}


			void HouseSerialize::Clear() {
				// @@protoc_insertion_point(message_clear_start:protobuf.staticdata.HouseSerialize)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000001u) {
					GOOGLE_DCHECK(housesqm_ != nullptr);
					housesqm_->Clear();
				}
				_has_bits_.Clear();
				_internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			const char* HouseSerialize::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
				_Internal::HasBits has_bits{};
				::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
				while (!ctx->Done(&ptr)) {
					::PROTOBUF_NAMESPACE_ID::uint32 tag;
					ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
					CHK_(ptr);
					switch (tag >> 3) {
						// optional .protobuf.staticdata.HouseSerializeSqm housesqm = 2;
					case 2:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
							ptr = ctx->ParseMessage(_internal_mutable_housesqm(), ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
					default: {
					handle_unusual:
						if ((tag & 7) == 4 || tag == 0) {
							ctx->SetLastTag(tag);
							goto success;
						}
						ptr = UnknownFieldParse(tag,
							_internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
							ptr, ctx);
						CHK_(ptr != nullptr);
						continue;
					}
					}  // switch
				}  // while
			success:
				_has_bits_.Or(has_bits);
				return ptr;
			failure:
				ptr = nullptr;
				goto success;
#undef CHK_
			}

			::PROTOBUF_NAMESPACE_ID::uint8* HouseSerialize::_InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
				// @@protoc_insertion_point(serialize_to_array_start:protobuf.staticdata.HouseSerialize)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				// optional .protobuf.staticdata.HouseSerializeSqm housesqm = 2;
				if (cached_has_bits & 0x00000001u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
						InternalWriteMessage(
							2, _Internal::housesqm(this), target, stream);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
						_internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
				}
				// @@protoc_insertion_point(serialize_to_array_end:protobuf.staticdata.HouseSerialize)
				return target;
			}

			size_t HouseSerialize::ByteSizeLong() const {
				// @@protoc_insertion_point(message_byte_size_start:protobuf.staticdata.HouseSerialize)
				size_t total_size = 0;

				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				// optional .protobuf.staticdata.HouseSerializeSqm housesqm = 2;
				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000001u) {
					total_size += 1 +
						::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
							*housesqm_);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
						_internal_metadata_, total_size, &_cached_size_);
				}
				int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
				SetCachedSize(cached_size);
				return total_size;
			}

			void HouseSerialize::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_merge_from_start:protobuf.staticdata.HouseSerialize)
				GOOGLE_DCHECK_NE(&from, this);
				const HouseSerialize* source =
					::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HouseSerialize>(
						&from);
				if (source == nullptr) {
					// @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.staticdata.HouseSerialize)
					::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
				}
				else {
					// @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.staticdata.HouseSerialize)
					MergeFrom(*source);
				}
			}

			void HouseSerialize::MergeFrom(const HouseSerialize& from) {
				// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.staticdata.HouseSerialize)
				GOOGLE_DCHECK_NE(&from, this);
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				if (from._internal_has_housesqm()) {
					_internal_mutable_housesqm()->::protobuf::staticdata::HouseSerializeSqm::MergeFrom(from._internal_housesqm());
				}
			}

			void HouseSerialize::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_copy_from_start:protobuf.staticdata.HouseSerialize)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			void HouseSerialize::CopyFrom(const HouseSerialize& from) {
				// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.staticdata.HouseSerialize)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			bool HouseSerialize::IsInitialized() const {
				return true;
			}

			void HouseSerialize::InternalSwap(HouseSerialize* other) {
				using std::swap;
				_internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
				swap(_has_bits_[0], other->_has_bits_[0]);
				swap(housesqm_, other->housesqm_);
			}

			::PROTOBUF_NAMESPACE_ID::Metadata HouseSerialize::GetMetadata() const {
				return GetMetadataStatic();
			}


			// ===================================================================

			void HouseData::InitAsDefaultInstance() {
				::protobuf::staticdata::_HouseData_default_instance_._instance.get_mutable()->topleft_ = const_cast<::protobuf::staticdata::HousePositionTopLeft*>(
					::protobuf::staticdata::HousePositionTopLeft::internal_default_instance());
				::protobuf::staticdata::_HouseData_default_instance_._instance.get_mutable()->housesquare_ = const_cast<::protobuf::staticdata::HouseSizeSquare*>(
					::protobuf::staticdata::HouseSizeSquare::internal_default_instance());
				::protobuf::staticdata::_HouseData_default_instance_._instance.get_mutable()->serialize_ = const_cast<::protobuf::staticdata::HouseSerialize*>(
					::protobuf::staticdata::HouseSerialize::internal_default_instance());
			}
			class HouseData::_Internal {
			public:
				using HasBits = decltype(std::declval<HouseData>()._has_bits_);
				static const ::protobuf::staticdata::HousePositionTopLeft& topleft(const HouseData* msg);
				static void set_has_topleft(HasBits* has_bits) {
					(*has_bits)[0] |= 1u;
				}
				static const ::protobuf::staticdata::HouseSizeSquare& housesquare(const HouseData* msg);
				static void set_has_housesquare(HasBits* has_bits) {
					(*has_bits)[0] |= 2u;
				}
				static const ::protobuf::staticdata::HouseSerialize& serialize(const HouseData* msg);
				static void set_has_serialize(HasBits* has_bits) {
					(*has_bits)[0] |= 4u;
				}
			};

			const ::protobuf::staticdata::HousePositionTopLeft&
				HouseData::_Internal::topleft(const HouseData* msg) {
				return *msg->topleft_;
			}
			const ::protobuf::staticdata::HouseSizeSquare&
				HouseData::_Internal::housesquare(const HouseData* msg) {
				return *msg->housesquare_;
			}
			const ::protobuf::staticdata::HouseSerialize&
				HouseData::_Internal::serialize(const HouseData* msg) {
				return *msg->serialize_;
			}
			HouseData::HouseData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
				: ::PROTOBUF_NAMESPACE_ID::Message(arena) {
				SharedCtor();
				RegisterArenaDtor(arena);
				// @@protoc_insertion_point(arena_constructor:protobuf.staticdata.HouseData)
			}
			HouseData::HouseData(const HouseData& from)
				: ::PROTOBUF_NAMESPACE_ID::Message(),
				_has_bits_(from._has_bits_) {
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				if (from._internal_has_topleft()) {
					topleft_ = new ::protobuf::staticdata::HousePositionTopLeft(*from.topleft_);
				}
				else {
					topleft_ = nullptr;
				}
				if (from._internal_has_housesquare()) {
					housesquare_ = new ::protobuf::staticdata::HouseSizeSquare(*from.housesquare_);
				}
				else {
					housesquare_ = nullptr;
				}
				if (from._internal_has_serialize()) {
					serialize_ = new ::protobuf::staticdata::HouseSerialize(*from.serialize_);
				}
				else {
					serialize_ = nullptr;
				}
				// @@protoc_insertion_point(copy_constructor:protobuf.staticdata.HouseData)
			}

			void HouseData::SharedCtor() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HouseData_staticmapdata_2eproto.base);
				::memset(&topleft_, 0, static_cast<size_t>(
					reinterpret_cast<char*>(&serialize_) -
					reinterpret_cast<char*>(&topleft_)) + sizeof(serialize_));
			}

			HouseData::~HouseData() {
				// @@protoc_insertion_point(destructor:protobuf.staticdata.HouseData)
				SharedDtor();
				_internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			void HouseData::SharedDtor() {
				GOOGLE_DCHECK(GetArena() == nullptr);
				if (this != internal_default_instance()) delete topleft_;
				if (this != internal_default_instance()) delete housesquare_;
				if (this != internal_default_instance()) delete serialize_;
			}

			void HouseData::ArenaDtor(void* object) {
				HouseData* _this = reinterpret_cast<HouseData*>(object);
				(void)_this;
			}
			void HouseData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
			}
			void HouseData::SetCachedSize(int size) const {
				_cached_size_.Set(size);
			}
			const HouseData& HouseData::default_instance() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HouseData_staticmapdata_2eproto.base);
				return *internal_default_instance();
			}


			void HouseData::Clear() {
				// @@protoc_insertion_point(message_clear_start:protobuf.staticdata.HouseData)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					if (cached_has_bits & 0x00000001u) {
						GOOGLE_DCHECK(topleft_ != nullptr);
						topleft_->Clear();
					}
					if (cached_has_bits & 0x00000002u) {
						GOOGLE_DCHECK(housesquare_ != nullptr);
						housesquare_->Clear();
					}
					if (cached_has_bits & 0x00000004u) {
						GOOGLE_DCHECK(serialize_ != nullptr);
						serialize_->Clear();
					}
				}
				_has_bits_.Clear();
				_internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			const char* HouseData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
				_Internal::HasBits has_bits{};
				::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
				while (!ctx->Done(&ptr)) {
					::PROTOBUF_NAMESPACE_ID::uint32 tag;
					ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
					CHK_(ptr);
					switch (tag >> 3) {
						// optional .protobuf.staticdata.HousePositionTopLeft topleft = 1;
					case 1:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
							ptr = ctx->ParseMessage(_internal_mutable_topleft(), ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional .protobuf.staticdata.HouseSizeSquare housesquare = 2;
					case 2:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
							ptr = ctx->ParseMessage(_internal_mutable_housesquare(), ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional .protobuf.staticdata.HouseSerialize serialize = 3;
					case 3:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
							ptr = ctx->ParseMessage(_internal_mutable_serialize(), ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
					default: {
					handle_unusual:
						if ((tag & 7) == 4 || tag == 0) {
							ctx->SetLastTag(tag);
							goto success;
						}
						ptr = UnknownFieldParse(tag,
							_internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
							ptr, ctx);
						CHK_(ptr != nullptr);
						continue;
					}
					}  // switch
				}  // while
			success:
				_has_bits_.Or(has_bits);
				return ptr;
			failure:
				ptr = nullptr;
				goto success;
#undef CHK_
			}

			::PROTOBUF_NAMESPACE_ID::uint8* HouseData::_InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
				// @@protoc_insertion_point(serialize_to_array_start:protobuf.staticdata.HouseData)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				// optional .protobuf.staticdata.HousePositionTopLeft topleft = 1;
				if (cached_has_bits & 0x00000001u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
						InternalWriteMessage(
							1, _Internal::topleft(this), target, stream);
				}

				// optional .protobuf.staticdata.HouseSizeSquare housesquare = 2;
				if (cached_has_bits & 0x00000002u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
						InternalWriteMessage(
							2, _Internal::housesquare(this), target, stream);
				}

				// optional .protobuf.staticdata.HouseSerialize serialize = 3;
				if (cached_has_bits & 0x00000004u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
						InternalWriteMessage(
							3, _Internal::serialize(this), target, stream);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
						_internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
				}
				// @@protoc_insertion_point(serialize_to_array_end:protobuf.staticdata.HouseData)
				return target;
			}

			size_t HouseData::ByteSizeLong() const {
				// @@protoc_insertion_point(message_byte_size_start:protobuf.staticdata.HouseData)
				size_t total_size = 0;

				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					// optional .protobuf.staticdata.HousePositionTopLeft topleft = 1;
					if (cached_has_bits & 0x00000001u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
								*topleft_);
					}

					// optional .protobuf.staticdata.HouseSizeSquare housesquare = 2;
					if (cached_has_bits & 0x00000002u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
								*housesquare_);
					}

					// optional .protobuf.staticdata.HouseSerialize serialize = 3;
					if (cached_has_bits & 0x00000004u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
								*serialize_);
					}

				}
				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
						_internal_metadata_, total_size, &_cached_size_);
				}
				int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
				SetCachedSize(cached_size);
				return total_size;
			}

			void HouseData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_merge_from_start:protobuf.staticdata.HouseData)
				GOOGLE_DCHECK_NE(&from, this);
				const HouseData* source =
					::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HouseData>(
						&from);
				if (source == nullptr) {
					// @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.staticdata.HouseData)
					::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
				}
				else {
					// @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.staticdata.HouseData)
					MergeFrom(*source);
				}
			}

			void HouseData::MergeFrom(const HouseData& from) {
				// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.staticdata.HouseData)
				GOOGLE_DCHECK_NE(&from, this);
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = from._has_bits_[0];
				if (cached_has_bits & 0x00000007u) {
					if (cached_has_bits & 0x00000001u) {
						_internal_mutable_topleft()->::protobuf::staticdata::HousePositionTopLeft::MergeFrom(from._internal_topleft());
					}
					if (cached_has_bits & 0x00000002u) {
						_internal_mutable_housesquare()->::protobuf::staticdata::HouseSizeSquare::MergeFrom(from._internal_housesquare());
					}
					if (cached_has_bits & 0x00000004u) {
						_internal_mutable_serialize()->::protobuf::staticdata::HouseSerialize::MergeFrom(from._internal_serialize());
					}
				}
			}

			void HouseData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_copy_from_start:protobuf.staticdata.HouseData)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			void HouseData::CopyFrom(const HouseData& from) {
				// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.staticdata.HouseData)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			bool HouseData::IsInitialized() const {
				return true;
			}

			void HouseData::InternalSwap(HouseData* other) {
				using std::swap;
				_internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
				swap(_has_bits_[0], other->_has_bits_[0]);
				::PROTOBUF_NAMESPACE_ID::internal::memswap<
					PROTOBUF_FIELD_OFFSET(HouseData, serialize_)
					+ sizeof(HouseData::serialize_)
					- PROTOBUF_FIELD_OFFSET(HouseData, topleft_)>(
						reinterpret_cast<char*>(&topleft_),
						reinterpret_cast<char*>(&other->topleft_));
			}

			::PROTOBUF_NAMESPACE_ID::Metadata HouseData::GetMetadata() const {
				return GetMetadataStatic();
			}


			// ===================================================================

			void StaticMapData::InitAsDefaultInstance() {
				::protobuf::staticdata::_StaticMapData_default_instance_._instance.get_mutable()->housedata_ = const_cast<::protobuf::staticdata::HouseData*>(
					::protobuf::staticdata::HouseData::internal_default_instance());
			}
			class StaticMapData::_Internal {
			public:
				using HasBits = decltype(std::declval<StaticMapData>()._has_bits_);
				static void set_has_houseid(HasBits* has_bits) {
					(*has_bits)[0] |= 2u;
				}
				static const ::protobuf::staticdata::HouseData& housedata(const StaticMapData* msg);
				static void set_has_housedata(HasBits* has_bits) {
					(*has_bits)[0] |= 1u;
				}
			};

			const ::protobuf::staticdata::HouseData&
				StaticMapData::_Internal::housedata(const StaticMapData* msg) {
				return *msg->housedata_;
			}
			StaticMapData::StaticMapData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
				: ::PROTOBUF_NAMESPACE_ID::Message(arena) {
				SharedCtor();
				RegisterArenaDtor(arena);
				// @@protoc_insertion_point(arena_constructor:protobuf.staticdata.StaticMapData)
			}
			StaticMapData::StaticMapData(const StaticMapData& from)
				: ::PROTOBUF_NAMESPACE_ID::Message(),
				_has_bits_(from._has_bits_) {
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				if (from._internal_has_housedata()) {
					housedata_ = new ::protobuf::staticdata::HouseData(*from.housedata_);
				}
				else {
					housedata_ = nullptr;
				}
				houseid_ = from.houseid_;
				// @@protoc_insertion_point(copy_constructor:protobuf.staticdata.StaticMapData)
			}

			void StaticMapData::SharedCtor() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StaticMapData_staticmapdata_2eproto.base);
				::memset(&housedata_, 0, static_cast<size_t>(
					reinterpret_cast<char*>(&houseid_) -
					reinterpret_cast<char*>(&housedata_)) + sizeof(houseid_));
			}

			StaticMapData::~StaticMapData() {
				// @@protoc_insertion_point(destructor:protobuf.staticdata.StaticMapData)
				SharedDtor();
				_internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			void StaticMapData::SharedDtor() {
				GOOGLE_DCHECK(GetArena() == nullptr);
				if (this != internal_default_instance()) delete housedata_;
			}

			void StaticMapData::ArenaDtor(void* object) {
				StaticMapData* _this = reinterpret_cast<StaticMapData*>(object);
				(void)_this;
			}
			void StaticMapData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
			}
			void StaticMapData::SetCachedSize(int size) const {
				_cached_size_.Set(size);
			}
			const StaticMapData& StaticMapData::default_instance() {
				::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StaticMapData_staticmapdata_2eproto.base);
				return *internal_default_instance();
			}


			void StaticMapData::Clear() {
				// @@protoc_insertion_point(message_clear_start:protobuf.staticdata.StaticMapData)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000001u) {
					GOOGLE_DCHECK(housedata_ != nullptr);
					housedata_->Clear();
				}
				houseid_ = 0u;
				_has_bits_.Clear();
				_internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			const char* StaticMapData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
				_Internal::HasBits has_bits{};
				::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
				while (!ctx->Done(&ptr)) {
					::PROTOBUF_NAMESPACE_ID::uint32 tag;
					ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
					CHK_(ptr);
					switch (tag >> 3) {
						// optional uint32 houseid = 1;
					case 1:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
							_Internal::set_has_houseid(&has_bits);
							houseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
						// optional .protobuf.staticdata.HouseData housedata = 2;
					case 2:
						if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
							ptr = ctx->ParseMessage(_internal_mutable_housedata(), ptr);
							CHK_(ptr);
						}
						else goto handle_unusual;
						continue;
					default: {
					handle_unusual:
						if ((tag & 7) == 4 || tag == 0) {
							ctx->SetLastTag(tag);
							goto success;
						}
						ptr = UnknownFieldParse(tag,
							_internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
							ptr, ctx);
						CHK_(ptr != nullptr);
						continue;
					}
					}  // switch
				}  // while
			success:
				_has_bits_.Or(has_bits);
				return ptr;
			failure:
				ptr = nullptr;
				goto success;
#undef CHK_
			}

			::PROTOBUF_NAMESPACE_ID::uint8* StaticMapData::_InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
				// @@protoc_insertion_point(serialize_to_array_start:protobuf.staticdata.StaticMapData)
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				// optional uint32 houseid = 1;
				if (cached_has_bits & 0x00000002u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_houseid(), target);
				}

				// optional .protobuf.staticdata.HouseData housedata = 2;
				if (cached_has_bits & 0x00000001u) {
					target = stream->EnsureSpace(target);
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
						InternalWriteMessage(
							2, _Internal::housedata(this), target, stream);
				}

				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
						_internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
				}
				// @@protoc_insertion_point(serialize_to_array_end:protobuf.staticdata.StaticMapData)
				return target;
			}

			size_t StaticMapData::ByteSizeLong() const {
				// @@protoc_insertion_point(message_byte_size_start:protobuf.staticdata.StaticMapData)
				size_t total_size = 0;

				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				// Prevent compiler warnings about cached_has_bits being unused
				(void)cached_has_bits;

				cached_has_bits = _has_bits_[0];
				if (cached_has_bits & 0x00000003u) {
					// optional .protobuf.staticdata.HouseData housedata = 2;
					if (cached_has_bits & 0x00000001u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
								*housedata_);
					}

					// optional uint32 houseid = 1;
					if (cached_has_bits & 0x00000002u) {
						total_size += 1 +
							::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
								this->_internal_houseid());
					}

				}
				if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
					return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
						_internal_metadata_, total_size, &_cached_size_);
				}
				int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
				SetCachedSize(cached_size);
				return total_size;
			}

			void StaticMapData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_merge_from_start:protobuf.staticdata.StaticMapData)
				GOOGLE_DCHECK_NE(&from, this);
				const StaticMapData* source =
					::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StaticMapData>(
						&from);
				if (source == nullptr) {
					// @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.staticdata.StaticMapData)
					::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
				}
				else {
					// @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.staticdata.StaticMapData)
					MergeFrom(*source);
				}
			}

			void StaticMapData::MergeFrom(const StaticMapData& from) {
				// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.staticdata.StaticMapData)
				GOOGLE_DCHECK_NE(&from, this);
				_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
				::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
				(void)cached_has_bits;

				cached_has_bits = from._has_bits_[0];
				if (cached_has_bits & 0x00000003u) {
					if (cached_has_bits & 0x00000001u) {
						_internal_mutable_housedata()->::protobuf::staticdata::HouseData::MergeFrom(from._internal_housedata());
					}
					if (cached_has_bits & 0x00000002u) {
						houseid_ = from.houseid_;
					}
					_has_bits_[0] |= cached_has_bits;
				}
			}

			void StaticMapData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
				// @@protoc_insertion_point(generalized_copy_from_start:protobuf.staticdata.StaticMapData)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			void StaticMapData::CopyFrom(const StaticMapData& from) {
				// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.staticdata.StaticMapData)
				if (&from == this) return;
				Clear();
				MergeFrom(from);
			}

			bool StaticMapData::IsInitialized() const {
				return true;
			}

			void StaticMapData::InternalSwap(StaticMapData* other) {
				using std::swap;
				_internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
				swap(_has_bits_[0], other->_has_bits_[0]);
				::PROTOBUF_NAMESPACE_ID::internal::memswap<
					PROTOBUF_FIELD_OFFSET(StaticMapData, houseid_)
					+ sizeof(StaticMapData::houseid_)
					- PROTOBUF_FIELD_OFFSET(StaticMapData, housedata_)>(
						reinterpret_cast<char*>(&housedata_),
						reinterpret_cast<char*>(&other->housedata_));
			}

			::PROTOBUF_NAMESPACE_ID::Metadata StaticMapData::GetMetadata() const {
				return GetMetadataStatic();
			}


			// @@protoc_insertion_point(namespace_scope)
		}  // namespace staticdata
	}  // namespace protobuf
	PROTOBUF_NAMESPACE_OPEN
		template<> PROTOBUF_NOINLINE::protobuf::staticdata::StaticData* Arena::CreateMaybeMessage< ::protobuf::staticdata::StaticData >(Arena* arena) {
		return Arena::CreateMessageInternal< ::protobuf::staticdata::StaticData >(arena);
	}
	template<> PROTOBUF_NOINLINE::protobuf::staticdata::HousePosition* Arena::CreateMaybeMessage< ::protobuf::staticdata::HousePosition >(Arena* arena) {
		return Arena::CreateMessageInternal< ::protobuf::staticdata::HousePosition >(arena);
	}
	template<> PROTOBUF_NOINLINE::protobuf::staticdata::House* Arena::CreateMaybeMessage< ::protobuf::staticdata::House >(Arena* arena) {
		return Arena::CreateMessageInternal< ::protobuf::staticdata::House >(arena);
	}
	template<> PROTOBUF_NOINLINE::protobuf::staticdata::HousePositionTopLeft* Arena::CreateMaybeMessage< ::protobuf::staticdata::HousePositionTopLeft >(Arena* arena) {
		return Arena::CreateMessageInternal< ::protobuf::staticdata::HousePositionTopLeft >(arena);
	}
	template<> PROTOBUF_NOINLINE::protobuf::staticdata::HouseSizeSquare* Arena::CreateMaybeMessage< ::protobuf::staticdata::HouseSizeSquare >(Arena* arena) {
		return Arena::CreateMessageInternal< ::protobuf::staticdata::HouseSizeSquare >(arena);
	}
	template<> PROTOBUF_NOINLINE::protobuf::staticdata::SqmIteratorValue* Arena::CreateMaybeMessage< ::protobuf::staticdata::SqmIteratorValue >(Arena* arena) {
		return Arena::CreateMessageInternal< ::protobuf::staticdata::SqmIteratorValue >(arena);
	}
	template<> PROTOBUF_NOINLINE::protobuf::staticdata::SqmSerialize* Arena::CreateMaybeMessage< ::protobuf::staticdata::SqmSerialize >(Arena* arena) {
		return Arena::CreateMessageInternal< ::protobuf::staticdata::SqmSerialize >(arena);
	}
	template<> PROTOBUF_NOINLINE::protobuf::staticdata::HouseSerializeSqm* Arena::CreateMaybeMessage< ::protobuf::staticdata::HouseSerializeSqm >(Arena* arena) {
		return Arena::CreateMessageInternal< ::protobuf::staticdata::HouseSerializeSqm >(arena);
	}
	template<> PROTOBUF_NOINLINE::protobuf::staticdata::HouseSerialize* Arena::CreateMaybeMessage< ::protobuf::staticdata::HouseSerialize >(Arena* arena) {
		return Arena::CreateMessageInternal< ::protobuf::staticdata::HouseSerialize >(arena);
	}
	template<> PROTOBUF_NOINLINE::protobuf::staticdata::HouseData* Arena::CreateMaybeMessage< ::protobuf::staticdata::HouseData >(Arena* arena) {
		return Arena::CreateMessageInternal< ::protobuf::staticdata::HouseData >(arena);
	}
	template<> PROTOBUF_NOINLINE::protobuf::staticdata::StaticMapData* Arena::CreateMaybeMessage< ::protobuf::staticdata::StaticMapData >(Arena* arena) {
		return Arena::CreateMessageInternal< ::protobuf::staticdata::StaticMapData >(arena);
	}
	PROTOBUF_NAMESPACE_CLOSE

		// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
