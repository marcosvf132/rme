// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: staticmapdata.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_staticmapdata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_staticmapdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_staticmapdata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
	class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_staticmapdata_2eproto {
	static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
		PROTOBUF_SECTION_VARIABLE(protodesc_cold);
	static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
		PROTOBUF_SECTION_VARIABLE(protodesc_cold);
	static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
		PROTOBUF_SECTION_VARIABLE(protodesc_cold);
	static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
	static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
	static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_staticmapdata_2eproto;
namespace protobuf {
	namespace staticdata {
		class House;
		class HouseDefaultTypeInternal;
		extern HouseDefaultTypeInternal _House_default_instance_;
		class HouseData;
		class HouseDataDefaultTypeInternal;
		extern HouseDataDefaultTypeInternal _HouseData_default_instance_;
		class HousePosition;
		class HousePositionDefaultTypeInternal;
		extern HousePositionDefaultTypeInternal _HousePosition_default_instance_;
		class HousePositionTopLeft;
		class HousePositionTopLeftDefaultTypeInternal;
		extern HousePositionTopLeftDefaultTypeInternal _HousePositionTopLeft_default_instance_;
		class HouseSerialize;
		class HouseSerializeDefaultTypeInternal;
		extern HouseSerializeDefaultTypeInternal _HouseSerialize_default_instance_;
		class HouseSerializeSqm;
		class HouseSerializeSqmDefaultTypeInternal;
		extern HouseSerializeSqmDefaultTypeInternal _HouseSerializeSqm_default_instance_;
		class HouseSizeSquare;
		class HouseSizeSquareDefaultTypeInternal;
		extern HouseSizeSquareDefaultTypeInternal _HouseSizeSquare_default_instance_;
		class SqmIteratorValue;
		class SqmIteratorValueDefaultTypeInternal;
		extern SqmIteratorValueDefaultTypeInternal _SqmIteratorValue_default_instance_;
		class SqmSerialize;
		class SqmSerializeDefaultTypeInternal;
		extern SqmSerializeDefaultTypeInternal _SqmSerialize_default_instance_;
		class StaticData;
		class StaticDataDefaultTypeInternal;
		extern StaticDataDefaultTypeInternal _StaticData_default_instance_;
		class StaticMapData;
		class StaticMapDataDefaultTypeInternal;
		extern StaticMapDataDefaultTypeInternal _StaticMapData_default_instance_;
	}  // namespace staticdata
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf::staticdata::House* Arena::CreateMaybeMessage<::protobuf::staticdata::House>(Arena*);
template<> ::protobuf::staticdata::HouseData* Arena::CreateMaybeMessage<::protobuf::staticdata::HouseData>(Arena*);
template<> ::protobuf::staticdata::HousePosition* Arena::CreateMaybeMessage<::protobuf::staticdata::HousePosition>(Arena*);
template<> ::protobuf::staticdata::HousePositionTopLeft* Arena::CreateMaybeMessage<::protobuf::staticdata::HousePositionTopLeft>(Arena*);
template<> ::protobuf::staticdata::HouseSerialize* Arena::CreateMaybeMessage<::protobuf::staticdata::HouseSerialize>(Arena*);
template<> ::protobuf::staticdata::HouseSerializeSqm* Arena::CreateMaybeMessage<::protobuf::staticdata::HouseSerializeSqm>(Arena*);
template<> ::protobuf::staticdata::HouseSizeSquare* Arena::CreateMaybeMessage<::protobuf::staticdata::HouseSizeSquare>(Arena*);
template<> ::protobuf::staticdata::SqmIteratorValue* Arena::CreateMaybeMessage<::protobuf::staticdata::SqmIteratorValue>(Arena*);
template<> ::protobuf::staticdata::SqmSerialize* Arena::CreateMaybeMessage<::protobuf::staticdata::SqmSerialize>(Arena*);
template<> ::protobuf::staticdata::StaticData* Arena::CreateMaybeMessage<::protobuf::staticdata::StaticData>(Arena*);
template<> ::protobuf::staticdata::StaticMapData* Arena::CreateMaybeMessage<::protobuf::staticdata::StaticMapData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf {
	namespace staticdata {

		// ===================================================================

		class StaticData PROTOBUF_FINAL :
			public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.staticdata.StaticData) */ {
		public:
			inline StaticData() : StaticData(nullptr) {};
			virtual ~StaticData();

			StaticData(const StaticData& from);
			StaticData(StaticData&& from) noexcept
				: StaticData() {
				*this = ::std::move(from);
			}

			inline StaticData& operator=(const StaticData& from) {
				CopyFrom(from);
				return *this;
			}
			inline StaticData& operator=(StaticData&& from) noexcept {
				if (GetArena() == from.GetArena()) {
					if (this != &from) InternalSwap(&from);
				}
				else {
					CopyFrom(from);
				}
				return *this;
			}

			inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
				return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
			}
			inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
				return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
				return GetDescriptor();
			}
			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
				return GetMetadataStatic().descriptor;
			}
			static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
				return GetMetadataStatic().reflection;
			}
			static const StaticData& default_instance();

			static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
			static inline const StaticData* internal_default_instance() {
				return reinterpret_cast<const StaticData*>(
					&_StaticData_default_instance_);
			}
			static constexpr int kIndexInFileMessages =
				0;

			friend void swap(StaticData& a, StaticData& b) {
				a.Swap(&b);
			}
			inline void Swap(StaticData* other) {
				if (other == this) return;
				if (GetArena() == other->GetArena()) {
					InternalSwap(other);
				}
				else {
					::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
				}
			}
			void UnsafeArenaSwap(StaticData* other) {
				if (other == this) return;
				GOOGLE_DCHECK(GetArena() == other->GetArena());
				InternalSwap(other);
			}

			// implements Message ----------------------------------------------

			inline StaticData* New() const final {
				return CreateMaybeMessage<StaticData>(nullptr);
			}

			StaticData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
				return CreateMaybeMessage<StaticData>(arena);
			}
			void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void CopyFrom(const StaticData& from);
			void MergeFrom(const StaticData& from);
			PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
			bool IsInitialized() const final;

			size_t ByteSizeLong() const final;
			const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
			::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
			int GetCachedSize() const final { return _cached_size_.Get(); }

		private:
			inline void SharedCtor();
			inline void SharedDtor();
			void SetCachedSize(int size) const final;
			void InternalSwap(StaticData* other);
			friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
			static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
				return "protobuf.staticdata.StaticData";
			}
		protected:
			explicit StaticData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		private:
			static void ArenaDtor(void* object);
			inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		public:

			::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
		private:
			static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
				::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_staticmapdata_2eproto);
				return ::descriptor_table_staticmapdata_2eproto.file_level_metadata[kIndexInFileMessages];
			}

		public:

			// nested types ----------------------------------------------------

			// accessors -------------------------------------------------------

			enum : int {
				kMapdataFieldNumber = 1,
				kHouseFieldNumber = 3,
			};
			// repeated .protobuf.staticdata.StaticMapData mapdata = 1;
			int mapdata_size() const;
		private:
			int _internal_mapdata_size() const;
		public:
			void clear_mapdata();
			::protobuf::staticdata::StaticMapData* mutable_mapdata(int index);
			::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::StaticMapData >*
				mutable_mapdata();
		private:
			const ::protobuf::staticdata::StaticMapData& _internal_mapdata(int index) const;
			::protobuf::staticdata::StaticMapData* _internal_add_mapdata();
		public:
			const ::protobuf::staticdata::StaticMapData& mapdata(int index) const;
			::protobuf::staticdata::StaticMapData* add_mapdata();
			const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::StaticMapData >&
				mapdata() const;

			// repeated .protobuf.staticdata.House house = 3;
			int house_size() const;
		private:
			int _internal_house_size() const;
		public:
			void clear_house();
			::protobuf::staticdata::House* mutable_house(int index);
			::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::House >*
				mutable_house();
		private:
			const ::protobuf::staticdata::House& _internal_house(int index) const;
			::protobuf::staticdata::House* _internal_add_house();
		public:
			const ::protobuf::staticdata::House& house(int index) const;
			::protobuf::staticdata::House* add_house();
			const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::House >&
				house() const;

			// @@protoc_insertion_point(class_scope:protobuf.staticdata.StaticData)
		private:
			class _Internal;

			template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
			typedef void InternalArenaConstructable_;
			typedef void DestructorSkippable_;
			::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::StaticMapData > mapdata_;
			::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::House > house_;
			mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
			friend struct ::TableStruct_staticmapdata_2eproto;
		};
		// -------------------------------------------------------------------

		class HousePosition PROTOBUF_FINAL :
			public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.staticdata.HousePosition) */ {
		public:
			inline HousePosition() : HousePosition(nullptr) {};
			virtual ~HousePosition();

			HousePosition(const HousePosition& from);
			HousePosition(HousePosition&& from) noexcept
				: HousePosition() {
				*this = ::std::move(from);
			}

			inline HousePosition& operator=(const HousePosition& from) {
				CopyFrom(from);
				return *this;
			}
			inline HousePosition& operator=(HousePosition&& from) noexcept {
				if (GetArena() == from.GetArena()) {
					if (this != &from) InternalSwap(&from);
				}
				else {
					CopyFrom(from);
				}
				return *this;
			}

			inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
				return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
			}
			inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
				return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
				return GetDescriptor();
			}
			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
				return GetMetadataStatic().descriptor;
			}
			static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
				return GetMetadataStatic().reflection;
			}
			static const HousePosition& default_instance();

			static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
			static inline const HousePosition* internal_default_instance() {
				return reinterpret_cast<const HousePosition*>(
					&_HousePosition_default_instance_);
			}
			static constexpr int kIndexInFileMessages =
				1;

			friend void swap(HousePosition& a, HousePosition& b) {
				a.Swap(&b);
			}
			inline void Swap(HousePosition* other) {
				if (other == this) return;
				if (GetArena() == other->GetArena()) {
					InternalSwap(other);
				}
				else {
					::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
				}
			}
			void UnsafeArenaSwap(HousePosition* other) {
				if (other == this) return;
				GOOGLE_DCHECK(GetArena() == other->GetArena());
				InternalSwap(other);
			}

			// implements Message ----------------------------------------------

			inline HousePosition* New() const final {
				return CreateMaybeMessage<HousePosition>(nullptr);
			}

			HousePosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
				return CreateMaybeMessage<HousePosition>(arena);
			}
			void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void CopyFrom(const HousePosition& from);
			void MergeFrom(const HousePosition& from);
			PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
			bool IsInitialized() const final;

			size_t ByteSizeLong() const final;
			const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
			::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
			int GetCachedSize() const final { return _cached_size_.Get(); }

		private:
			inline void SharedCtor();
			inline void SharedDtor();
			void SetCachedSize(int size) const final;
			void InternalSwap(HousePosition* other);
			friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
			static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
				return "protobuf.staticdata.HousePosition";
			}
		protected:
			explicit HousePosition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		private:
			static void ArenaDtor(void* object);
			inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		public:

			::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
		private:
			static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
				::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_staticmapdata_2eproto);
				return ::descriptor_table_staticmapdata_2eproto.file_level_metadata[kIndexInFileMessages];
			}

		public:

			// nested types ----------------------------------------------------

			// accessors -------------------------------------------------------

			enum : int {
				kPosXFieldNumber = 1,
				kPosYFieldNumber = 2,
				kPosZFieldNumber = 3,
			};
			// optional uint32 pos_x = 1;
			bool has_pos_x() const;
		private:
			bool _internal_has_pos_x() const;
		public:
			void clear_pos_x();
			::PROTOBUF_NAMESPACE_ID::uint32 pos_x() const;
			void set_pos_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_pos_x() const;
			void _internal_set_pos_x(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// optional uint32 pos_y = 2;
			bool has_pos_y() const;
		private:
			bool _internal_has_pos_y() const;
		public:
			void clear_pos_y();
			::PROTOBUF_NAMESPACE_ID::uint32 pos_y() const;
			void set_pos_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_pos_y() const;
			void _internal_set_pos_y(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// optional uint32 pos_z = 3;
			bool has_pos_z() const;
		private:
			bool _internal_has_pos_z() const;
		public:
			void clear_pos_z();
			::PROTOBUF_NAMESPACE_ID::uint32 pos_z() const;
			void set_pos_z(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_pos_z() const;
			void _internal_set_pos_z(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// @@protoc_insertion_point(class_scope:protobuf.staticdata.HousePosition)
		private:
			class _Internal;

			template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
			typedef void InternalArenaConstructable_;
			typedef void DestructorSkippable_;
			::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
			mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
			::PROTOBUF_NAMESPACE_ID::uint32 pos_x_;
			::PROTOBUF_NAMESPACE_ID::uint32 pos_y_;
			::PROTOBUF_NAMESPACE_ID::uint32 pos_z_;
			friend struct ::TableStruct_staticmapdata_2eproto;
		};
		// -------------------------------------------------------------------

		class House PROTOBUF_FINAL :
			public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.staticdata.House) */ {
		public:
			inline House() : House(nullptr) {};
			virtual ~House();

			House(const House& from);
			House(House&& from) noexcept
				: House() {
				*this = ::std::move(from);
			}

			inline House& operator=(const House& from) {
				CopyFrom(from);
				return *this;
			}
			inline House& operator=(House&& from) noexcept {
				if (GetArena() == from.GetArena()) {
					if (this != &from) InternalSwap(&from);
				}
				else {
					CopyFrom(from);
				}
				return *this;
			}

			inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
				return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
			}
			inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
				return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
				return GetDescriptor();
			}
			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
				return GetMetadataStatic().descriptor;
			}
			static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
				return GetMetadataStatic().reflection;
			}
			static const House& default_instance();

			static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
			static inline const House* internal_default_instance() {
				return reinterpret_cast<const House*>(
					&_House_default_instance_);
			}
			static constexpr int kIndexInFileMessages =
				2;

			friend void swap(House& a, House& b) {
				a.Swap(&b);
			}
			inline void Swap(House* other) {
				if (other == this) return;
				if (GetArena() == other->GetArena()) {
					InternalSwap(other);
				}
				else {
					::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
				}
			}
			void UnsafeArenaSwap(House* other) {
				if (other == this) return;
				GOOGLE_DCHECK(GetArena() == other->GetArena());
				InternalSwap(other);
			}

			// implements Message ----------------------------------------------

			inline House* New() const final {
				return CreateMaybeMessage<House>(nullptr);
			}

			House* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
				return CreateMaybeMessage<House>(arena);
			}
			void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void CopyFrom(const House& from);
			void MergeFrom(const House& from);
			PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
			bool IsInitialized() const final;

			size_t ByteSizeLong() const final;
			const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
			::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
			int GetCachedSize() const final { return _cached_size_.Get(); }

		private:
			inline void SharedCtor();
			inline void SharedDtor();
			void SetCachedSize(int size) const final;
			void InternalSwap(House* other);
			friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
			static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
				return "protobuf.staticdata.House";
			}
		protected:
			explicit House(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		private:
			static void ArenaDtor(void* object);
			inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		public:

			::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
		private:
			static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
				::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_staticmapdata_2eproto);
				return ::descriptor_table_staticmapdata_2eproto.file_level_metadata[kIndexInFileMessages];
			}

		public:

			// nested types ----------------------------------------------------

			// accessors -------------------------------------------------------

			enum : int {
				kNameFieldNumber = 2,
				kUnknownstringFieldNumber = 3,
				kCityFieldNumber = 9,
				kHousePositionFieldNumber = 6,
				kHouseIdFieldNumber = 1,
				kPriceFieldNumber = 4,
				kBedsFieldNumber = 5,
				kSizeSqmFieldNumber = 7,
				kGuildhallFieldNumber = 8,
				kShopFieldNumber = 10,
			};
			// optional string name = 2;
			bool has_name() const;
		private:
			bool _internal_has_name() const;
		public:
			void clear_name();
			const std::string& name() const;
			void set_name(const std::string& value);
			void set_name(std::string&& value);
			void set_name(const char* value);
			void set_name(const char* value, size_t size);
			std::string* mutable_name();
			std::string* release_name();
			void set_allocated_name(std::string* name);
			GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
				"    string fields are deprecated and will be removed in a"
				"    future release.")
				std::string* unsafe_arena_release_name();
			GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
				"    string fields are deprecated and will be removed in a"
				"    future release.")
				void unsafe_arena_set_allocated_name(
					std::string* name);
		private:
			const std::string& _internal_name() const;
			void _internal_set_name(const std::string& value);
			std::string* _internal_mutable_name();
		public:

			// optional string unknownstring = 3;
			bool has_unknownstring() const;
		private:
			bool _internal_has_unknownstring() const;
		public:
			void clear_unknownstring();
			const std::string& unknownstring() const;
			void set_unknownstring(const std::string& value);
			void set_unknownstring(std::string&& value);
			void set_unknownstring(const char* value);
			void set_unknownstring(const char* value, size_t size);
			std::string* mutable_unknownstring();
			std::string* release_unknownstring();
			void set_allocated_unknownstring(std::string* unknownstring);
			GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
				"    string fields are deprecated and will be removed in a"
				"    future release.")
				std::string* unsafe_arena_release_unknownstring();
			GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
				"    string fields are deprecated and will be removed in a"
				"    future release.")
				void unsafe_arena_set_allocated_unknownstring(
					std::string* unknownstring);
		private:
			const std::string& _internal_unknownstring() const;
			void _internal_set_unknownstring(const std::string& value);
			std::string* _internal_mutable_unknownstring();
		public:

			// optional string city = 9;
			bool has_city() const;
		private:
			bool _internal_has_city() const;
		public:
			void clear_city();
			const std::string& city() const;
			void set_city(const std::string& value);
			void set_city(std::string&& value);
			void set_city(const char* value);
			void set_city(const char* value, size_t size);
			std::string* mutable_city();
			std::string* release_city();
			void set_allocated_city(std::string* city);
			GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
				"    string fields are deprecated and will be removed in a"
				"    future release.")
				std::string* unsafe_arena_release_city();
			GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
				"    string fields are deprecated and will be removed in a"
				"    future release.")
				void unsafe_arena_set_allocated_city(
					std::string* city);
		private:
			const std::string& _internal_city() const;
			void _internal_set_city(const std::string& value);
			std::string* _internal_mutable_city();
		public:

			// optional .protobuf.staticdata.HousePosition housePosition = 6;
			bool has_houseposition() const;
		private:
			bool _internal_has_houseposition() const;
		public:
			void clear_houseposition();
			const ::protobuf::staticdata::HousePosition& houseposition() const;
			::protobuf::staticdata::HousePosition* release_houseposition();
			::protobuf::staticdata::HousePosition* mutable_houseposition();
			void set_allocated_houseposition(::protobuf::staticdata::HousePosition* houseposition);
		private:
			const ::protobuf::staticdata::HousePosition& _internal_houseposition() const;
			::protobuf::staticdata::HousePosition* _internal_mutable_houseposition();
		public:
			void unsafe_arena_set_allocated_houseposition(
				::protobuf::staticdata::HousePosition* houseposition);
			::protobuf::staticdata::HousePosition* unsafe_arena_release_houseposition();

			// optional uint32 house_id = 1;
			bool has_house_id() const;
		private:
			bool _internal_has_house_id() const;
		public:
			void clear_house_id();
			::PROTOBUF_NAMESPACE_ID::uint32 house_id() const;
			void set_house_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_house_id() const;
			void _internal_set_house_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// optional uint32 price = 4;
			bool has_price() const;
		private:
			bool _internal_has_price() const;
		public:
			void clear_price();
			::PROTOBUF_NAMESPACE_ID::uint32 price() const;
			void set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_price() const;
			void _internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// optional uint32 beds = 5;
			bool has_beds() const;
		private:
			bool _internal_has_beds() const;
		public:
			void clear_beds();
			::PROTOBUF_NAMESPACE_ID::uint32 beds() const;
			void set_beds(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_beds() const;
			void _internal_set_beds(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// optional uint32 size_sqm = 7;
			bool has_size_sqm() const;
		private:
			bool _internal_has_size_sqm() const;
		public:
			void clear_size_sqm();
			::PROTOBUF_NAMESPACE_ID::uint32 size_sqm() const;
			void set_size_sqm(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_size_sqm() const;
			void _internal_set_size_sqm(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// optional bool guildhall = 8;
			bool has_guildhall() const;
		private:
			bool _internal_has_guildhall() const;
		public:
			void clear_guildhall();
			bool guildhall() const;
			void set_guildhall(bool value);
		private:
			bool _internal_guildhall() const;
			void _internal_set_guildhall(bool value);
		public:

			// optional bool shop = 10;
			bool has_shop() const;
		private:
			bool _internal_has_shop() const;
		public:
			void clear_shop();
			bool shop() const;
			void set_shop(bool value);
		private:
			bool _internal_shop() const;
			void _internal_set_shop(bool value);
		public:

			// @@protoc_insertion_point(class_scope:protobuf.staticdata.House)
		private:
			class _Internal;

			template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
			typedef void InternalArenaConstructable_;
			typedef void DestructorSkippable_;
			::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
			mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
			::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
			::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr unknownstring_;
			::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr city_;
			::protobuf::staticdata::HousePosition* houseposition_;
			::PROTOBUF_NAMESPACE_ID::uint32 house_id_;
			::PROTOBUF_NAMESPACE_ID::uint32 price_;
			::PROTOBUF_NAMESPACE_ID::uint32 beds_;
			::PROTOBUF_NAMESPACE_ID::uint32 size_sqm_;
			bool guildhall_;
			bool shop_;
			friend struct ::TableStruct_staticmapdata_2eproto;
		};
		// -------------------------------------------------------------------

		class HousePositionTopLeft PROTOBUF_FINAL :
			public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.staticdata.HousePositionTopLeft) */ {
		public:
			inline HousePositionTopLeft() : HousePositionTopLeft(nullptr) {};
			virtual ~HousePositionTopLeft();

			HousePositionTopLeft(const HousePositionTopLeft& from);
			HousePositionTopLeft(HousePositionTopLeft&& from) noexcept
				: HousePositionTopLeft() {
				*this = ::std::move(from);
			}

			inline HousePositionTopLeft& operator=(const HousePositionTopLeft& from) {
				CopyFrom(from);
				return *this;
			}
			inline HousePositionTopLeft& operator=(HousePositionTopLeft&& from) noexcept {
				if (GetArena() == from.GetArena()) {
					if (this != &from) InternalSwap(&from);
				}
				else {
					CopyFrom(from);
				}
				return *this;
			}

			inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
				return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
			}
			inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
				return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
				return GetDescriptor();
			}
			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
				return GetMetadataStatic().descriptor;
			}
			static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
				return GetMetadataStatic().reflection;
			}
			static const HousePositionTopLeft& default_instance();

			static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
			static inline const HousePositionTopLeft* internal_default_instance() {
				return reinterpret_cast<const HousePositionTopLeft*>(
					&_HousePositionTopLeft_default_instance_);
			}
			static constexpr int kIndexInFileMessages =
				3;

			friend void swap(HousePositionTopLeft& a, HousePositionTopLeft& b) {
				a.Swap(&b);
			}
			inline void Swap(HousePositionTopLeft* other) {
				if (other == this) return;
				if (GetArena() == other->GetArena()) {
					InternalSwap(other);
				}
				else {
					::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
				}
			}
			void UnsafeArenaSwap(HousePositionTopLeft* other) {
				if (other == this) return;
				GOOGLE_DCHECK(GetArena() == other->GetArena());
				InternalSwap(other);
			}

			// implements Message ----------------------------------------------

			inline HousePositionTopLeft* New() const final {
				return CreateMaybeMessage<HousePositionTopLeft>(nullptr);
			}

			HousePositionTopLeft* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
				return CreateMaybeMessage<HousePositionTopLeft>(arena);
			}
			void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void CopyFrom(const HousePositionTopLeft& from);
			void MergeFrom(const HousePositionTopLeft& from);
			PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
			bool IsInitialized() const final;

			size_t ByteSizeLong() const final;
			const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
			::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
			int GetCachedSize() const final { return _cached_size_.Get(); }

		private:
			inline void SharedCtor();
			inline void SharedDtor();
			void SetCachedSize(int size) const final;
			void InternalSwap(HousePositionTopLeft* other);
			friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
			static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
				return "protobuf.staticdata.HousePositionTopLeft";
			}
		protected:
			explicit HousePositionTopLeft(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		private:
			static void ArenaDtor(void* object);
			inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		public:

			::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
		private:
			static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
				::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_staticmapdata_2eproto);
				return ::descriptor_table_staticmapdata_2eproto.file_level_metadata[kIndexInFileMessages];
			}

		public:

			// nested types ----------------------------------------------------

			// accessors -------------------------------------------------------

			enum : int {
				kPositionxFieldNumber = 1,
				kPositionyFieldNumber = 2,
				kPositionzFieldNumber = 3,
			};
			// optional uint32 positionx = 1;
			bool has_positionx() const;
		private:
			bool _internal_has_positionx() const;
		public:
			void clear_positionx();
			::PROTOBUF_NAMESPACE_ID::uint32 positionx() const;
			void set_positionx(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_positionx() const;
			void _internal_set_positionx(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// optional uint32 positiony = 2;
			bool has_positiony() const;
		private:
			bool _internal_has_positiony() const;
		public:
			void clear_positiony();
			::PROTOBUF_NAMESPACE_ID::uint32 positiony() const;
			void set_positiony(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_positiony() const;
			void _internal_set_positiony(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// optional uint32 positionz = 3;
			bool has_positionz() const;
		private:
			bool _internal_has_positionz() const;
		public:
			void clear_positionz();
			::PROTOBUF_NAMESPACE_ID::uint32 positionz() const;
			void set_positionz(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_positionz() const;
			void _internal_set_positionz(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// @@protoc_insertion_point(class_scope:protobuf.staticdata.HousePositionTopLeft)
		private:
			class _Internal;

			template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
			typedef void InternalArenaConstructable_;
			typedef void DestructorSkippable_;
			::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
			mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
			::PROTOBUF_NAMESPACE_ID::uint32 positionx_;
			::PROTOBUF_NAMESPACE_ID::uint32 positiony_;
			::PROTOBUF_NAMESPACE_ID::uint32 positionz_;
			friend struct ::TableStruct_staticmapdata_2eproto;
		};
		// -------------------------------------------------------------------

		class HouseSizeSquare PROTOBUF_FINAL :
			public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.staticdata.HouseSizeSquare) */ {
		public:
			inline HouseSizeSquare() : HouseSizeSquare(nullptr) {};
			virtual ~HouseSizeSquare();

			HouseSizeSquare(const HouseSizeSquare& from);
			HouseSizeSquare(HouseSizeSquare&& from) noexcept
				: HouseSizeSquare() {
				*this = ::std::move(from);
			}

			inline HouseSizeSquare& operator=(const HouseSizeSquare& from) {
				CopyFrom(from);
				return *this;
			}
			inline HouseSizeSquare& operator=(HouseSizeSquare&& from) noexcept {
				if (GetArena() == from.GetArena()) {
					if (this != &from) InternalSwap(&from);
				}
				else {
					CopyFrom(from);
				}
				return *this;
			}

			inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
				return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
			}
			inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
				return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
				return GetDescriptor();
			}
			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
				return GetMetadataStatic().descriptor;
			}
			static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
				return GetMetadataStatic().reflection;
			}
			static const HouseSizeSquare& default_instance();

			static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
			static inline const HouseSizeSquare* internal_default_instance() {
				return reinterpret_cast<const HouseSizeSquare*>(
					&_HouseSizeSquare_default_instance_);
			}
			static constexpr int kIndexInFileMessages =
				4;

			friend void swap(HouseSizeSquare& a, HouseSizeSquare& b) {
				a.Swap(&b);
			}
			inline void Swap(HouseSizeSquare* other) {
				if (other == this) return;
				if (GetArena() == other->GetArena()) {
					InternalSwap(other);
				}
				else {
					::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
				}
			}
			void UnsafeArenaSwap(HouseSizeSquare* other) {
				if (other == this) return;
				GOOGLE_DCHECK(GetArena() == other->GetArena());
				InternalSwap(other);
			}

			// implements Message ----------------------------------------------

			inline HouseSizeSquare* New() const final {
				return CreateMaybeMessage<HouseSizeSquare>(nullptr);
			}

			HouseSizeSquare* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
				return CreateMaybeMessage<HouseSizeSquare>(arena);
			}
			void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void CopyFrom(const HouseSizeSquare& from);
			void MergeFrom(const HouseSizeSquare& from);
			PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
			bool IsInitialized() const final;

			size_t ByteSizeLong() const final;
			const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
			::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
			int GetCachedSize() const final { return _cached_size_.Get(); }

		private:
			inline void SharedCtor();
			inline void SharedDtor();
			void SetCachedSize(int size) const final;
			void InternalSwap(HouseSizeSquare* other);
			friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
			static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
				return "protobuf.staticdata.HouseSizeSquare";
			}
		protected:
			explicit HouseSizeSquare(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		private:
			static void ArenaDtor(void* object);
			inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		public:

			::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
		private:
			static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
				::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_staticmapdata_2eproto);
				return ::descriptor_table_staticmapdata_2eproto.file_level_metadata[kIndexInFileMessages];
			}

		public:

			// nested types ----------------------------------------------------

			// accessors -------------------------------------------------------

			enum : int {
				kPositionxFieldNumber = 1,
				kPositionyFieldNumber = 2,
				kPositionzFieldNumber = 3,
			};
			// optional uint32 positionx = 1;
			bool has_positionx() const;
		private:
			bool _internal_has_positionx() const;
		public:
			void clear_positionx();
			::PROTOBUF_NAMESPACE_ID::uint32 positionx() const;
			void set_positionx(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_positionx() const;
			void _internal_set_positionx(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// optional uint32 positiony = 2;
			bool has_positiony() const;
		private:
			bool _internal_has_positiony() const;
		public:
			void clear_positiony();
			::PROTOBUF_NAMESPACE_ID::uint32 positiony() const;
			void set_positiony(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_positiony() const;
			void _internal_set_positiony(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// optional uint32 positionz = 3;
			bool has_positionz() const;
		private:
			bool _internal_has_positionz() const;
		public:
			void clear_positionz();
			::PROTOBUF_NAMESPACE_ID::uint32 positionz() const;
			void set_positionz(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_positionz() const;
			void _internal_set_positionz(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// @@protoc_insertion_point(class_scope:protobuf.staticdata.HouseSizeSquare)
		private:
			class _Internal;

			template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
			typedef void InternalArenaConstructable_;
			typedef void DestructorSkippable_;
			::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
			mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
			::PROTOBUF_NAMESPACE_ID::uint32 positionx_;
			::PROTOBUF_NAMESPACE_ID::uint32 positiony_;
			::PROTOBUF_NAMESPACE_ID::uint32 positionz_;
			friend struct ::TableStruct_staticmapdata_2eproto;
		};
		// -------------------------------------------------------------------

		class SqmIteratorValue PROTOBUF_FINAL :
			public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.staticdata.SqmIteratorValue) */ {
		public:
			inline SqmIteratorValue() : SqmIteratorValue(nullptr) {};
			virtual ~SqmIteratorValue();

			SqmIteratorValue(const SqmIteratorValue& from);
			SqmIteratorValue(SqmIteratorValue&& from) noexcept
				: SqmIteratorValue() {
				*this = ::std::move(from);
			}

			inline SqmIteratorValue& operator=(const SqmIteratorValue& from) {
				CopyFrom(from);
				return *this;
			}
			inline SqmIteratorValue& operator=(SqmIteratorValue&& from) noexcept {
				if (GetArena() == from.GetArena()) {
					if (this != &from) InternalSwap(&from);
				}
				else {
					CopyFrom(from);
				}
				return *this;
			}

			inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
				return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
			}
			inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
				return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
				return GetDescriptor();
			}
			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
				return GetMetadataStatic().descriptor;
			}
			static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
				return GetMetadataStatic().reflection;
			}
			static const SqmIteratorValue& default_instance();

			static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
			static inline const SqmIteratorValue* internal_default_instance() {
				return reinterpret_cast<const SqmIteratorValue*>(
					&_SqmIteratorValue_default_instance_);
			}
			static constexpr int kIndexInFileMessages =
				5;

			friend void swap(SqmIteratorValue& a, SqmIteratorValue& b) {
				a.Swap(&b);
			}
			inline void Swap(SqmIteratorValue* other) {
				if (other == this) return;
				if (GetArena() == other->GetArena()) {
					InternalSwap(other);
				}
				else {
					::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
				}
			}
			void UnsafeArenaSwap(SqmIteratorValue* other) {
				if (other == this) return;
				GOOGLE_DCHECK(GetArena() == other->GetArena());
				InternalSwap(other);
			}

			// implements Message ----------------------------------------------

			inline SqmIteratorValue* New() const final {
				return CreateMaybeMessage<SqmIteratorValue>(nullptr);
			}

			SqmIteratorValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
				return CreateMaybeMessage<SqmIteratorValue>(arena);
			}
			void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void CopyFrom(const SqmIteratorValue& from);
			void MergeFrom(const SqmIteratorValue& from);
			PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
			bool IsInitialized() const final;

			size_t ByteSizeLong() const final;
			const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
			::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
			int GetCachedSize() const final { return _cached_size_.Get(); }

		private:
			inline void SharedCtor();
			inline void SharedDtor();
			void SetCachedSize(int size) const final;
			void InternalSwap(SqmIteratorValue* other);
			friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
			static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
				return "protobuf.staticdata.SqmIteratorValue";
			}
		protected:
			explicit SqmIteratorValue(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		private:
			static void ArenaDtor(void* object);
			inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		public:

			::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
		private:
			static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
				::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_staticmapdata_2eproto);
				return ::descriptor_table_staticmapdata_2eproto.file_level_metadata[kIndexInFileMessages];
			}

		public:

			// nested types ----------------------------------------------------

			// accessors -------------------------------------------------------

			enum : int {
				kClientIDFieldNumber = 1,
			};
			// optional uint32 clientID = 1;
			bool has_clientid() const;
		private:
			bool _internal_has_clientid() const;
		public:
			void clear_clientid();
			::PROTOBUF_NAMESPACE_ID::uint32 clientid() const;
			void set_clientid(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_clientid() const;
			void _internal_set_clientid(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// @@protoc_insertion_point(class_scope:protobuf.staticdata.SqmIteratorValue)
		private:
			class _Internal;

			template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
			typedef void InternalArenaConstructable_;
			typedef void DestructorSkippable_;
			::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
			mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
			::PROTOBUF_NAMESPACE_ID::uint32 clientid_;
			friend struct ::TableStruct_staticmapdata_2eproto;
		};
		// -------------------------------------------------------------------

		class SqmSerialize PROTOBUF_FINAL :
			public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.staticdata.SqmSerialize) */ {
		public:
			inline SqmSerialize() : SqmSerialize(nullptr) {};
			virtual ~SqmSerialize();

			SqmSerialize(const SqmSerialize& from);
			SqmSerialize(SqmSerialize&& from) noexcept
				: SqmSerialize() {
				*this = ::std::move(from);
			}

			inline SqmSerialize& operator=(const SqmSerialize& from) {
				CopyFrom(from);
				return *this;
			}
			inline SqmSerialize& operator=(SqmSerialize&& from) noexcept {
				if (GetArena() == from.GetArena()) {
					if (this != &from) InternalSwap(&from);
				}
				else {
					CopyFrom(from);
				}
				return *this;
			}

			inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
				return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
			}
			inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
				return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
				return GetDescriptor();
			}
			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
				return GetMetadataStatic().descriptor;
			}
			static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
				return GetMetadataStatic().reflection;
			}
			static const SqmSerialize& default_instance();

			static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
			static inline const SqmSerialize* internal_default_instance() {
				return reinterpret_cast<const SqmSerialize*>(
					&_SqmSerialize_default_instance_);
			}
			static constexpr int kIndexInFileMessages =
				6;

			friend void swap(SqmSerialize& a, SqmSerialize& b) {
				a.Swap(&b);
			}
			inline void Swap(SqmSerialize* other) {
				if (other == this) return;
				if (GetArena() == other->GetArena()) {
					InternalSwap(other);
				}
				else {
					::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
				}
			}
			void UnsafeArenaSwap(SqmSerialize* other) {
				if (other == this) return;
				GOOGLE_DCHECK(GetArena() == other->GetArena());
				InternalSwap(other);
			}

			// implements Message ----------------------------------------------

			inline SqmSerialize* New() const final {
				return CreateMaybeMessage<SqmSerialize>(nullptr);
			}

			SqmSerialize* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
				return CreateMaybeMessage<SqmSerialize>(arena);
			}
			void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void CopyFrom(const SqmSerialize& from);
			void MergeFrom(const SqmSerialize& from);
			PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
			bool IsInitialized() const final;

			size_t ByteSizeLong() const final;
			const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
			::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
			int GetCachedSize() const final { return _cached_size_.Get(); }

		private:
			inline void SharedCtor();
			inline void SharedDtor();
			void SetCachedSize(int size) const final;
			void InternalSwap(SqmSerialize* other);
			friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
			static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
				return "protobuf.staticdata.SqmSerialize";
			}
		protected:
			explicit SqmSerialize(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		private:
			static void ArenaDtor(void* object);
			inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		public:

			::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
		private:
			static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
				::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_staticmapdata_2eproto);
				return ::descriptor_table_staticmapdata_2eproto.file_level_metadata[kIndexInFileMessages];
			}

		public:

			// nested types ----------------------------------------------------

			// accessors -------------------------------------------------------

			enum : int {
				kItemFieldNumber = 1,
				kJumpEmptyFieldNumber = 2,
			};
			// repeated .protobuf.staticdata.SqmIteratorValue item = 1;
			int item_size() const;
		private:
			int _internal_item_size() const;
		public:
			void clear_item();
			::protobuf::staticdata::SqmIteratorValue* mutable_item(int index);
			::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::SqmIteratorValue >*
				mutable_item();
		private:
			const ::protobuf::staticdata::SqmIteratorValue& _internal_item(int index) const;
			::protobuf::staticdata::SqmIteratorValue* _internal_add_item();
		public:
			const ::protobuf::staticdata::SqmIteratorValue& item(int index) const;
			::protobuf::staticdata::SqmIteratorValue* add_item();
			const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::SqmIteratorValue >&
				item() const;

			// optional uint32 jumpEmpty = 2;
			bool has_jumpempty() const;
		private:
			bool _internal_has_jumpempty() const;
		public:
			void clear_jumpempty();
			::PROTOBUF_NAMESPACE_ID::uint32 jumpempty() const;
			void set_jumpempty(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_jumpempty() const;
			void _internal_set_jumpempty(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// @@protoc_insertion_point(class_scope:protobuf.staticdata.SqmSerialize)
		private:
			class _Internal;

			template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
			typedef void InternalArenaConstructable_;
			typedef void DestructorSkippable_;
			::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
			mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
			::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::SqmIteratorValue > item_;
			::PROTOBUF_NAMESPACE_ID::uint32 jumpempty_;
			friend struct ::TableStruct_staticmapdata_2eproto;
		};
		// -------------------------------------------------------------------

		class HouseSerializeSqm PROTOBUF_FINAL :
			public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.staticdata.HouseSerializeSqm) */ {
		public:
			inline HouseSerializeSqm() : HouseSerializeSqm(nullptr) {};
			virtual ~HouseSerializeSqm();

			HouseSerializeSqm(const HouseSerializeSqm& from);
			HouseSerializeSqm(HouseSerializeSqm&& from) noexcept
				: HouseSerializeSqm() {
				*this = ::std::move(from);
			}

			inline HouseSerializeSqm& operator=(const HouseSerializeSqm& from) {
				CopyFrom(from);
				return *this;
			}
			inline HouseSerializeSqm& operator=(HouseSerializeSqm&& from) noexcept {
				if (GetArena() == from.GetArena()) {
					if (this != &from) InternalSwap(&from);
				}
				else {
					CopyFrom(from);
				}
				return *this;
			}

			inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
				return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
			}
			inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
				return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
				return GetDescriptor();
			}
			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
				return GetMetadataStatic().descriptor;
			}
			static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
				return GetMetadataStatic().reflection;
			}
			static const HouseSerializeSqm& default_instance();

			static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
			static inline const HouseSerializeSqm* internal_default_instance() {
				return reinterpret_cast<const HouseSerializeSqm*>(
					&_HouseSerializeSqm_default_instance_);
			}
			static constexpr int kIndexInFileMessages =
				7;

			friend void swap(HouseSerializeSqm& a, HouseSerializeSqm& b) {
				a.Swap(&b);
			}
			inline void Swap(HouseSerializeSqm* other) {
				if (other == this) return;
				if (GetArena() == other->GetArena()) {
					InternalSwap(other);
				}
				else {
					::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
				}
			}
			void UnsafeArenaSwap(HouseSerializeSqm* other) {
				if (other == this) return;
				GOOGLE_DCHECK(GetArena() == other->GetArena());
				InternalSwap(other);
			}

			// implements Message ----------------------------------------------

			inline HouseSerializeSqm* New() const final {
				return CreateMaybeMessage<HouseSerializeSqm>(nullptr);
			}

			HouseSerializeSqm* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
				return CreateMaybeMessage<HouseSerializeSqm>(arena);
			}
			void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void CopyFrom(const HouseSerializeSqm& from);
			void MergeFrom(const HouseSerializeSqm& from);
			PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
			bool IsInitialized() const final;

			size_t ByteSizeLong() const final;
			const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
			::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
			int GetCachedSize() const final { return _cached_size_.Get(); }

		private:
			inline void SharedCtor();
			inline void SharedDtor();
			void SetCachedSize(int size) const final;
			void InternalSwap(HouseSerializeSqm* other);
			friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
			static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
				return "protobuf.staticdata.HouseSerializeSqm";
			}
		protected:
			explicit HouseSerializeSqm(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		private:
			static void ArenaDtor(void* object);
			inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		public:

			::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
		private:
			static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
				::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_staticmapdata_2eproto);
				return ::descriptor_table_staticmapdata_2eproto.file_level_metadata[kIndexInFileMessages];
			}

		public:

			// nested types ----------------------------------------------------

			// accessors -------------------------------------------------------

			enum : int {
				kSqmserializeFieldNumber = 3,
			};
			// repeated .protobuf.staticdata.SqmSerialize sqmserialize = 3;
			int sqmserialize_size() const;
		private:
			int _internal_sqmserialize_size() const;
		public:
			void clear_sqmserialize();
			::protobuf::staticdata::SqmSerialize* mutable_sqmserialize(int index);
			::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::SqmSerialize >*
				mutable_sqmserialize();
		private:
			const ::protobuf::staticdata::SqmSerialize& _internal_sqmserialize(int index) const;
			::protobuf::staticdata::SqmSerialize* _internal_add_sqmserialize();
		public:
			const ::protobuf::staticdata::SqmSerialize& sqmserialize(int index) const;
			::protobuf::staticdata::SqmSerialize* add_sqmserialize();
			const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::SqmSerialize >&
				sqmserialize() const;

			// @@protoc_insertion_point(class_scope:protobuf.staticdata.HouseSerializeSqm)
		private:
			class _Internal;

			template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
			typedef void InternalArenaConstructable_;
			typedef void DestructorSkippable_;
			::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::SqmSerialize > sqmserialize_;
			mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
			friend struct ::TableStruct_staticmapdata_2eproto;
		};
		// -------------------------------------------------------------------

		class HouseSerialize PROTOBUF_FINAL :
			public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.staticdata.HouseSerialize) */ {
		public:
			inline HouseSerialize() : HouseSerialize(nullptr) {};
			virtual ~HouseSerialize();

			HouseSerialize(const HouseSerialize& from);
			HouseSerialize(HouseSerialize&& from) noexcept
				: HouseSerialize() {
				*this = ::std::move(from);
			}

			inline HouseSerialize& operator=(const HouseSerialize& from) {
				CopyFrom(from);
				return *this;
			}
			inline HouseSerialize& operator=(HouseSerialize&& from) noexcept {
				if (GetArena() == from.GetArena()) {
					if (this != &from) InternalSwap(&from);
				}
				else {
					CopyFrom(from);
				}
				return *this;
			}

			inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
				return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
			}
			inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
				return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
				return GetDescriptor();
			}
			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
				return GetMetadataStatic().descriptor;
			}
			static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
				return GetMetadataStatic().reflection;
			}
			static const HouseSerialize& default_instance();

			static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
			static inline const HouseSerialize* internal_default_instance() {
				return reinterpret_cast<const HouseSerialize*>(
					&_HouseSerialize_default_instance_);
			}
			static constexpr int kIndexInFileMessages =
				8;

			friend void swap(HouseSerialize& a, HouseSerialize& b) {
				a.Swap(&b);
			}
			inline void Swap(HouseSerialize* other) {
				if (other == this) return;
				if (GetArena() == other->GetArena()) {
					InternalSwap(other);
				}
				else {
					::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
				}
			}
			void UnsafeArenaSwap(HouseSerialize* other) {
				if (other == this) return;
				GOOGLE_DCHECK(GetArena() == other->GetArena());
				InternalSwap(other);
			}

			// implements Message ----------------------------------------------

			inline HouseSerialize* New() const final {
				return CreateMaybeMessage<HouseSerialize>(nullptr);
			}

			HouseSerialize* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
				return CreateMaybeMessage<HouseSerialize>(arena);
			}
			void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void CopyFrom(const HouseSerialize& from);
			void MergeFrom(const HouseSerialize& from);
			PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
			bool IsInitialized() const final;

			size_t ByteSizeLong() const final;
			const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
			::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
			int GetCachedSize() const final { return _cached_size_.Get(); }

		private:
			inline void SharedCtor();
			inline void SharedDtor();
			void SetCachedSize(int size) const final;
			void InternalSwap(HouseSerialize* other);
			friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
			static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
				return "protobuf.staticdata.HouseSerialize";
			}
		protected:
			explicit HouseSerialize(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		private:
			static void ArenaDtor(void* object);
			inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		public:

			::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
		private:
			static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
				::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_staticmapdata_2eproto);
				return ::descriptor_table_staticmapdata_2eproto.file_level_metadata[kIndexInFileMessages];
			}

		public:

			// nested types ----------------------------------------------------

			// accessors -------------------------------------------------------

			enum : int {
				kHousesqmFieldNumber = 2,
			};
			// optional .protobuf.staticdata.HouseSerializeSqm housesqm = 2;
			bool has_housesqm() const;
		private:
			bool _internal_has_housesqm() const;
		public:
			void clear_housesqm();
			const ::protobuf::staticdata::HouseSerializeSqm& housesqm() const;
			::protobuf::staticdata::HouseSerializeSqm* release_housesqm();
			::protobuf::staticdata::HouseSerializeSqm* mutable_housesqm();
			void set_allocated_housesqm(::protobuf::staticdata::HouseSerializeSqm* housesqm);
		private:
			const ::protobuf::staticdata::HouseSerializeSqm& _internal_housesqm() const;
			::protobuf::staticdata::HouseSerializeSqm* _internal_mutable_housesqm();
		public:
			void unsafe_arena_set_allocated_housesqm(
				::protobuf::staticdata::HouseSerializeSqm* housesqm);
			::protobuf::staticdata::HouseSerializeSqm* unsafe_arena_release_housesqm();

			// @@protoc_insertion_point(class_scope:protobuf.staticdata.HouseSerialize)
		private:
			class _Internal;

			template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
			typedef void InternalArenaConstructable_;
			typedef void DestructorSkippable_;
			::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
			mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
			::protobuf::staticdata::HouseSerializeSqm* housesqm_;
			friend struct ::TableStruct_staticmapdata_2eproto;
		};
		// -------------------------------------------------------------------

		class HouseData PROTOBUF_FINAL :
			public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.staticdata.HouseData) */ {
		public:
			inline HouseData() : HouseData(nullptr) {};
			virtual ~HouseData();

			HouseData(const HouseData& from);
			HouseData(HouseData&& from) noexcept
				: HouseData() {
				*this = ::std::move(from);
			}

			inline HouseData& operator=(const HouseData& from) {
				CopyFrom(from);
				return *this;
			}
			inline HouseData& operator=(HouseData&& from) noexcept {
				if (GetArena() == from.GetArena()) {
					if (this != &from) InternalSwap(&from);
				}
				else {
					CopyFrom(from);
				}
				return *this;
			}

			inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
				return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
			}
			inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
				return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
				return GetDescriptor();
			}
			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
				return GetMetadataStatic().descriptor;
			}
			static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
				return GetMetadataStatic().reflection;
			}
			static const HouseData& default_instance();

			static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
			static inline const HouseData* internal_default_instance() {
				return reinterpret_cast<const HouseData*>(
					&_HouseData_default_instance_);
			}
			static constexpr int kIndexInFileMessages =
				9;

			friend void swap(HouseData& a, HouseData& b) {
				a.Swap(&b);
			}
			inline void Swap(HouseData* other) {
				if (other == this) return;
				if (GetArena() == other->GetArena()) {
					InternalSwap(other);
				}
				else {
					::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
				}
			}
			void UnsafeArenaSwap(HouseData* other) {
				if (other == this) return;
				GOOGLE_DCHECK(GetArena() == other->GetArena());
				InternalSwap(other);
			}

			// implements Message ----------------------------------------------

			inline HouseData* New() const final {
				return CreateMaybeMessage<HouseData>(nullptr);
			}

			HouseData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
				return CreateMaybeMessage<HouseData>(arena);
			}
			void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void CopyFrom(const HouseData& from);
			void MergeFrom(const HouseData& from);
			PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
			bool IsInitialized() const final;

			size_t ByteSizeLong() const final;
			const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
			::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
			int GetCachedSize() const final { return _cached_size_.Get(); }

		private:
			inline void SharedCtor();
			inline void SharedDtor();
			void SetCachedSize(int size) const final;
			void InternalSwap(HouseData* other);
			friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
			static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
				return "protobuf.staticdata.HouseData";
			}
		protected:
			explicit HouseData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		private:
			static void ArenaDtor(void* object);
			inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		public:

			::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
		private:
			static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
				::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_staticmapdata_2eproto);
				return ::descriptor_table_staticmapdata_2eproto.file_level_metadata[kIndexInFileMessages];
			}

		public:

			// nested types ----------------------------------------------------

			// accessors -------------------------------------------------------

			enum : int {
				kTopleftFieldNumber = 1,
				kHousesquareFieldNumber = 2,
				kSerializeFieldNumber = 3,
			};
			// optional .protobuf.staticdata.HousePositionTopLeft topleft = 1;
			bool has_topleft() const;
		private:
			bool _internal_has_topleft() const;
		public:
			void clear_topleft();
			const ::protobuf::staticdata::HousePositionTopLeft& topleft() const;
			::protobuf::staticdata::HousePositionTopLeft* release_topleft();
			::protobuf::staticdata::HousePositionTopLeft* mutable_topleft();
			void set_allocated_topleft(::protobuf::staticdata::HousePositionTopLeft* topleft);
		private:
			const ::protobuf::staticdata::HousePositionTopLeft& _internal_topleft() const;
			::protobuf::staticdata::HousePositionTopLeft* _internal_mutable_topleft();
		public:
			void unsafe_arena_set_allocated_topleft(
				::protobuf::staticdata::HousePositionTopLeft* topleft);
			::protobuf::staticdata::HousePositionTopLeft* unsafe_arena_release_topleft();

			// optional .protobuf.staticdata.HouseSizeSquare housesquare = 2;
			bool has_housesquare() const;
		private:
			bool _internal_has_housesquare() const;
		public:
			void clear_housesquare();
			const ::protobuf::staticdata::HouseSizeSquare& housesquare() const;
			::protobuf::staticdata::HouseSizeSquare* release_housesquare();
			::protobuf::staticdata::HouseSizeSquare* mutable_housesquare();
			void set_allocated_housesquare(::protobuf::staticdata::HouseSizeSquare* housesquare);
		private:
			const ::protobuf::staticdata::HouseSizeSquare& _internal_housesquare() const;
			::protobuf::staticdata::HouseSizeSquare* _internal_mutable_housesquare();
		public:
			void unsafe_arena_set_allocated_housesquare(
				::protobuf::staticdata::HouseSizeSquare* housesquare);
			::protobuf::staticdata::HouseSizeSquare* unsafe_arena_release_housesquare();

			// optional .protobuf.staticdata.HouseSerialize serialize = 3;
			bool has_serialize() const;
		private:
			bool _internal_has_serialize() const;
		public:
			void clear_serialize();
			const ::protobuf::staticdata::HouseSerialize& serialize() const;
			::protobuf::staticdata::HouseSerialize* release_serialize();
			::protobuf::staticdata::HouseSerialize* mutable_serialize();
			void set_allocated_serialize(::protobuf::staticdata::HouseSerialize* serialize);
		private:
			const ::protobuf::staticdata::HouseSerialize& _internal_serialize() const;
			::protobuf::staticdata::HouseSerialize* _internal_mutable_serialize();
		public:
			void unsafe_arena_set_allocated_serialize(
				::protobuf::staticdata::HouseSerialize* serialize);
			::protobuf::staticdata::HouseSerialize* unsafe_arena_release_serialize();

			// @@protoc_insertion_point(class_scope:protobuf.staticdata.HouseData)
		private:
			class _Internal;

			template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
			typedef void InternalArenaConstructable_;
			typedef void DestructorSkippable_;
			::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
			mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
			::protobuf::staticdata::HousePositionTopLeft* topleft_;
			::protobuf::staticdata::HouseSizeSquare* housesquare_;
			::protobuf::staticdata::HouseSerialize* serialize_;
			friend struct ::TableStruct_staticmapdata_2eproto;
		};
		// -------------------------------------------------------------------

		class StaticMapData PROTOBUF_FINAL :
			public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.staticdata.StaticMapData) */ {
		public:
			inline StaticMapData() : StaticMapData(nullptr) {};
			virtual ~StaticMapData();

			StaticMapData(const StaticMapData& from);
			StaticMapData(StaticMapData&& from) noexcept
				: StaticMapData() {
				*this = ::std::move(from);
			}

			inline StaticMapData& operator=(const StaticMapData& from) {
				CopyFrom(from);
				return *this;
			}
			inline StaticMapData& operator=(StaticMapData&& from) noexcept {
				if (GetArena() == from.GetArena()) {
					if (this != &from) InternalSwap(&from);
				}
				else {
					CopyFrom(from);
				}
				return *this;
			}

			inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
				return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
			}
			inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
				return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
			}

			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
				return GetDescriptor();
			}
			static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
				return GetMetadataStatic().descriptor;
			}
			static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
				return GetMetadataStatic().reflection;
			}
			static const StaticMapData& default_instance();

			static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
			static inline const StaticMapData* internal_default_instance() {
				return reinterpret_cast<const StaticMapData*>(
					&_StaticMapData_default_instance_);
			}
			static constexpr int kIndexInFileMessages =
				10;

			friend void swap(StaticMapData& a, StaticMapData& b) {
				a.Swap(&b);
			}
			inline void Swap(StaticMapData* other) {
				if (other == this) return;
				if (GetArena() == other->GetArena()) {
					InternalSwap(other);
				}
				else {
					::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
				}
			}
			void UnsafeArenaSwap(StaticMapData* other) {
				if (other == this) return;
				GOOGLE_DCHECK(GetArena() == other->GetArena());
				InternalSwap(other);
			}

			// implements Message ----------------------------------------------

			inline StaticMapData* New() const final {
				return CreateMaybeMessage<StaticMapData>(nullptr);
			}

			StaticMapData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
				return CreateMaybeMessage<StaticMapData>(arena);
			}
			void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
			void CopyFrom(const StaticMapData& from);
			void MergeFrom(const StaticMapData& from);
			PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
			bool IsInitialized() const final;

			size_t ByteSizeLong() const final;
			const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
			::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
				::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
			int GetCachedSize() const final { return _cached_size_.Get(); }

		private:
			inline void SharedCtor();
			inline void SharedDtor();
			void SetCachedSize(int size) const final;
			void InternalSwap(StaticMapData* other);
			friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
			static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
				return "protobuf.staticdata.StaticMapData";
			}
		protected:
			explicit StaticMapData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		private:
			static void ArenaDtor(void* object);
			inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
		public:

			::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
		private:
			static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
				::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_staticmapdata_2eproto);
				return ::descriptor_table_staticmapdata_2eproto.file_level_metadata[kIndexInFileMessages];
			}

		public:

			// nested types ----------------------------------------------------

			// accessors -------------------------------------------------------

			enum : int {
				kHousedataFieldNumber = 2,
				kHouseidFieldNumber = 1,
			};
			// optional .protobuf.staticdata.HouseData housedata = 2;
			bool has_housedata() const;
		private:
			bool _internal_has_housedata() const;
		public:
			void clear_housedata();
			const ::protobuf::staticdata::HouseData& housedata() const;
			::protobuf::staticdata::HouseData* release_housedata();
			::protobuf::staticdata::HouseData* mutable_housedata();
			void set_allocated_housedata(::protobuf::staticdata::HouseData* housedata);
		private:
			const ::protobuf::staticdata::HouseData& _internal_housedata() const;
			::protobuf::staticdata::HouseData* _internal_mutable_housedata();
		public:
			void unsafe_arena_set_allocated_housedata(
				::protobuf::staticdata::HouseData* housedata);
			::protobuf::staticdata::HouseData* unsafe_arena_release_housedata();

			// optional uint32 houseid = 1;
			bool has_houseid() const;
		private:
			bool _internal_has_houseid() const;
		public:
			void clear_houseid();
			::PROTOBUF_NAMESPACE_ID::uint32 houseid() const;
			void set_houseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
		private:
			::PROTOBUF_NAMESPACE_ID::uint32 _internal_houseid() const;
			void _internal_set_houseid(::PROTOBUF_NAMESPACE_ID::uint32 value);
		public:

			// @@protoc_insertion_point(class_scope:protobuf.staticdata.StaticMapData)
		private:
			class _Internal;

			template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
			typedef void InternalArenaConstructable_;
			typedef void DestructorSkippable_;
			::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
			mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
			::protobuf::staticdata::HouseData* housedata_;
			::PROTOBUF_NAMESPACE_ID::uint32 houseid_;
			friend struct ::TableStruct_staticmapdata_2eproto;
		};
		// ===================================================================


		// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StaticData

// repeated .protobuf.staticdata.StaticMapData mapdata = 1;
		inline int StaticData::_internal_mapdata_size() const {
			return mapdata_.size();
		}
		inline int StaticData::mapdata_size() const {
			return _internal_mapdata_size();
		}
		inline void StaticData::clear_mapdata() {
			mapdata_.Clear();
		}
		inline ::protobuf::staticdata::StaticMapData* StaticData::mutable_mapdata(int index) {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.StaticData.mapdata)
			return mapdata_.Mutable(index);
		}
		inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::StaticMapData >*
			StaticData::mutable_mapdata() {
			// @@protoc_insertion_point(field_mutable_list:protobuf.staticdata.StaticData.mapdata)
			return &mapdata_;
		}
		inline const ::protobuf::staticdata::StaticMapData& StaticData::_internal_mapdata(int index) const {
			return mapdata_.Get(index);
		}
		inline const ::protobuf::staticdata::StaticMapData& StaticData::mapdata(int index) const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.StaticData.mapdata)
			return _internal_mapdata(index);
		}
		inline ::protobuf::staticdata::StaticMapData* StaticData::_internal_add_mapdata() {
			return mapdata_.Add();
		}
		inline ::protobuf::staticdata::StaticMapData* StaticData::add_mapdata() {
			// @@protoc_insertion_point(field_add:protobuf.staticdata.StaticData.mapdata)
			return _internal_add_mapdata();
		}
		inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::StaticMapData >&
			StaticData::mapdata() const {
			// @@protoc_insertion_point(field_list:protobuf.staticdata.StaticData.mapdata)
			return mapdata_;
		}

		// repeated .protobuf.staticdata.House house = 3;
		inline int StaticData::_internal_house_size() const {
			return house_.size();
		}
		inline int StaticData::house_size() const {
			return _internal_house_size();
		}
		inline void StaticData::clear_house() {
			house_.Clear();
		}
		inline ::protobuf::staticdata::House* StaticData::mutable_house(int index) {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.StaticData.house)
			return house_.Mutable(index);
		}
		inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::House >*
			StaticData::mutable_house() {
			// @@protoc_insertion_point(field_mutable_list:protobuf.staticdata.StaticData.house)
			return &house_;
		}
		inline const ::protobuf::staticdata::House& StaticData::_internal_house(int index) const {
			return house_.Get(index);
		}
		inline const ::protobuf::staticdata::House& StaticData::house(int index) const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.StaticData.house)
			return _internal_house(index);
		}
		inline ::protobuf::staticdata::House* StaticData::_internal_add_house() {
			return house_.Add();
		}
		inline ::protobuf::staticdata::House* StaticData::add_house() {
			// @@protoc_insertion_point(field_add:protobuf.staticdata.StaticData.house)
			return _internal_add_house();
		}
		inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::House >&
			StaticData::house() const {
			// @@protoc_insertion_point(field_list:protobuf.staticdata.StaticData.house)
			return house_;
		}

		// -------------------------------------------------------------------

		// HousePosition

		// optional uint32 pos_x = 1;
		inline bool HousePosition::_internal_has_pos_x() const {
			bool value = (_has_bits_[0] & 0x00000001u) != 0;
			return value;
		}
		inline bool HousePosition::has_pos_x() const {
			return _internal_has_pos_x();
		}
		inline void HousePosition::clear_pos_x() {
			pos_x_ = 0u;
			_has_bits_[0] &= ~0x00000001u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePosition::_internal_pos_x() const {
			return pos_x_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePosition::pos_x() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HousePosition.pos_x)
			return _internal_pos_x();
		}
		inline void HousePosition::_internal_set_pos_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000001u;
			pos_x_ = value;
		}
		inline void HousePosition::set_pos_x(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_pos_x(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.HousePosition.pos_x)
		}

		// optional uint32 pos_y = 2;
		inline bool HousePosition::_internal_has_pos_y() const {
			bool value = (_has_bits_[0] & 0x00000002u) != 0;
			return value;
		}
		inline bool HousePosition::has_pos_y() const {
			return _internal_has_pos_y();
		}
		inline void HousePosition::clear_pos_y() {
			pos_y_ = 0u;
			_has_bits_[0] &= ~0x00000002u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePosition::_internal_pos_y() const {
			return pos_y_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePosition::pos_y() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HousePosition.pos_y)
			return _internal_pos_y();
		}
		inline void HousePosition::_internal_set_pos_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000002u;
			pos_y_ = value;
		}
		inline void HousePosition::set_pos_y(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_pos_y(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.HousePosition.pos_y)
		}

		// optional uint32 pos_z = 3;
		inline bool HousePosition::_internal_has_pos_z() const {
			bool value = (_has_bits_[0] & 0x00000004u) != 0;
			return value;
		}
		inline bool HousePosition::has_pos_z() const {
			return _internal_has_pos_z();
		}
		inline void HousePosition::clear_pos_z() {
			pos_z_ = 0u;
			_has_bits_[0] &= ~0x00000004u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePosition::_internal_pos_z() const {
			return pos_z_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePosition::pos_z() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HousePosition.pos_z)
			return _internal_pos_z();
		}
		inline void HousePosition::_internal_set_pos_z(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000004u;
			pos_z_ = value;
		}
		inline void HousePosition::set_pos_z(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_pos_z(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.HousePosition.pos_z)
		}

		// -------------------------------------------------------------------

		// House

		// optional uint32 house_id = 1;
		inline bool House::_internal_has_house_id() const {
			bool value = (_has_bits_[0] & 0x00000010u) != 0;
			return value;
		}
		inline bool House::has_house_id() const {
			return _internal_has_house_id();
		}
		inline void House::clear_house_id() {
			house_id_ = 0u;
			_has_bits_[0] &= ~0x00000010u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 House::_internal_house_id() const {
			return house_id_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 House::house_id() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.House.house_id)
			return _internal_house_id();
		}
		inline void House::_internal_set_house_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000010u;
			house_id_ = value;
		}
		inline void House::set_house_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_house_id(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.House.house_id)
		}

		// optional string name = 2;
		inline bool House::_internal_has_name() const {
			bool value = (_has_bits_[0] & 0x00000001u) != 0;
			return value;
		}
		inline bool House::has_name() const {
			return _internal_has_name();
		}
		inline void House::clear_name() {
			name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
			_has_bits_[0] &= ~0x00000001u;
		}
		inline const std::string& House::name() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.House.name)
			return _internal_name();
		}
		inline void House::set_name(const std::string& value) {
			_internal_set_name(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.House.name)
		}
		inline std::string* House::mutable_name() {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.House.name)
			return _internal_mutable_name();
		}
		inline const std::string& House::_internal_name() const {
			return name_.Get();
		}
		inline void House::_internal_set_name(const std::string& value) {
			_has_bits_[0] |= 0x00000001u;
			name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
		}
		inline void House::set_name(std::string&& value) {
			_has_bits_[0] |= 0x00000001u;
			name_.Set(
				&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
			// @@protoc_insertion_point(field_set_rvalue:protobuf.staticdata.House.name)
		}
		inline void House::set_name(const char* value) {
			GOOGLE_DCHECK(value != nullptr);
			_has_bits_[0] |= 0x00000001u;
			name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
				GetArena());
			// @@protoc_insertion_point(field_set_char:protobuf.staticdata.House.name)
		}
		inline void House::set_name(const char* value,
			size_t size) {
			_has_bits_[0] |= 0x00000001u;
			name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
				reinterpret_cast<const char*>(value), size), GetArena());
			// @@protoc_insertion_point(field_set_pointer:protobuf.staticdata.House.name)
		}
		inline std::string* House::_internal_mutable_name() {
			_has_bits_[0] |= 0x00000001u;
			return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
		}
		inline std::string* House::release_name() {
			// @@protoc_insertion_point(field_release:protobuf.staticdata.House.name)
			if (!_internal_has_name()) {
				return nullptr;
			}
			_has_bits_[0] &= ~0x00000001u;
			return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
		}
		inline void House::set_allocated_name(std::string* name) {
			if (name != nullptr) {
				_has_bits_[0] |= 0x00000001u;
			}
			else {
				_has_bits_[0] &= ~0x00000001u;
			}
			name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
				GetArena());
			// @@protoc_insertion_point(field_set_allocated:protobuf.staticdata.House.name)
		}
		inline std::string* House::unsafe_arena_release_name() {
			// @@protoc_insertion_point(field_unsafe_arena_release:protobuf.staticdata.House.name)
			GOOGLE_DCHECK(GetArena() != nullptr);
			_has_bits_[0] &= ~0x00000001u;
			return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
				GetArena());
		}
		inline void House::unsafe_arena_set_allocated_name(
			std::string* name) {
			GOOGLE_DCHECK(GetArena() != nullptr);
			if (name != nullptr) {
				_has_bits_[0] |= 0x00000001u;
			}
			else {
				_has_bits_[0] &= ~0x00000001u;
			}
			name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
				name, GetArena());
			// @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.staticdata.House.name)
		}

		// optional string unknownstring = 3;
		inline bool House::_internal_has_unknownstring() const {
			bool value = (_has_bits_[0] & 0x00000002u) != 0;
			return value;
		}
		inline bool House::has_unknownstring() const {
			return _internal_has_unknownstring();
		}
		inline void House::clear_unknownstring() {
			unknownstring_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
			_has_bits_[0] &= ~0x00000002u;
		}
		inline const std::string& House::unknownstring() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.House.unknownstring)
			return _internal_unknownstring();
		}
		inline void House::set_unknownstring(const std::string& value) {
			_internal_set_unknownstring(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.House.unknownstring)
		}
		inline std::string* House::mutable_unknownstring() {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.House.unknownstring)
			return _internal_mutable_unknownstring();
		}
		inline const std::string& House::_internal_unknownstring() const {
			return unknownstring_.Get();
		}
		inline void House::_internal_set_unknownstring(const std::string& value) {
			_has_bits_[0] |= 0x00000002u;
			unknownstring_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
		}
		inline void House::set_unknownstring(std::string&& value) {
			_has_bits_[0] |= 0x00000002u;
			unknownstring_.Set(
				&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
			// @@protoc_insertion_point(field_set_rvalue:protobuf.staticdata.House.unknownstring)
		}
		inline void House::set_unknownstring(const char* value) {
			GOOGLE_DCHECK(value != nullptr);
			_has_bits_[0] |= 0x00000002u;
			unknownstring_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
				GetArena());
			// @@protoc_insertion_point(field_set_char:protobuf.staticdata.House.unknownstring)
		}
		inline void House::set_unknownstring(const char* value,
			size_t size) {
			_has_bits_[0] |= 0x00000002u;
			unknownstring_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
				reinterpret_cast<const char*>(value), size), GetArena());
			// @@protoc_insertion_point(field_set_pointer:protobuf.staticdata.House.unknownstring)
		}
		inline std::string* House::_internal_mutable_unknownstring() {
			_has_bits_[0] |= 0x00000002u;
			return unknownstring_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
		}
		inline std::string* House::release_unknownstring() {
			// @@protoc_insertion_point(field_release:protobuf.staticdata.House.unknownstring)
			if (!_internal_has_unknownstring()) {
				return nullptr;
			}
			_has_bits_[0] &= ~0x00000002u;
			return unknownstring_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
		}
		inline void House::set_allocated_unknownstring(std::string* unknownstring) {
			if (unknownstring != nullptr) {
				_has_bits_[0] |= 0x00000002u;
			}
			else {
				_has_bits_[0] &= ~0x00000002u;
			}
			unknownstring_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), unknownstring,
				GetArena());
			// @@protoc_insertion_point(field_set_allocated:protobuf.staticdata.House.unknownstring)
		}
		inline std::string* House::unsafe_arena_release_unknownstring() {
			// @@protoc_insertion_point(field_unsafe_arena_release:protobuf.staticdata.House.unknownstring)
			GOOGLE_DCHECK(GetArena() != nullptr);
			_has_bits_[0] &= ~0x00000002u;
			return unknownstring_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
				GetArena());
		}
		inline void House::unsafe_arena_set_allocated_unknownstring(
			std::string* unknownstring) {
			GOOGLE_DCHECK(GetArena() != nullptr);
			if (unknownstring != nullptr) {
				_has_bits_[0] |= 0x00000002u;
			}
			else {
				_has_bits_[0] &= ~0x00000002u;
			}
			unknownstring_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
				unknownstring, GetArena());
			// @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.staticdata.House.unknownstring)
		}

		// optional uint32 price = 4;
		inline bool House::_internal_has_price() const {
			bool value = (_has_bits_[0] & 0x00000020u) != 0;
			return value;
		}
		inline bool House::has_price() const {
			return _internal_has_price();
		}
		inline void House::clear_price() {
			price_ = 0u;
			_has_bits_[0] &= ~0x00000020u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 House::_internal_price() const {
			return price_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 House::price() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.House.price)
			return _internal_price();
		}
		inline void House::_internal_set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000020u;
			price_ = value;
		}
		inline void House::set_price(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_price(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.House.price)
		}

		// optional uint32 beds = 5;
		inline bool House::_internal_has_beds() const {
			bool value = (_has_bits_[0] & 0x00000040u) != 0;
			return value;
		}
		inline bool House::has_beds() const {
			return _internal_has_beds();
		}
		inline void House::clear_beds() {
			beds_ = 0u;
			_has_bits_[0] &= ~0x00000040u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 House::_internal_beds() const {
			return beds_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 House::beds() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.House.beds)
			return _internal_beds();
		}
		inline void House::_internal_set_beds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000040u;
			beds_ = value;
		}
		inline void House::set_beds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_beds(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.House.beds)
		}

		// optional .protobuf.staticdata.HousePosition housePosition = 6;
		inline bool House::_internal_has_houseposition() const {
			bool value = (_has_bits_[0] & 0x00000008u) != 0;
			PROTOBUF_ASSUME(!value || houseposition_ != nullptr);
			return value;
		}
		inline bool House::has_houseposition() const {
			return _internal_has_houseposition();
		}
		inline void House::clear_houseposition() {
			if (houseposition_ != nullptr) houseposition_->Clear();
			_has_bits_[0] &= ~0x00000008u;
		}
		inline const ::protobuf::staticdata::HousePosition& House::_internal_houseposition() const {
			const ::protobuf::staticdata::HousePosition* p = houseposition_;
			return p != nullptr ? *p : *reinterpret_cast<const ::protobuf::staticdata::HousePosition*>(
				&::protobuf::staticdata::_HousePosition_default_instance_);
		}
		inline const ::protobuf::staticdata::HousePosition& House::houseposition() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.House.housePosition)
			return _internal_houseposition();
		}
		inline void House::unsafe_arena_set_allocated_houseposition(
			::protobuf::staticdata::HousePosition* houseposition) {
			if (GetArena() == nullptr) {
				delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(houseposition_);
			}
			houseposition_ = houseposition;
			if (houseposition) {
				_has_bits_[0] |= 0x00000008u;
			}
			else {
				_has_bits_[0] &= ~0x00000008u;
			}
			// @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.staticdata.House.housePosition)
		}
		inline ::protobuf::staticdata::HousePosition* House::release_houseposition() {
			auto temp = unsafe_arena_release_houseposition();
			if (GetArena() != nullptr) {
				temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
			}
			return temp;
		}
		inline ::protobuf::staticdata::HousePosition* House::unsafe_arena_release_houseposition() {
			// @@protoc_insertion_point(field_release:protobuf.staticdata.House.housePosition)
			_has_bits_[0] &= ~0x00000008u;
			::protobuf::staticdata::HousePosition* temp = houseposition_;
			houseposition_ = nullptr;
			return temp;
		}
		inline ::protobuf::staticdata::HousePosition* House::_internal_mutable_houseposition() {
			_has_bits_[0] |= 0x00000008u;
			if (houseposition_ == nullptr) {
				auto* p = CreateMaybeMessage<::protobuf::staticdata::HousePosition>(GetArena());
				houseposition_ = p;
			}
			return houseposition_;
		}
		inline ::protobuf::staticdata::HousePosition* House::mutable_houseposition() {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.House.housePosition)
			return _internal_mutable_houseposition();
		}
		inline void House::set_allocated_houseposition(::protobuf::staticdata::HousePosition* houseposition) {
			::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
			if (message_arena == nullptr) {
				delete houseposition_;
			}
			if (houseposition) {
				::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
					::PROTOBUF_NAMESPACE_ID::Arena::GetArena(houseposition);
				if (message_arena != submessage_arena) {
					houseposition = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
						message_arena, houseposition, submessage_arena);
				}
				_has_bits_[0] |= 0x00000008u;
			}
			else {
				_has_bits_[0] &= ~0x00000008u;
			}
			houseposition_ = houseposition;
			// @@protoc_insertion_point(field_set_allocated:protobuf.staticdata.House.housePosition)
		}

		// optional uint32 size_sqm = 7;
		inline bool House::_internal_has_size_sqm() const {
			bool value = (_has_bits_[0] & 0x00000080u) != 0;
			return value;
		}
		inline bool House::has_size_sqm() const {
			return _internal_has_size_sqm();
		}
		inline void House::clear_size_sqm() {
			size_sqm_ = 0u;
			_has_bits_[0] &= ~0x00000080u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 House::_internal_size_sqm() const {
			return size_sqm_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 House::size_sqm() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.House.size_sqm)
			return _internal_size_sqm();
		}
		inline void House::_internal_set_size_sqm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000080u;
			size_sqm_ = value;
		}
		inline void House::set_size_sqm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_size_sqm(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.House.size_sqm)
		}

		// optional bool guildhall = 8;
		inline bool House::_internal_has_guildhall() const {
			bool value = (_has_bits_[0] & 0x00000100u) != 0;
			return value;
		}
		inline bool House::has_guildhall() const {
			return _internal_has_guildhall();
		}
		inline void House::clear_guildhall() {
			guildhall_ = false;
			_has_bits_[0] &= ~0x00000100u;
		}
		inline bool House::_internal_guildhall() const {
			return guildhall_;
		}
		inline bool House::guildhall() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.House.guildhall)
			return _internal_guildhall();
		}
		inline void House::_internal_set_guildhall(bool value) {
			_has_bits_[0] |= 0x00000100u;
			guildhall_ = value;
		}
		inline void House::set_guildhall(bool value) {
			_internal_set_guildhall(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.House.guildhall)
		}

		// optional string city = 9;
		inline bool House::_internal_has_city() const {
			bool value = (_has_bits_[0] & 0x00000004u) != 0;
			return value;
		}
		inline bool House::has_city() const {
			return _internal_has_city();
		}
		inline void House::clear_city() {
			city_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
			_has_bits_[0] &= ~0x00000004u;
		}
		inline const std::string& House::city() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.House.city)
			return _internal_city();
		}
		inline void House::set_city(const std::string& value) {
			_internal_set_city(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.House.city)
		}
		inline std::string* House::mutable_city() {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.House.city)
			return _internal_mutable_city();
		}
		inline const std::string& House::_internal_city() const {
			return city_.Get();
		}
		inline void House::_internal_set_city(const std::string& value) {
			_has_bits_[0] |= 0x00000004u;
			city_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
		}
		inline void House::set_city(std::string&& value) {
			_has_bits_[0] |= 0x00000004u;
			city_.Set(
				&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
			// @@protoc_insertion_point(field_set_rvalue:protobuf.staticdata.House.city)
		}
		inline void House::set_city(const char* value) {
			GOOGLE_DCHECK(value != nullptr);
			_has_bits_[0] |= 0x00000004u;
			city_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
				GetArena());
			// @@protoc_insertion_point(field_set_char:protobuf.staticdata.House.city)
		}
		inline void House::set_city(const char* value,
			size_t size) {
			_has_bits_[0] |= 0x00000004u;
			city_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
				reinterpret_cast<const char*>(value), size), GetArena());
			// @@protoc_insertion_point(field_set_pointer:protobuf.staticdata.House.city)
		}
		inline std::string* House::_internal_mutable_city() {
			_has_bits_[0] |= 0x00000004u;
			return city_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
		}
		inline std::string* House::release_city() {
			// @@protoc_insertion_point(field_release:protobuf.staticdata.House.city)
			if (!_internal_has_city()) {
				return nullptr;
			}
			_has_bits_[0] &= ~0x00000004u;
			return city_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
		}
		inline void House::set_allocated_city(std::string* city) {
			if (city != nullptr) {
				_has_bits_[0] |= 0x00000004u;
			}
			else {
				_has_bits_[0] &= ~0x00000004u;
			}
			city_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), city,
				GetArena());
			// @@protoc_insertion_point(field_set_allocated:protobuf.staticdata.House.city)
		}
		inline std::string* House::unsafe_arena_release_city() {
			// @@protoc_insertion_point(field_unsafe_arena_release:protobuf.staticdata.House.city)
			GOOGLE_DCHECK(GetArena() != nullptr);
			_has_bits_[0] &= ~0x00000004u;
			return city_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
				GetArena());
		}
		inline void House::unsafe_arena_set_allocated_city(
			std::string* city) {
			GOOGLE_DCHECK(GetArena() != nullptr);
			if (city != nullptr) {
				_has_bits_[0] |= 0x00000004u;
			}
			else {
				_has_bits_[0] &= ~0x00000004u;
			}
			city_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
				city, GetArena());
			// @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.staticdata.House.city)
		}

		// optional bool shop = 10;
		inline bool House::_internal_has_shop() const {
			bool value = (_has_bits_[0] & 0x00000200u) != 0;
			return value;
		}
		inline bool House::has_shop() const {
			return _internal_has_shop();
		}
		inline void House::clear_shop() {
			shop_ = false;
			_has_bits_[0] &= ~0x00000200u;
		}
		inline bool House::_internal_shop() const {
			return shop_;
		}
		inline bool House::shop() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.House.shop)
			return _internal_shop();
		}
		inline void House::_internal_set_shop(bool value) {
			_has_bits_[0] |= 0x00000200u;
			shop_ = value;
		}
		inline void House::set_shop(bool value) {
			_internal_set_shop(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.House.shop)
		}

		// -------------------------------------------------------------------

		// HousePositionTopLeft

		// optional uint32 positionx = 1;
		inline bool HousePositionTopLeft::_internal_has_positionx() const {
			bool value = (_has_bits_[0] & 0x00000001u) != 0;
			return value;
		}
		inline bool HousePositionTopLeft::has_positionx() const {
			return _internal_has_positionx();
		}
		inline void HousePositionTopLeft::clear_positionx() {
			positionx_ = 0u;
			_has_bits_[0] &= ~0x00000001u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePositionTopLeft::_internal_positionx() const {
			return positionx_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePositionTopLeft::positionx() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HousePositionTopLeft.positionx)
			return _internal_positionx();
		}
		inline void HousePositionTopLeft::_internal_set_positionx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000001u;
			positionx_ = value;
		}
		inline void HousePositionTopLeft::set_positionx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_positionx(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.HousePositionTopLeft.positionx)
		}

		// optional uint32 positiony = 2;
		inline bool HousePositionTopLeft::_internal_has_positiony() const {
			bool value = (_has_bits_[0] & 0x00000002u) != 0;
			return value;
		}
		inline bool HousePositionTopLeft::has_positiony() const {
			return _internal_has_positiony();
		}
		inline void HousePositionTopLeft::clear_positiony() {
			positiony_ = 0u;
			_has_bits_[0] &= ~0x00000002u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePositionTopLeft::_internal_positiony() const {
			return positiony_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePositionTopLeft::positiony() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HousePositionTopLeft.positiony)
			return _internal_positiony();
		}
		inline void HousePositionTopLeft::_internal_set_positiony(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000002u;
			positiony_ = value;
		}
		inline void HousePositionTopLeft::set_positiony(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_positiony(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.HousePositionTopLeft.positiony)
		}

		// optional uint32 positionz = 3;
		inline bool HousePositionTopLeft::_internal_has_positionz() const {
			bool value = (_has_bits_[0] & 0x00000004u) != 0;
			return value;
		}
		inline bool HousePositionTopLeft::has_positionz() const {
			return _internal_has_positionz();
		}
		inline void HousePositionTopLeft::clear_positionz() {
			positionz_ = 0u;
			_has_bits_[0] &= ~0x00000004u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePositionTopLeft::_internal_positionz() const {
			return positionz_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HousePositionTopLeft::positionz() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HousePositionTopLeft.positionz)
			return _internal_positionz();
		}
		inline void HousePositionTopLeft::_internal_set_positionz(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000004u;
			positionz_ = value;
		}
		inline void HousePositionTopLeft::set_positionz(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_positionz(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.HousePositionTopLeft.positionz)
		}

		// -------------------------------------------------------------------

		// HouseSizeSquare

		// optional uint32 positionx = 1;
		inline bool HouseSizeSquare::_internal_has_positionx() const {
			bool value = (_has_bits_[0] & 0x00000001u) != 0;
			return value;
		}
		inline bool HouseSizeSquare::has_positionx() const {
			return _internal_has_positionx();
		}
		inline void HouseSizeSquare::clear_positionx() {
			positionx_ = 0u;
			_has_bits_[0] &= ~0x00000001u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HouseSizeSquare::_internal_positionx() const {
			return positionx_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HouseSizeSquare::positionx() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HouseSizeSquare.positionx)
			return _internal_positionx();
		}
		inline void HouseSizeSquare::_internal_set_positionx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000001u;
			positionx_ = value;
		}
		inline void HouseSizeSquare::set_positionx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_positionx(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.HouseSizeSquare.positionx)
		}

		// optional uint32 positiony = 2;
		inline bool HouseSizeSquare::_internal_has_positiony() const {
			bool value = (_has_bits_[0] & 0x00000002u) != 0;
			return value;
		}
		inline bool HouseSizeSquare::has_positiony() const {
			return _internal_has_positiony();
		}
		inline void HouseSizeSquare::clear_positiony() {
			positiony_ = 0u;
			_has_bits_[0] &= ~0x00000002u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HouseSizeSquare::_internal_positiony() const {
			return positiony_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HouseSizeSquare::positiony() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HouseSizeSquare.positiony)
			return _internal_positiony();
		}
		inline void HouseSizeSquare::_internal_set_positiony(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000002u;
			positiony_ = value;
		}
		inline void HouseSizeSquare::set_positiony(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_positiony(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.HouseSizeSquare.positiony)
		}

		// optional uint32 positionz = 3;
		inline bool HouseSizeSquare::_internal_has_positionz() const {
			bool value = (_has_bits_[0] & 0x00000004u) != 0;
			return value;
		}
		inline bool HouseSizeSquare::has_positionz() const {
			return _internal_has_positionz();
		}
		inline void HouseSizeSquare::clear_positionz() {
			positionz_ = 0u;
			_has_bits_[0] &= ~0x00000004u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HouseSizeSquare::_internal_positionz() const {
			return positionz_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 HouseSizeSquare::positionz() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HouseSizeSquare.positionz)
			return _internal_positionz();
		}
		inline void HouseSizeSquare::_internal_set_positionz(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000004u;
			positionz_ = value;
		}
		inline void HouseSizeSquare::set_positionz(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_positionz(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.HouseSizeSquare.positionz)
		}

		// -------------------------------------------------------------------

		// SqmIteratorValue

		// optional uint32 clientID = 1;
		inline bool SqmIteratorValue::_internal_has_clientid() const {
			bool value = (_has_bits_[0] & 0x00000001u) != 0;
			return value;
		}
		inline bool SqmIteratorValue::has_clientid() const {
			return _internal_has_clientid();
		}
		inline void SqmIteratorValue::clear_clientid() {
			clientid_ = 0u;
			_has_bits_[0] &= ~0x00000001u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 SqmIteratorValue::_internal_clientid() const {
			return clientid_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 SqmIteratorValue::clientid() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.SqmIteratorValue.clientID)
			return _internal_clientid();
		}
		inline void SqmIteratorValue::_internal_set_clientid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000001u;
			clientid_ = value;
		}
		inline void SqmIteratorValue::set_clientid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_clientid(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.SqmIteratorValue.clientID)
		}

		// -------------------------------------------------------------------

		// SqmSerialize

		// repeated .protobuf.staticdata.SqmIteratorValue item = 1;
		inline int SqmSerialize::_internal_item_size() const {
			return item_.size();
		}
		inline int SqmSerialize::item_size() const {
			return _internal_item_size();
		}
		inline void SqmSerialize::clear_item() {
			item_.Clear();
		}
		inline ::protobuf::staticdata::SqmIteratorValue* SqmSerialize::mutable_item(int index) {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.SqmSerialize.item)
			return item_.Mutable(index);
		}
		inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::SqmIteratorValue >*
			SqmSerialize::mutable_item() {
			// @@protoc_insertion_point(field_mutable_list:protobuf.staticdata.SqmSerialize.item)
			return &item_;
		}
		inline const ::protobuf::staticdata::SqmIteratorValue& SqmSerialize::_internal_item(int index) const {
			return item_.Get(index);
		}
		inline const ::protobuf::staticdata::SqmIteratorValue& SqmSerialize::item(int index) const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.SqmSerialize.item)
			return _internal_item(index);
		}
		inline ::protobuf::staticdata::SqmIteratorValue* SqmSerialize::_internal_add_item() {
			return item_.Add();
		}
		inline ::protobuf::staticdata::SqmIteratorValue* SqmSerialize::add_item() {
			// @@protoc_insertion_point(field_add:protobuf.staticdata.SqmSerialize.item)
			return _internal_add_item();
		}
		inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::SqmIteratorValue >&
			SqmSerialize::item() const {
			// @@protoc_insertion_point(field_list:protobuf.staticdata.SqmSerialize.item)
			return item_;
		}

		// optional uint32 jumpEmpty = 2;
		inline bool SqmSerialize::_internal_has_jumpempty() const {
			bool value = (_has_bits_[0] & 0x00000001u) != 0;
			return value;
		}
		inline bool SqmSerialize::has_jumpempty() const {
			return _internal_has_jumpempty();
		}
		inline void SqmSerialize::clear_jumpempty() {
			jumpempty_ = 0u;
			_has_bits_[0] &= ~0x00000001u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 SqmSerialize::_internal_jumpempty() const {
			return jumpempty_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 SqmSerialize::jumpempty() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.SqmSerialize.jumpEmpty)
			return _internal_jumpempty();
		}
		inline void SqmSerialize::_internal_set_jumpempty(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000001u;
			jumpempty_ = value;
		}
		inline void SqmSerialize::set_jumpempty(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_jumpempty(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.SqmSerialize.jumpEmpty)
		}

		// -------------------------------------------------------------------

		// HouseSerializeSqm

		// repeated .protobuf.staticdata.SqmSerialize sqmserialize = 3;
		inline int HouseSerializeSqm::_internal_sqmserialize_size() const {
			return sqmserialize_.size();
		}
		inline int HouseSerializeSqm::sqmserialize_size() const {
			return _internal_sqmserialize_size();
		}
		inline void HouseSerializeSqm::clear_sqmserialize() {
			sqmserialize_.Clear();
		}
		inline ::protobuf::staticdata::SqmSerialize* HouseSerializeSqm::mutable_sqmserialize(int index) {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.HouseSerializeSqm.sqmserialize)
			return sqmserialize_.Mutable(index);
		}
		inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::SqmSerialize >*
			HouseSerializeSqm::mutable_sqmserialize() {
			// @@protoc_insertion_point(field_mutable_list:protobuf.staticdata.HouseSerializeSqm.sqmserialize)
			return &sqmserialize_;
		}
		inline const ::protobuf::staticdata::SqmSerialize& HouseSerializeSqm::_internal_sqmserialize(int index) const {
			return sqmserialize_.Get(index);
		}
		inline const ::protobuf::staticdata::SqmSerialize& HouseSerializeSqm::sqmserialize(int index) const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HouseSerializeSqm.sqmserialize)
			return _internal_sqmserialize(index);
		}
		inline ::protobuf::staticdata::SqmSerialize* HouseSerializeSqm::_internal_add_sqmserialize() {
			return sqmserialize_.Add();
		}
		inline ::protobuf::staticdata::SqmSerialize* HouseSerializeSqm::add_sqmserialize() {
			// @@protoc_insertion_point(field_add:protobuf.staticdata.HouseSerializeSqm.sqmserialize)
			return _internal_add_sqmserialize();
		}
		inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf::staticdata::SqmSerialize >&
			HouseSerializeSqm::sqmserialize() const {
			// @@protoc_insertion_point(field_list:protobuf.staticdata.HouseSerializeSqm.sqmserialize)
			return sqmserialize_;
		}

		// -------------------------------------------------------------------

		// HouseSerialize

		// optional .protobuf.staticdata.HouseSerializeSqm housesqm = 2;
		inline bool HouseSerialize::_internal_has_housesqm() const {
			bool value = (_has_bits_[0] & 0x00000001u) != 0;
			PROTOBUF_ASSUME(!value || housesqm_ != nullptr);
			return value;
		}
		inline bool HouseSerialize::has_housesqm() const {
			return _internal_has_housesqm();
		}
		inline void HouseSerialize::clear_housesqm() {
			if (housesqm_ != nullptr) housesqm_->Clear();
			_has_bits_[0] &= ~0x00000001u;
		}
		inline const ::protobuf::staticdata::HouseSerializeSqm& HouseSerialize::_internal_housesqm() const {
			const ::protobuf::staticdata::HouseSerializeSqm* p = housesqm_;
			return p != nullptr ? *p : *reinterpret_cast<const ::protobuf::staticdata::HouseSerializeSqm*>(
				&::protobuf::staticdata::_HouseSerializeSqm_default_instance_);
		}
		inline const ::protobuf::staticdata::HouseSerializeSqm& HouseSerialize::housesqm() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HouseSerialize.housesqm)
			return _internal_housesqm();
		}
		inline void HouseSerialize::unsafe_arena_set_allocated_housesqm(
			::protobuf::staticdata::HouseSerializeSqm* housesqm) {
			if (GetArena() == nullptr) {
				delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(housesqm_);
			}
			housesqm_ = housesqm;
			if (housesqm) {
				_has_bits_[0] |= 0x00000001u;
			}
			else {
				_has_bits_[0] &= ~0x00000001u;
			}
			// @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.staticdata.HouseSerialize.housesqm)
		}
		inline ::protobuf::staticdata::HouseSerializeSqm* HouseSerialize::release_housesqm() {
			auto temp = unsafe_arena_release_housesqm();
			if (GetArena() != nullptr) {
				temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
			}
			return temp;
		}
		inline ::protobuf::staticdata::HouseSerializeSqm* HouseSerialize::unsafe_arena_release_housesqm() {
			// @@protoc_insertion_point(field_release:protobuf.staticdata.HouseSerialize.housesqm)
			_has_bits_[0] &= ~0x00000001u;
			::protobuf::staticdata::HouseSerializeSqm* temp = housesqm_;
			housesqm_ = nullptr;
			return temp;
		}
		inline ::protobuf::staticdata::HouseSerializeSqm* HouseSerialize::_internal_mutable_housesqm() {
			_has_bits_[0] |= 0x00000001u;
			if (housesqm_ == nullptr) {
				auto* p = CreateMaybeMessage<::protobuf::staticdata::HouseSerializeSqm>(GetArena());
				housesqm_ = p;
			}
			return housesqm_;
		}
		inline ::protobuf::staticdata::HouseSerializeSqm* HouseSerialize::mutable_housesqm() {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.HouseSerialize.housesqm)
			return _internal_mutable_housesqm();
		}
		inline void HouseSerialize::set_allocated_housesqm(::protobuf::staticdata::HouseSerializeSqm* housesqm) {
			::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
			if (message_arena == nullptr) {
				delete housesqm_;
			}
			if (housesqm) {
				::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
					::PROTOBUF_NAMESPACE_ID::Arena::GetArena(housesqm);
				if (message_arena != submessage_arena) {
					housesqm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
						message_arena, housesqm, submessage_arena);
				}
				_has_bits_[0] |= 0x00000001u;
			}
			else {
				_has_bits_[0] &= ~0x00000001u;
			}
			housesqm_ = housesqm;
			// @@protoc_insertion_point(field_set_allocated:protobuf.staticdata.HouseSerialize.housesqm)
		}

		// -------------------------------------------------------------------

		// HouseData

		// optional .protobuf.staticdata.HousePositionTopLeft topleft = 1;
		inline bool HouseData::_internal_has_topleft() const {
			bool value = (_has_bits_[0] & 0x00000001u) != 0;
			PROTOBUF_ASSUME(!value || topleft_ != nullptr);
			return value;
		}
		inline bool HouseData::has_topleft() const {
			return _internal_has_topleft();
		}
		inline void HouseData::clear_topleft() {
			if (topleft_ != nullptr) topleft_->Clear();
			_has_bits_[0] &= ~0x00000001u;
		}
		inline const ::protobuf::staticdata::HousePositionTopLeft& HouseData::_internal_topleft() const {
			const ::protobuf::staticdata::HousePositionTopLeft* p = topleft_;
			return p != nullptr ? *p : *reinterpret_cast<const ::protobuf::staticdata::HousePositionTopLeft*>(
				&::protobuf::staticdata::_HousePositionTopLeft_default_instance_);
		}
		inline const ::protobuf::staticdata::HousePositionTopLeft& HouseData::topleft() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HouseData.topleft)
			return _internal_topleft();
		}
		inline void HouseData::unsafe_arena_set_allocated_topleft(
			::protobuf::staticdata::HousePositionTopLeft* topleft) {
			if (GetArena() == nullptr) {
				delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(topleft_);
			}
			topleft_ = topleft;
			if (topleft) {
				_has_bits_[0] |= 0x00000001u;
			}
			else {
				_has_bits_[0] &= ~0x00000001u;
			}
			// @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.staticdata.HouseData.topleft)
		}
		inline ::protobuf::staticdata::HousePositionTopLeft* HouseData::release_topleft() {
			auto temp = unsafe_arena_release_topleft();
			if (GetArena() != nullptr) {
				temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
			}
			return temp;
		}
		inline ::protobuf::staticdata::HousePositionTopLeft* HouseData::unsafe_arena_release_topleft() {
			// @@protoc_insertion_point(field_release:protobuf.staticdata.HouseData.topleft)
			_has_bits_[0] &= ~0x00000001u;
			::protobuf::staticdata::HousePositionTopLeft* temp = topleft_;
			topleft_ = nullptr;
			return temp;
		}
		inline ::protobuf::staticdata::HousePositionTopLeft* HouseData::_internal_mutable_topleft() {
			_has_bits_[0] |= 0x00000001u;
			if (topleft_ == nullptr) {
				auto* p = CreateMaybeMessage<::protobuf::staticdata::HousePositionTopLeft>(GetArena());
				topleft_ = p;
			}
			return topleft_;
		}
		inline ::protobuf::staticdata::HousePositionTopLeft* HouseData::mutable_topleft() {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.HouseData.topleft)
			return _internal_mutable_topleft();
		}
		inline void HouseData::set_allocated_topleft(::protobuf::staticdata::HousePositionTopLeft* topleft) {
			::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
			if (message_arena == nullptr) {
				delete topleft_;
			}
			if (topleft) {
				::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
					::PROTOBUF_NAMESPACE_ID::Arena::GetArena(topleft);
				if (message_arena != submessage_arena) {
					topleft = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
						message_arena, topleft, submessage_arena);
				}
				_has_bits_[0] |= 0x00000001u;
			}
			else {
				_has_bits_[0] &= ~0x00000001u;
			}
			topleft_ = topleft;
			// @@protoc_insertion_point(field_set_allocated:protobuf.staticdata.HouseData.topleft)
		}

		// optional .protobuf.staticdata.HouseSizeSquare housesquare = 2;
		inline bool HouseData::_internal_has_housesquare() const {
			bool value = (_has_bits_[0] & 0x00000002u) != 0;
			PROTOBUF_ASSUME(!value || housesquare_ != nullptr);
			return value;
		}
		inline bool HouseData::has_housesquare() const {
			return _internal_has_housesquare();
		}
		inline void HouseData::clear_housesquare() {
			if (housesquare_ != nullptr) housesquare_->Clear();
			_has_bits_[0] &= ~0x00000002u;
		}
		inline const ::protobuf::staticdata::HouseSizeSquare& HouseData::_internal_housesquare() const {
			const ::protobuf::staticdata::HouseSizeSquare* p = housesquare_;
			return p != nullptr ? *p : *reinterpret_cast<const ::protobuf::staticdata::HouseSizeSquare*>(
				&::protobuf::staticdata::_HouseSizeSquare_default_instance_);
		}
		inline const ::protobuf::staticdata::HouseSizeSquare& HouseData::housesquare() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HouseData.housesquare)
			return _internal_housesquare();
		}
		inline void HouseData::unsafe_arena_set_allocated_housesquare(
			::protobuf::staticdata::HouseSizeSquare* housesquare) {
			if (GetArena() == nullptr) {
				delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(housesquare_);
			}
			housesquare_ = housesquare;
			if (housesquare) {
				_has_bits_[0] |= 0x00000002u;
			}
			else {
				_has_bits_[0] &= ~0x00000002u;
			}
			// @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.staticdata.HouseData.housesquare)
		}
		inline ::protobuf::staticdata::HouseSizeSquare* HouseData::release_housesquare() {
			auto temp = unsafe_arena_release_housesquare();
			if (GetArena() != nullptr) {
				temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
			}
			return temp;
		}
		inline ::protobuf::staticdata::HouseSizeSquare* HouseData::unsafe_arena_release_housesquare() {
			// @@protoc_insertion_point(field_release:protobuf.staticdata.HouseData.housesquare)
			_has_bits_[0] &= ~0x00000002u;
			::protobuf::staticdata::HouseSizeSquare* temp = housesquare_;
			housesquare_ = nullptr;
			return temp;
		}
		inline ::protobuf::staticdata::HouseSizeSquare* HouseData::_internal_mutable_housesquare() {
			_has_bits_[0] |= 0x00000002u;
			if (housesquare_ == nullptr) {
				auto* p = CreateMaybeMessage<::protobuf::staticdata::HouseSizeSquare>(GetArena());
				housesquare_ = p;
			}
			return housesquare_;
		}
		inline ::protobuf::staticdata::HouseSizeSquare* HouseData::mutable_housesquare() {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.HouseData.housesquare)
			return _internal_mutable_housesquare();
		}
		inline void HouseData::set_allocated_housesquare(::protobuf::staticdata::HouseSizeSquare* housesquare) {
			::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
			if (message_arena == nullptr) {
				delete housesquare_;
			}
			if (housesquare) {
				::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
					::PROTOBUF_NAMESPACE_ID::Arena::GetArena(housesquare);
				if (message_arena != submessage_arena) {
					housesquare = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
						message_arena, housesquare, submessage_arena);
				}
				_has_bits_[0] |= 0x00000002u;
			}
			else {
				_has_bits_[0] &= ~0x00000002u;
			}
			housesquare_ = housesquare;
			// @@protoc_insertion_point(field_set_allocated:protobuf.staticdata.HouseData.housesquare)
		}

		// optional .protobuf.staticdata.HouseSerialize serialize = 3;
		inline bool HouseData::_internal_has_serialize() const {
			bool value = (_has_bits_[0] & 0x00000004u) != 0;
			PROTOBUF_ASSUME(!value || serialize_ != nullptr);
			return value;
		}
		inline bool HouseData::has_serialize() const {
			return _internal_has_serialize();
		}
		inline void HouseData::clear_serialize() {
			if (serialize_ != nullptr) serialize_->Clear();
			_has_bits_[0] &= ~0x00000004u;
		}
		inline const ::protobuf::staticdata::HouseSerialize& HouseData::_internal_serialize() const {
			const ::protobuf::staticdata::HouseSerialize* p = serialize_;
			return p != nullptr ? *p : *reinterpret_cast<const ::protobuf::staticdata::HouseSerialize*>(
				&::protobuf::staticdata::_HouseSerialize_default_instance_);
		}
		inline const ::protobuf::staticdata::HouseSerialize& HouseData::serialize() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.HouseData.serialize)
			return _internal_serialize();
		}
		inline void HouseData::unsafe_arena_set_allocated_serialize(
			::protobuf::staticdata::HouseSerialize* serialize) {
			if (GetArena() == nullptr) {
				delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(serialize_);
			}
			serialize_ = serialize;
			if (serialize) {
				_has_bits_[0] |= 0x00000004u;
			}
			else {
				_has_bits_[0] &= ~0x00000004u;
			}
			// @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.staticdata.HouseData.serialize)
		}
		inline ::protobuf::staticdata::HouseSerialize* HouseData::release_serialize() {
			auto temp = unsafe_arena_release_serialize();
			if (GetArena() != nullptr) {
				temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
			}
			return temp;
		}
		inline ::protobuf::staticdata::HouseSerialize* HouseData::unsafe_arena_release_serialize() {
			// @@protoc_insertion_point(field_release:protobuf.staticdata.HouseData.serialize)
			_has_bits_[0] &= ~0x00000004u;
			::protobuf::staticdata::HouseSerialize* temp = serialize_;
			serialize_ = nullptr;
			return temp;
		}
		inline ::protobuf::staticdata::HouseSerialize* HouseData::_internal_mutable_serialize() {
			_has_bits_[0] |= 0x00000004u;
			if (serialize_ == nullptr) {
				auto* p = CreateMaybeMessage<::protobuf::staticdata::HouseSerialize>(GetArena());
				serialize_ = p;
			}
			return serialize_;
		}
		inline ::protobuf::staticdata::HouseSerialize* HouseData::mutable_serialize() {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.HouseData.serialize)
			return _internal_mutable_serialize();
		}
		inline void HouseData::set_allocated_serialize(::protobuf::staticdata::HouseSerialize* serialize) {
			::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
			if (message_arena == nullptr) {
				delete serialize_;
			}
			if (serialize) {
				::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
					::PROTOBUF_NAMESPACE_ID::Arena::GetArena(serialize);
				if (message_arena != submessage_arena) {
					serialize = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
						message_arena, serialize, submessage_arena);
				}
				_has_bits_[0] |= 0x00000004u;
			}
			else {
				_has_bits_[0] &= ~0x00000004u;
			}
			serialize_ = serialize;
			// @@protoc_insertion_point(field_set_allocated:protobuf.staticdata.HouseData.serialize)
		}

		// -------------------------------------------------------------------

		// StaticMapData

		// optional uint32 houseid = 1;
		inline bool StaticMapData::_internal_has_houseid() const {
			bool value = (_has_bits_[0] & 0x00000002u) != 0;
			return value;
		}
		inline bool StaticMapData::has_houseid() const {
			return _internal_has_houseid();
		}
		inline void StaticMapData::clear_houseid() {
			houseid_ = 0u;
			_has_bits_[0] &= ~0x00000002u;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 StaticMapData::_internal_houseid() const {
			return houseid_;
		}
		inline ::PROTOBUF_NAMESPACE_ID::uint32 StaticMapData::houseid() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.StaticMapData.houseid)
			return _internal_houseid();
		}
		inline void StaticMapData::_internal_set_houseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_has_bits_[0] |= 0x00000002u;
			houseid_ = value;
		}
		inline void StaticMapData::set_houseid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
			_internal_set_houseid(value);
			// @@protoc_insertion_point(field_set:protobuf.staticdata.StaticMapData.houseid)
		}

		// optional .protobuf.staticdata.HouseData housedata = 2;
		inline bool StaticMapData::_internal_has_housedata() const {
			bool value = (_has_bits_[0] & 0x00000001u) != 0;
			PROTOBUF_ASSUME(!value || housedata_ != nullptr);
			return value;
		}
		inline bool StaticMapData::has_housedata() const {
			return _internal_has_housedata();
		}
		inline void StaticMapData::clear_housedata() {
			if (housedata_ != nullptr) housedata_->Clear();
			_has_bits_[0] &= ~0x00000001u;
		}
		inline const ::protobuf::staticdata::HouseData& StaticMapData::_internal_housedata() const {
			const ::protobuf::staticdata::HouseData* p = housedata_;
			return p != nullptr ? *p : *reinterpret_cast<const ::protobuf::staticdata::HouseData*>(
				&::protobuf::staticdata::_HouseData_default_instance_);
		}
		inline const ::protobuf::staticdata::HouseData& StaticMapData::housedata() const {
			// @@protoc_insertion_point(field_get:protobuf.staticdata.StaticMapData.housedata)
			return _internal_housedata();
		}
		inline void StaticMapData::unsafe_arena_set_allocated_housedata(
			::protobuf::staticdata::HouseData* housedata) {
			if (GetArena() == nullptr) {
				delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(housedata_);
			}
			housedata_ = housedata;
			if (housedata) {
				_has_bits_[0] |= 0x00000001u;
			}
			else {
				_has_bits_[0] &= ~0x00000001u;
			}
			// @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.staticdata.StaticMapData.housedata)
		}
		inline ::protobuf::staticdata::HouseData* StaticMapData::release_housedata() {
			auto temp = unsafe_arena_release_housedata();
			if (GetArena() != nullptr) {
				temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
			}
			return temp;
		}
		inline ::protobuf::staticdata::HouseData* StaticMapData::unsafe_arena_release_housedata() {
			// @@protoc_insertion_point(field_release:protobuf.staticdata.StaticMapData.housedata)
			_has_bits_[0] &= ~0x00000001u;
			::protobuf::staticdata::HouseData* temp = housedata_;
			housedata_ = nullptr;
			return temp;
		}
		inline ::protobuf::staticdata::HouseData* StaticMapData::_internal_mutable_housedata() {
			_has_bits_[0] |= 0x00000001u;
			if (housedata_ == nullptr) {
				auto* p = CreateMaybeMessage<::protobuf::staticdata::HouseData>(GetArena());
				housedata_ = p;
			}
			return housedata_;
		}
		inline ::protobuf::staticdata::HouseData* StaticMapData::mutable_housedata() {
			// @@protoc_insertion_point(field_mutable:protobuf.staticdata.StaticMapData.housedata)
			return _internal_mutable_housedata();
		}
		inline void StaticMapData::set_allocated_housedata(::protobuf::staticdata::HouseData* housedata) {
			::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
			if (message_arena == nullptr) {
				delete housedata_;
			}
			if (housedata) {
				::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
					::PROTOBUF_NAMESPACE_ID::Arena::GetArena(housedata);
				if (message_arena != submessage_arena) {
					housedata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
						message_arena, housedata, submessage_arena);
				}
				_has_bits_[0] |= 0x00000001u;
			}
			else {
				_has_bits_[0] &= ~0x00000001u;
			}
			housedata_ = housedata;
			// @@protoc_insertion_point(field_set_allocated:protobuf.staticdata.StaticMapData.housedata)
		}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__
		// -------------------------------------------------------------------

		// -------------------------------------------------------------------

		// -------------------------------------------------------------------

		// -------------------------------------------------------------------

		// -------------------------------------------------------------------

		// -------------------------------------------------------------------

		// -------------------------------------------------------------------

		// -------------------------------------------------------------------

		// -------------------------------------------------------------------

		// -------------------------------------------------------------------


		// @@protoc_insertion_point(namespace_scope)

	}  // namespace staticdata
}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_staticmapdata_2eproto
